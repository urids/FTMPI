m4trace:/usr/local/share/aclocal/argz.m4:12: -1- AC_DEFUN([gl_FUNC_ARGZ], [gl_PREREQ_ARGZ

AC_CHECK_HEADERS([argz.h], [], [], [AC_INCLUDES_DEFAULT])

AC_CHECK_TYPES([error_t],
  [],
  [AC_DEFINE([error_t], [int],
   [Define to a type to use for `error_t' if it is not otherwise available.])
   AC_DEFINE([__error_t_defined], [1], [Define so that glibc/gnulib argp.h
    does not typedef error_t.])],
  [#if defined(HAVE_ARGZ_H)
#  include <argz.h>
#endif])

ARGZ_H=
AC_CHECK_FUNCS([argz_add argz_append argz_count argz_create_sep argz_insert \
	argz_next argz_stringify], [], [ARGZ_H=argz.h; AC_LIBOBJ([argz])])

dnl if have system argz functions, allow forced use of
dnl libltdl-supplied implementation (and default to do so
dnl on "known bad" systems). Could use a runtime check, but
dnl (a) detecting malloc issues is notoriously unreliable
dnl (b) only known system that declares argz functions,
dnl     provides them, yet they are broken, is cygwin
dnl     releases prior to 16-Mar-2007 (1.5.24 and earlier)
dnl So, it's more straightforward simply to special case
dnl this for known bad systems.
AS_IF([test -z "$ARGZ_H"],
    [AC_CACHE_CHECK(
        [if argz actually works],
        [lt_cv_sys_argz_works],
        [[case $host_os in #(
	 *cygwin*)
	   lt_cv_sys_argz_works=no
	   if test "$cross_compiling" != no; then
	     lt_cv_sys_argz_works="guessing no"
	   else
	     lt_sed_extract_leading_digits='s/^\([0-9\.]*\).*/\1/'
	     save_IFS=$IFS
	     IFS=-.
	     set x `uname -r | sed -e "$lt_sed_extract_leading_digits"`
	     IFS=$save_IFS
	     lt_os_major=${2-0}
	     lt_os_minor=${3-0}
	     lt_os_micro=${4-0}
	     if test "$lt_os_major" -gt 1 \
		|| { test "$lt_os_major" -eq 1 \
		  && { test "$lt_os_minor" -gt 5 \
		    || { test "$lt_os_minor" -eq 5 \
		      && test "$lt_os_micro" -gt 24; }; }; }; then
	       lt_cv_sys_argz_works=yes
	     fi
	   fi
	   ;; #(
	 *) lt_cv_sys_argz_works=yes ;;
	 esac]])
     AS_IF([test "$lt_cv_sys_argz_works" = yes],
        [AC_DEFINE([HAVE_WORKING_ARGZ], 1,
                   [This value is set to 1 to indicate that the system argz facility works])],
        [ARGZ_H=argz.h
        AC_LIBOBJ([argz])])])

AC_SUBST([ARGZ_H])
])
m4trace:/usr/local/share/aclocal/argz.m4:79: -1- AC_DEFUN([gl_PREREQ_ARGZ], [:])
m4trace:/usr/local/share/aclocal/libtool.m4:69: -1- AC_DEFUN([LT_INIT], [AC_PREREQ([2.58])dnl We use AC_INCLUDES_DEFAULT
AC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl
AC_BEFORE([$0], [LT_LANG])dnl
AC_BEFORE([$0], [LT_OUTPUT])dnl
AC_BEFORE([$0], [LTDL_INIT])dnl
m4_require([_LT_CHECK_BUILDDIR])dnl

dnl Autoconf doesn't catch unexpanded LT_ macros by default:
m4_pattern_forbid([^_?LT_[A-Z_]+$])dnl
m4_pattern_allow([^(_LT_EOF|LT_DLGLOBAL|LT_DLLAZY_OR_NOW|LT_MULTI_MODULE)$])dnl
dnl aclocal doesn't pull ltoptions.m4, ltsugar.m4, or ltversion.m4
dnl unless we require an AC_DEFUNed macro:
AC_REQUIRE([LTOPTIONS_VERSION])dnl
AC_REQUIRE([LTSUGAR_VERSION])dnl
AC_REQUIRE([LTVERSION_VERSION])dnl
AC_REQUIRE([LTOBSOLETE_VERSION])dnl
m4_require([_LT_PROG_LTMAIN])dnl

_LT_SHELL_INIT([SHELL=${CONFIG_SHELL-/bin/sh}])

dnl Parse OPTIONS
_LT_SET_OPTIONS([$0], [$1])

# This can be used to rebuild libtool when needed
LIBTOOL_DEPS="$ltmain"

# Always use our own libtool.
LIBTOOL='$(SHELL) $(top_builddir)/libtool'
AC_SUBST(LIBTOOL)dnl

_LT_SETUP

# Only expand once:
m4_define([LT_INIT])
])
m4trace:/usr/local/share/aclocal/libtool.m4:107: -1- AU_DEFUN([AC_PROG_LIBTOOL], [m4_if($#, 0, [LT_INIT], [LT_INIT($@)])])
m4trace:/usr/local/share/aclocal/libtool.m4:107: -1- AC_DEFUN([AC_PROG_LIBTOOL], [AC_DIAGNOSE([obsolete], [The macro `AC_PROG_LIBTOOL' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_INIT], [LT_INIT($@)])])
m4trace:/usr/local/share/aclocal/libtool.m4:108: -1- AU_DEFUN([AM_PROG_LIBTOOL], [m4_if($#, 0, [LT_INIT], [LT_INIT($@)])])
m4trace:/usr/local/share/aclocal/libtool.m4:108: -1- AC_DEFUN([AM_PROG_LIBTOOL], [AC_DIAGNOSE([obsolete], [The macro `AM_PROG_LIBTOOL' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_INIT], [LT_INIT($@)])])
m4trace:/usr/local/share/aclocal/libtool.m4:609: -1- AC_DEFUN([LT_OUTPUT], [: ${CONFIG_LT=./config.lt}
AC_MSG_NOTICE([creating $CONFIG_LT])
_LT_GENERATED_FILE_INIT(["$CONFIG_LT"],
[# Run this file to recreate a libtool stub with the current configuration.])

cat >>"$CONFIG_LT" <<\_LTEOF
lt_cl_silent=false
exec AS_MESSAGE_LOG_FD>>config.log
{
  echo
  AS_BOX([Running $as_me.])
} >&AS_MESSAGE_LOG_FD

lt_cl_help="\
\`$as_me' creates a local libtool stub from the current configuration,
for use in further configure time tests before the real libtool is
generated.

Usage: $[0] [[OPTIONS]]

  -h, --help      print this help, then exit
  -V, --version   print version number, then exit
  -q, --quiet     do not print progress messages
  -d, --debug     don't remove temporary files

Report bugs to <bug-libtool@gnu.org>."

lt_cl_version="\
m4_ifset([AC_PACKAGE_NAME], [AC_PACKAGE_NAME ])config.lt[]dnl
m4_ifset([AC_PACKAGE_VERSION], [ AC_PACKAGE_VERSION])
configured by $[0], generated by m4_PACKAGE_STRING.

Copyright (C) 2011 Free Software Foundation, Inc.
This config.lt script is free software; the Free Software Foundation
gives unlimited permision to copy, distribute and modify it."

while test $[#] != 0
do
  case $[1] in
    --version | --v* | -V )
      echo "$lt_cl_version"; exit 0 ;;
    --help | --h* | -h )
      echo "$lt_cl_help"; exit 0 ;;
    --debug | --d* | -d )
      debug=: ;;
    --quiet | --q* | --silent | --s* | -q )
      lt_cl_silent=: ;;

    -*) AC_MSG_ERROR([unrecognized option: $[1]
Try \`$[0] --help' for more information.]) ;;

    *) AC_MSG_ERROR([unrecognized argument: $[1]
Try \`$[0] --help' for more information.]) ;;
  esac
  shift
done

if $lt_cl_silent; then
  exec AS_MESSAGE_FD>/dev/null
fi
_LTEOF

cat >>"$CONFIG_LT" <<_LTEOF
_LT_OUTPUT_LIBTOOL_COMMANDS_INIT
_LTEOF

cat >>"$CONFIG_LT" <<\_LTEOF
AC_MSG_NOTICE([creating $ofile])
_LT_OUTPUT_LIBTOOL_COMMANDS
AS_EXIT(0)
_LTEOF
chmod +x "$CONFIG_LT"

# configure is writing to config.log, but config.lt does its own redirection,
# appending to config.log, which fails on DOS, as config.log is still kept
# open by configure.  Here we exec the FD to /dev/null, effectively closing
# config.log, so it can be properly (re)opened and appended to by config.lt.
lt_cl_success=:
test "$silent" = yes &&
  lt_config_lt_args="$lt_config_lt_args --quiet"
exec AS_MESSAGE_LOG_FD>/dev/null
$SHELL "$CONFIG_LT" $lt_config_lt_args || lt_cl_success=false
exec AS_MESSAGE_LOG_FD>>config.log
$lt_cl_success || AS_EXIT(1)
])
m4trace:/usr/local/share/aclocal/libtool.m4:790: -1- AC_DEFUN([LT_SUPPORTED_TAG], [])
m4trace:/usr/local/share/aclocal/libtool.m4:801: -1- AC_DEFUN([LT_LANG], [AC_BEFORE([$0], [LT_OUTPUT])dnl
m4_case([$1],
  [C],			[_LT_LANG(C)],
  [C++],		[_LT_LANG(CXX)],
  [Go],			[_LT_LANG(GO)],
  [Java],		[_LT_LANG(GCJ)],
  [Fortran 77],		[_LT_LANG(F77)],
  [Fortran],		[_LT_LANG(FC)],
  [Windows Resource],	[_LT_LANG(RC)],
  [m4_ifdef([_LT_LANG_]$1[_CONFIG],
    [_LT_LANG($1)],
    [m4_fatal([$0: unsupported language: "$1"])])])dnl
])
m4trace:/usr/local/share/aclocal/libtool.m4:893: -1- AU_DEFUN([AC_LIBTOOL_CXX], [LT_LANG(C++)])
m4trace:/usr/local/share/aclocal/libtool.m4:893: -1- AC_DEFUN([AC_LIBTOOL_CXX], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_CXX' is obsolete.
You should run autoupdate.])dnl
LT_LANG(C++)])
m4trace:/usr/local/share/aclocal/libtool.m4:894: -1- AU_DEFUN([AC_LIBTOOL_F77], [LT_LANG(Fortran 77)])
m4trace:/usr/local/share/aclocal/libtool.m4:894: -1- AC_DEFUN([AC_LIBTOOL_F77], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_F77' is obsolete.
You should run autoupdate.])dnl
LT_LANG(Fortran 77)])
m4trace:/usr/local/share/aclocal/libtool.m4:895: -1- AU_DEFUN([AC_LIBTOOL_FC], [LT_LANG(Fortran)])
m4trace:/usr/local/share/aclocal/libtool.m4:895: -1- AC_DEFUN([AC_LIBTOOL_FC], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_FC' is obsolete.
You should run autoupdate.])dnl
LT_LANG(Fortran)])
m4trace:/usr/local/share/aclocal/libtool.m4:896: -1- AU_DEFUN([AC_LIBTOOL_GCJ], [LT_LANG(Java)])
m4trace:/usr/local/share/aclocal/libtool.m4:896: -1- AC_DEFUN([AC_LIBTOOL_GCJ], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_GCJ' is obsolete.
You should run autoupdate.])dnl
LT_LANG(Java)])
m4trace:/usr/local/share/aclocal/libtool.m4:897: -1- AU_DEFUN([AC_LIBTOOL_RC], [LT_LANG(Windows Resource)])
m4trace:/usr/local/share/aclocal/libtool.m4:897: -1- AC_DEFUN([AC_LIBTOOL_RC], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_RC' is obsolete.
You should run autoupdate.])dnl
LT_LANG(Windows Resource)])
m4trace:/usr/local/share/aclocal/libtool.m4:1225: -1- AC_DEFUN([_LT_WITH_SYSROOT], [AC_MSG_CHECKING([for sysroot])
AC_ARG_WITH([sysroot],
[  --with-sysroot[=DIR] Search for dependent libraries within DIR
                        (or the compiler's sysroot if not specified).],
[], [with_sysroot=no])

dnl lt_sysroot will always be passed unquoted.  We quote it here
dnl in case the user passed a directory name.
lt_sysroot=
case ${with_sysroot} in #(
 yes)
   if test "$GCC" = yes; then
     lt_sysroot=`$CC --print-sysroot 2>/dev/null`
   fi
   ;; #(
 /*)
   lt_sysroot=`echo "$with_sysroot" | sed -e "$sed_quote_subst"`
   ;; #(
 no|'')
   ;; #(
 *)
   AC_MSG_RESULT([${with_sysroot}])
   AC_MSG_ERROR([The sysroot must be an absolute path.])
   ;;
esac

 AC_MSG_RESULT([${lt_sysroot:-no}])
_LT_DECL([], [lt_sysroot], [0], [The root where to search for ]dnl
[dependent libraries, and in which our libraries should be installed.])])
m4trace:/usr/local/share/aclocal/libtool.m4:1502: -1- AC_DEFUN([_LT_COMPILER_OPTION], [m4_require([_LT_FILEUTILS_DEFAULTS])dnl
m4_require([_LT_DECL_SED])dnl
AC_CACHE_CHECK([$1], [$2],
  [$2=no
   m4_if([$4], , [ac_outfile=conftest.$ac_objext], [ac_outfile=$4])
   echo "$lt_simple_compile_test_code" > conftest.$ac_ext
   lt_compiler_flag="$3"
   # Insert the option either (1) after the last *FLAGS variable, or
   # (2) before a word containing "conftest.", or (3) at the end.
   # Note that $ac_compile itself does not contain backslashes and begins
   # with a dollar sign (not a hyphen), so the echo should work correctly.
   # The option is referenced via a variable to avoid confusing sed.
   lt_compile=`echo "$ac_compile" | $SED \
   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
   -e 's: [[^ ]]*conftest\.: $lt_compiler_flag&:; t' \
   -e 's:$: $lt_compiler_flag:'`
   (eval echo "\"\$as_me:$LINENO: $lt_compile\"" >&AS_MESSAGE_LOG_FD)
   (eval "$lt_compile" 2>conftest.err)
   ac_status=$?
   cat conftest.err >&AS_MESSAGE_LOG_FD
   echo "$as_me:$LINENO: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
   if (exit $ac_status) && test -s "$ac_outfile"; then
     # The compiler can only warn and ignore the option if not recognized
     # So say no if there are warnings other than the usual output.
     $ECHO "$_lt_compiler_boilerplate" | $SED '/^$/d' >conftest.exp
     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
       $2=yes
     fi
   fi
   $RM conftest*
])

if test x"[$]$2" = xyes; then
    m4_if([$5], , :, [$5])
else
    m4_if([$6], , :, [$6])
fi
])
m4trace:/usr/local/share/aclocal/libtool.m4:1544: -1- AU_DEFUN([AC_LIBTOOL_COMPILER_OPTION], [m4_if($#, 0, [_LT_COMPILER_OPTION], [_LT_COMPILER_OPTION($@)])])
m4trace:/usr/local/share/aclocal/libtool.m4:1544: -1- AC_DEFUN([AC_LIBTOOL_COMPILER_OPTION], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_COMPILER_OPTION' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [_LT_COMPILER_OPTION], [_LT_COMPILER_OPTION($@)])])
m4trace:/usr/local/share/aclocal/libtool.m4:1553: -1- AC_DEFUN([_LT_LINKER_OPTION], [m4_require([_LT_FILEUTILS_DEFAULTS])dnl
m4_require([_LT_DECL_SED])dnl
AC_CACHE_CHECK([$1], [$2],
  [$2=no
   save_LDFLAGS="$LDFLAGS"
   LDFLAGS="$LDFLAGS $3"
   echo "$lt_simple_link_test_code" > conftest.$ac_ext
   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then
     # The linker can only warn and ignore the option if not recognized
     # So say no if there are warnings
     if test -s conftest.err; then
       # Append any errors to the config.log.
       cat conftest.err 1>&AS_MESSAGE_LOG_FD
       $ECHO "$_lt_linker_boilerplate" | $SED '/^$/d' > conftest.exp
       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
       if diff conftest.exp conftest.er2 >/dev/null; then
         $2=yes
       fi
     else
       $2=yes
     fi
   fi
   $RM -r conftest*
   LDFLAGS="$save_LDFLAGS"
])

if test x"[$]$2" = xyes; then
    m4_if([$4], , :, [$4])
else
    m4_if([$5], , :, [$5])
fi
])
m4trace:/usr/local/share/aclocal/libtool.m4:1588: -1- AU_DEFUN([AC_LIBTOOL_LINKER_OPTION], [m4_if($#, 0, [_LT_LINKER_OPTION], [_LT_LINKER_OPTION($@)])])
m4trace:/usr/local/share/aclocal/libtool.m4:1588: -1- AC_DEFUN([AC_LIBTOOL_LINKER_OPTION], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_LINKER_OPTION' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [_LT_LINKER_OPTION], [_LT_LINKER_OPTION($@)])])
m4trace:/usr/local/share/aclocal/libtool.m4:1595: -1- AC_DEFUN([LT_CMD_MAX_LEN], [AC_REQUIRE([AC_CANONICAL_HOST])dnl
# find the maximum length of command line arguments
AC_MSG_CHECKING([the maximum length of command line arguments])
AC_CACHE_VAL([lt_cv_sys_max_cmd_len], [dnl
  i=0
  teststring="ABCD"

  case $build_os in
  msdosdjgpp*)
    # On DJGPP, this test can blow up pretty badly due to problems in libc
    # (any single argument exceeding 2000 bytes causes a buffer overrun
    # during glob expansion).  Even if it were fixed, the result of this
    # check would be larger than it should be.
    lt_cv_sys_max_cmd_len=12288;    # 12K is about right
    ;;

  gnu*)
    # Under GNU Hurd, this test is not required because there is
    # no limit to the length of command line arguments.
    # Libtool will interpret -1 as no limit whatsoever
    lt_cv_sys_max_cmd_len=-1;
    ;;

  cygwin* | mingw* | cegcc*)
    # On Win9x/ME, this test blows up -- it succeeds, but takes
    # about 5 minutes as the teststring grows exponentially.
    # Worse, since 9x/ME are not pre-emptively multitasking,
    # you end up with a "frozen" computer, even though with patience
    # the test eventually succeeds (with a max line length of 256k).
    # Instead, let's just punt: use the minimum linelength reported by
    # all of the supported platforms: 8192 (on NT/2K/XP).
    lt_cv_sys_max_cmd_len=8192;
    ;;

  mint*)
    # On MiNT this can take a long time and run out of memory.
    lt_cv_sys_max_cmd_len=8192;
    ;;

  amigaos*)
    # On AmigaOS with pdksh, this test takes hours, literally.
    # So we just punt and use a minimum line length of 8192.
    lt_cv_sys_max_cmd_len=8192;
    ;;

  netbsd* | freebsd* | openbsd* | darwin* | dragonfly*)
    # This has been around since 386BSD, at least.  Likely further.
    if test -x /sbin/sysctl; then
      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`
    elif test -x /usr/sbin/sysctl; then
      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`
    else
      lt_cv_sys_max_cmd_len=65536	# usable default for all BSDs
    fi
    # And add a safety zone
    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 4`
    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \* 3`
    ;;

  interix*)
    # We know the value 262144 and hardcode it with a safety zone (like BSD)
    lt_cv_sys_max_cmd_len=196608
    ;;

  os2*)
    # The test takes a long time on OS/2.
    lt_cv_sys_max_cmd_len=8192
    ;;

  osf*)
    # Dr. Hans Ekkehard Plesser reports seeing a kernel panic running configure
    # due to this test when exec_disable_arg_limit is 1 on Tru64. It is not
    # nice to cause kernel panics so lets avoid the loop below.
    # First set a reasonable default.
    lt_cv_sys_max_cmd_len=16384
    #
    if test -x /sbin/sysconfig; then
      case `/sbin/sysconfig -q proc exec_disable_arg_limit` in
        *1*) lt_cv_sys_max_cmd_len=-1 ;;
      esac
    fi
    ;;
  sco3.2v5*)
    lt_cv_sys_max_cmd_len=102400
    ;;
  sysv5* | sco5v6* | sysv4.2uw2*)
    kargmax=`grep ARG_MAX /etc/conf/cf.d/stune 2>/dev/null`
    if test -n "$kargmax"; then
      lt_cv_sys_max_cmd_len=`echo $kargmax | sed 's/.*[[	 ]]//'`
    else
      lt_cv_sys_max_cmd_len=32768
    fi
    ;;
  *)
    lt_cv_sys_max_cmd_len=`(getconf ARG_MAX) 2> /dev/null`
    if test -n "$lt_cv_sys_max_cmd_len"; then
      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 4`
      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \* 3`
    else
      # Make teststring a little bigger before we do anything with it.
      # a 1K string should be a reasonable start.
      for i in 1 2 3 4 5 6 7 8 ; do
        teststring=$teststring$teststring
      done
      SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}
      # If test is not a shell built-in, we'll probably end up computing a
      # maximum length that is only half of the actual maximum length, but
      # we can't tell.
      while { test "X"`env echo "$teststring$teststring" 2>/dev/null` \
	         = "X$teststring$teststring"; } >/dev/null 2>&1 &&
	      test $i != 17 # 1/2 MB should be enough
      do
        i=`expr $i + 1`
        teststring=$teststring$teststring
      done
      # Only check the string length outside the loop.
      lt_cv_sys_max_cmd_len=`expr "X$teststring" : ".*" 2>&1`
      teststring=
      # Add a significant safety factor because C++ compilers can tack on
      # massive amounts of additional arguments before passing them to the
      # linker.  It appears as though 1/2 is a usable value.
      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 2`
    fi
    ;;
  esac
])
if test -n $lt_cv_sys_max_cmd_len ; then
  AC_MSG_RESULT($lt_cv_sys_max_cmd_len)
else
  AC_MSG_RESULT(none)
fi
max_cmd_len=$lt_cv_sys_max_cmd_len
_LT_DECL([], [max_cmd_len], [0],
    [What is the maximum length of a command?])
])
m4trace:/usr/local/share/aclocal/libtool.m4:1733: -1- AU_DEFUN([AC_LIBTOOL_SYS_MAX_CMD_LEN], [m4_if($#, 0, [LT_CMD_MAX_LEN], [LT_CMD_MAX_LEN($@)])])
m4trace:/usr/local/share/aclocal/libtool.m4:1733: -1- AC_DEFUN([AC_LIBTOOL_SYS_MAX_CMD_LEN], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_SYS_MAX_CMD_LEN' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_CMD_MAX_LEN], [LT_CMD_MAX_LEN($@)])])
m4trace:/usr/local/share/aclocal/libtool.m4:1844: -1- AC_DEFUN([LT_SYS_DLOPEN_SELF], [m4_require([_LT_HEADER_DLFCN])dnl
if test "x$enable_dlopen" != xyes; then
  enable_dlopen=unknown
  enable_dlopen_self=unknown
  enable_dlopen_self_static=unknown
else
  lt_cv_dlopen=no
  lt_cv_dlopen_libs=

  case $host_os in
  beos*)
    lt_cv_dlopen="load_add_on"
    lt_cv_dlopen_libs=
    lt_cv_dlopen_self=yes
    ;;

  mingw* | pw32* | cegcc*)
    lt_cv_dlopen="LoadLibrary"
    lt_cv_dlopen_libs=
    ;;

  cygwin*)
    lt_cv_dlopen="dlopen"
    lt_cv_dlopen_libs=
    ;;

  darwin*)
  # if libdl is installed we need to link against it
    AC_CHECK_LIB([dl], [dlopen],
		[lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-ldl"],[
    lt_cv_dlopen="dyld"
    lt_cv_dlopen_libs=
    lt_cv_dlopen_self=yes
    ])
    ;;

  *)
    AC_CHECK_FUNC([shl_load],
	  [lt_cv_dlopen="shl_load"],
      [AC_CHECK_LIB([dld], [shl_load],
	    [lt_cv_dlopen="shl_load" lt_cv_dlopen_libs="-ldld"],
	[AC_CHECK_FUNC([dlopen],
	      [lt_cv_dlopen="dlopen"],
	  [AC_CHECK_LIB([dl], [dlopen],
		[lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-ldl"],
	    [AC_CHECK_LIB([svld], [dlopen],
		  [lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-lsvld"],
	      [AC_CHECK_LIB([dld], [dld_link],
		    [lt_cv_dlopen="dld_link" lt_cv_dlopen_libs="-ldld"])
	      ])
	    ])
	  ])
	])
      ])
    ;;
  esac

  if test "x$lt_cv_dlopen" != xno; then
    enable_dlopen=yes
  else
    enable_dlopen=no
  fi

  case $lt_cv_dlopen in
  dlopen)
    save_CPPFLAGS="$CPPFLAGS"
    test "x$ac_cv_header_dlfcn_h" = xyes && CPPFLAGS="$CPPFLAGS -DHAVE_DLFCN_H"

    save_LDFLAGS="$LDFLAGS"
    wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $export_dynamic_flag_spec\"

    save_LIBS="$LIBS"
    LIBS="$lt_cv_dlopen_libs $LIBS"

    AC_CACHE_CHECK([whether a program can dlopen itself],
	  lt_cv_dlopen_self, [dnl
	  _LT_TRY_DLOPEN_SELF(
	    lt_cv_dlopen_self=yes, lt_cv_dlopen_self=yes,
	    lt_cv_dlopen_self=no, lt_cv_dlopen_self=cross)
    ])

    if test "x$lt_cv_dlopen_self" = xyes; then
      wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $lt_prog_compiler_static\"
      AC_CACHE_CHECK([whether a statically linked program can dlopen itself],
	  lt_cv_dlopen_self_static, [dnl
	  _LT_TRY_DLOPEN_SELF(
	    lt_cv_dlopen_self_static=yes, lt_cv_dlopen_self_static=yes,
	    lt_cv_dlopen_self_static=no,  lt_cv_dlopen_self_static=cross)
      ])
    fi

    CPPFLAGS="$save_CPPFLAGS"
    LDFLAGS="$save_LDFLAGS"
    LIBS="$save_LIBS"
    ;;
  esac

  case $lt_cv_dlopen_self in
  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;
  *) enable_dlopen_self=unknown ;;
  esac

  case $lt_cv_dlopen_self_static in
  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;
  *) enable_dlopen_self_static=unknown ;;
  esac
fi
_LT_DECL([dlopen_support], [enable_dlopen], [0],
	 [Whether dlopen is supported])
_LT_DECL([dlopen_self], [enable_dlopen_self], [0],
	 [Whether dlopen of programs is supported])
_LT_DECL([dlopen_self_static], [enable_dlopen_self_static], [0],
	 [Whether dlopen of statically linked programs is supported])
])
m4trace:/usr/local/share/aclocal/libtool.m4:1961: -1- AU_DEFUN([AC_LIBTOOL_DLOPEN_SELF], [m4_if($#, 0, [LT_SYS_DLOPEN_SELF], [LT_SYS_DLOPEN_SELF($@)])])
m4trace:/usr/local/share/aclocal/libtool.m4:1961: -1- AC_DEFUN([AC_LIBTOOL_DLOPEN_SELF], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_DLOPEN_SELF' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_DLOPEN_SELF], [LT_SYS_DLOPEN_SELF($@)])])
m4trace:/usr/local/share/aclocal/libtool.m4:2930: -1- AC_DEFUN([_LT_PATH_TOOL_PREFIX], [m4_require([_LT_DECL_EGREP])dnl
AC_MSG_CHECKING([for $1])
AC_CACHE_VAL(lt_cv_path_MAGIC_CMD,
[case $MAGIC_CMD in
[[\\/*] |  ?:[\\/]*])
  lt_cv_path_MAGIC_CMD="$MAGIC_CMD" # Let the user override the test with a path.
  ;;
*)
  lt_save_MAGIC_CMD="$MAGIC_CMD"
  lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
dnl $ac_dummy forces splitting on constant user-supplied paths.
dnl POSIX.2 word splitting is done only on the output of word expansions,
dnl not every word.  This closes a longstanding sh security hole.
  ac_dummy="m4_if([$2], , $PATH, [$2])"
  for ac_dir in $ac_dummy; do
    IFS="$lt_save_ifs"
    test -z "$ac_dir" && ac_dir=.
    if test -f $ac_dir/$1; then
      lt_cv_path_MAGIC_CMD="$ac_dir/$1"
      if test -n "$file_magic_test_file"; then
	case $deplibs_check_method in
	"file_magic "*)
	  file_magic_regex=`expr "$deplibs_check_method" : "file_magic \(.*\)"`
	  MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
	    $EGREP "$file_magic_regex" > /dev/null; then
	    :
	  else
	    cat <<_LT_EOF 1>&2

*** Warning: the command libtool uses to detect shared libraries,
*** $file_magic_cmd, produces output that libtool cannot recognize.
*** The result is that libtool may fail to recognize shared libraries
*** as such.  This will affect the creation of libtool libraries that
*** depend on shared libraries, but programs linked with such libtool
*** libraries will work regardless of this problem.  Nevertheless, you
*** may want to report the problem to your system manager and/or to
*** bug-libtool@gnu.org

_LT_EOF
	  fi ;;
	esac
      fi
      break
    fi
  done
  IFS="$lt_save_ifs"
  MAGIC_CMD="$lt_save_MAGIC_CMD"
  ;;
esac])
MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
if test -n "$MAGIC_CMD"; then
  AC_MSG_RESULT($MAGIC_CMD)
else
  AC_MSG_RESULT(no)
fi
_LT_DECL([], [MAGIC_CMD], [0],
	 [Used to examine libraries when file_magic_cmd begins with "file"])dnl
])
m4trace:/usr/local/share/aclocal/libtool.m4:2992: -1- AU_DEFUN([AC_PATH_TOOL_PREFIX], [m4_if($#, 0, [_LT_PATH_TOOL_PREFIX], [_LT_PATH_TOOL_PREFIX($@)])])
m4trace:/usr/local/share/aclocal/libtool.m4:2992: -1- AC_DEFUN([AC_PATH_TOOL_PREFIX], [AC_DIAGNOSE([obsolete], [The macro `AC_PATH_TOOL_PREFIX' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [_LT_PATH_TOOL_PREFIX], [_LT_PATH_TOOL_PREFIX($@)])])
m4trace:/usr/local/share/aclocal/libtool.m4:3015: -1- AC_DEFUN([LT_PATH_LD], [AC_REQUIRE([AC_PROG_CC])dnl
AC_REQUIRE([AC_CANONICAL_HOST])dnl
AC_REQUIRE([AC_CANONICAL_BUILD])dnl
m4_require([_LT_DECL_SED])dnl
m4_require([_LT_DECL_EGREP])dnl
m4_require([_LT_PROG_ECHO_BACKSLASH])dnl

AC_ARG_WITH([gnu-ld],
    [AS_HELP_STRING([--with-gnu-ld],
	[assume the C compiler uses GNU ld @<:@default=no@:>@])],
    [test "$withval" = no || with_gnu_ld=yes],
    [with_gnu_ld=no])dnl

ac_prog=ld
if test "$GCC" = yes; then
  # Check if gcc -print-prog-name=ld gives a path.
  AC_MSG_CHECKING([for ld used by $CC])
  case $host in
  *-*-mingw*)
    # gcc leaves a trailing carriage return which upsets mingw
    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
  *)
    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;
  esac
  case $ac_prog in
    # Accept absolute paths.
    [[\\/]]* | ?:[[\\/]]*)
      re_direlt='/[[^/]][[^/]]*/\.\./'
      # Canonicalize the pathname of ld
      ac_prog=`$ECHO "$ac_prog"| $SED 's%\\\\%/%g'`
      while $ECHO "$ac_prog" | $GREP "$re_direlt" > /dev/null 2>&1; do
	ac_prog=`$ECHO $ac_prog| $SED "s%$re_direlt%/%"`
      done
      test -z "$LD" && LD="$ac_prog"
      ;;
  "")
    # If it fails, then pretend we aren't using GCC.
    ac_prog=ld
    ;;
  *)
    # If it is relative, then search for the first ld in PATH.
    with_gnu_ld=unknown
    ;;
  esac
elif test "$with_gnu_ld" = yes; then
  AC_MSG_CHECKING([for GNU ld])
else
  AC_MSG_CHECKING([for non-GNU ld])
fi
AC_CACHE_VAL(lt_cv_path_LD,
[if test -z "$LD"; then
  lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
  for ac_dir in $PATH; do
    IFS="$lt_save_ifs"
    test -z "$ac_dir" && ac_dir=.
    if test -f "$ac_dir/$ac_prog" || test -f "$ac_dir/$ac_prog$ac_exeext"; then
      lt_cv_path_LD="$ac_dir/$ac_prog"
      # Check to see if the program is GNU ld.  I'd rather use --version,
      # but apparently some variants of GNU ld only accept -v.
      # Break only if it was the GNU/non-GNU ld that we prefer.
      case `"$lt_cv_path_LD" -v 2>&1 </dev/null` in
      *GNU* | *'with BFD'*)
	test "$with_gnu_ld" != no && break
	;;
      *)
	test "$with_gnu_ld" != yes && break
	;;
      esac
    fi
  done
  IFS="$lt_save_ifs"
else
  lt_cv_path_LD="$LD" # Let the user override the test with a path.
fi])
LD="$lt_cv_path_LD"
if test -n "$LD"; then
  AC_MSG_RESULT($LD)
else
  AC_MSG_RESULT(no)
fi
test -z "$LD" && AC_MSG_ERROR([no acceptable ld found in \$PATH])
_LT_PATH_LD_GNU
AC_SUBST([LD])

_LT_TAGDECL([], [LD], [1], [The linker used to build libraries])
])
m4trace:/usr/local/share/aclocal/libtool.m4:3104: -1- AU_DEFUN([AM_PROG_LD], [m4_if($#, 0, [LT_PATH_LD], [LT_PATH_LD($@)])])
m4trace:/usr/local/share/aclocal/libtool.m4:3104: -1- AC_DEFUN([AM_PROG_LD], [AC_DIAGNOSE([obsolete], [The macro `AM_PROG_LD' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PATH_LD], [LT_PATH_LD($@)])])
m4trace:/usr/local/share/aclocal/libtool.m4:3105: -1- AU_DEFUN([AC_PROG_LD], [m4_if($#, 0, [LT_PATH_LD], [LT_PATH_LD($@)])])
m4trace:/usr/local/share/aclocal/libtool.m4:3105: -1- AC_DEFUN([AC_PROG_LD], [AC_DIAGNOSE([obsolete], [The macro `AC_PROG_LD' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PATH_LD], [LT_PATH_LD($@)])])
m4trace:/usr/local/share/aclocal/libtool.m4:3399: -1- AC_DEFUN([LT_PATH_NM], [AC_REQUIRE([AC_PROG_CC])dnl
AC_CACHE_CHECK([for BSD- or MS-compatible name lister (nm)], lt_cv_path_NM,
[if test -n "$NM"; then
  # Let the user override the test.
  lt_cv_path_NM="$NM"
else
  lt_nm_to_check="${ac_tool_prefix}nm"
  if test -n "$ac_tool_prefix" && test "$build" = "$host"; then
    lt_nm_to_check="$lt_nm_to_check nm"
  fi
  for lt_tmp_nm in $lt_nm_to_check; do
    lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
    for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do
      IFS="$lt_save_ifs"
      test -z "$ac_dir" && ac_dir=.
      tmp_nm="$ac_dir/$lt_tmp_nm"
      if test -f "$tmp_nm" || test -f "$tmp_nm$ac_exeext" ; then
	# Check to see if the nm accepts a BSD-compat flag.
	# Adding the `sed 1q' prevents false positives on HP-UX, which says:
	#   nm: unknown option "B" ignored
	# Tru64's nm complains that /dev/null is an invalid object file
	case `"$tmp_nm" -B /dev/null 2>&1 | sed '1q'` in
	*/dev/null* | *'Invalid file or object type'*)
	  lt_cv_path_NM="$tmp_nm -B"
	  break
	  ;;
	*)
	  case `"$tmp_nm" -p /dev/null 2>&1 | sed '1q'` in
	  */dev/null*)
	    lt_cv_path_NM="$tmp_nm -p"
	    break
	    ;;
	  *)
	    lt_cv_path_NM=${lt_cv_path_NM="$tmp_nm"} # keep the first match, but
	    continue # so that we can try to find one that supports BSD flags
	    ;;
	  esac
	  ;;
	esac
      fi
    done
    IFS="$lt_save_ifs"
  done
  : ${lt_cv_path_NM=no}
fi])
if test "$lt_cv_path_NM" != "no"; then
  NM="$lt_cv_path_NM"
else
  # Didn't find any BSD compatible name lister, look for dumpbin.
  if test -n "$DUMPBIN"; then :
    # Let the user override the test.
  else
    AC_CHECK_TOOLS(DUMPBIN, [dumpbin "link -dump"], :)
    case `$DUMPBIN -symbols /dev/null 2>&1 | sed '1q'` in
    *COFF*)
      DUMPBIN="$DUMPBIN -symbols"
      ;;
    *)
      DUMPBIN=:
      ;;
    esac
  fi
  AC_SUBST([DUMPBIN])
  if test "$DUMPBIN" != ":"; then
    NM="$DUMPBIN"
  fi
fi
test -z "$NM" && NM=nm
AC_SUBST([NM])
_LT_DECL([], [NM], [1], [A BSD- or MS-compatible name lister])dnl

AC_CACHE_CHECK([the name lister ($NM) interface], [lt_cv_nm_interface],
  [lt_cv_nm_interface="BSD nm"
  echo "int some_variable = 0;" > conftest.$ac_ext
  (eval echo "\"\$as_me:$LINENO: $ac_compile\"" >&AS_MESSAGE_LOG_FD)
  (eval "$ac_compile" 2>conftest.err)
  cat conftest.err >&AS_MESSAGE_LOG_FD
  (eval echo "\"\$as_me:$LINENO: $NM \\\"conftest.$ac_objext\\\"\"" >&AS_MESSAGE_LOG_FD)
  (eval "$NM \"conftest.$ac_objext\"" 2>conftest.err > conftest.out)
  cat conftest.err >&AS_MESSAGE_LOG_FD
  (eval echo "\"\$as_me:$LINENO: output\"" >&AS_MESSAGE_LOG_FD)
  cat conftest.out >&AS_MESSAGE_LOG_FD
  if $GREP 'External.*some_variable' conftest.out > /dev/null; then
    lt_cv_nm_interface="MS dumpbin"
  fi
  rm -f conftest*])
])
m4trace:/usr/local/share/aclocal/libtool.m4:3489: -1- AU_DEFUN([AM_PROG_NM], [m4_if($#, 0, [LT_PATH_NM], [LT_PATH_NM($@)])])
m4trace:/usr/local/share/aclocal/libtool.m4:3489: -1- AC_DEFUN([AM_PROG_NM], [AC_DIAGNOSE([obsolete], [The macro `AM_PROG_NM' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PATH_NM], [LT_PATH_NM($@)])])
m4trace:/usr/local/share/aclocal/libtool.m4:3490: -1- AU_DEFUN([AC_PROG_NM], [m4_if($#, 0, [LT_PATH_NM], [LT_PATH_NM($@)])])
m4trace:/usr/local/share/aclocal/libtool.m4:3490: -1- AC_DEFUN([AC_PROG_NM], [AC_DIAGNOSE([obsolete], [The macro `AC_PROG_NM' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PATH_NM], [LT_PATH_NM($@)])])
m4trace:/usr/local/share/aclocal/libtool.m4:3560: -1- AC_DEFUN([LT_LIB_M], [AC_REQUIRE([AC_CANONICAL_HOST])dnl
LIBM=
case $host in
*-*-beos* | *-*-cegcc* | *-*-cygwin* | *-*-haiku* | *-*-pw32* | *-*-darwin*)
  # These system don't have libm, or don't need it
  ;;
*-ncr-sysv4.3*)
  AC_CHECK_LIB(mw, _mwvalidcheckl, LIBM="-lmw")
  AC_CHECK_LIB(m, cos, LIBM="$LIBM -lm")
  ;;
*)
  AC_CHECK_LIB(m, cos, LIBM="-lm")
  ;;
esac
AC_SUBST([LIBM])
])
m4trace:/usr/local/share/aclocal/libtool.m4:3579: -1- AU_DEFUN([AC_CHECK_LIBM], [m4_if($#, 0, [LT_LIB_M], [LT_LIB_M($@)])])
m4trace:/usr/local/share/aclocal/libtool.m4:3579: -1- AC_DEFUN([AC_CHECK_LIBM], [AC_DIAGNOSE([obsolete], [The macro `AC_CHECK_LIBM' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_LIB_M], [LT_LIB_M($@)])])
m4trace:/usr/local/share/aclocal/libtool.m4:7622: -1- AC_DEFUN([LT_PROG_GCJ], [m4_ifdef([AC_PROG_GCJ], [AC_PROG_GCJ],
  [m4_ifdef([A][M_PROG_GCJ], [A][M_PROG_GCJ],
    [AC_CHECK_TOOL(GCJ, gcj,)
      test "x${GCJFLAGS+set}" = xset || GCJFLAGS="-g -O2"
      AC_SUBST(GCJFLAGS)])])[]dnl
])
m4trace:/usr/local/share/aclocal/libtool.m4:7631: -1- AU_DEFUN([LT_AC_PROG_GCJ], [m4_if($#, 0, [LT_PROG_GCJ], [LT_PROG_GCJ($@)])])
m4trace:/usr/local/share/aclocal/libtool.m4:7631: -1- AC_DEFUN([LT_AC_PROG_GCJ], [AC_DIAGNOSE([obsolete], [The macro `LT_AC_PROG_GCJ' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PROG_GCJ], [LT_PROG_GCJ($@)])])
m4trace:/usr/local/share/aclocal/libtool.m4:7638: -1- AC_DEFUN([LT_PROG_GO], [AC_CHECK_TOOL(GOC, gccgo,)
])
m4trace:/usr/local/share/aclocal/libtool.m4:7645: -1- AC_DEFUN([LT_PROG_RC], [AC_CHECK_TOOL(RC, windres,)
])
m4trace:/usr/local/share/aclocal/libtool.m4:7650: -1- AU_DEFUN([LT_AC_PROG_RC], [m4_if($#, 0, [LT_PROG_RC], [LT_PROG_RC($@)])])
m4trace:/usr/local/share/aclocal/libtool.m4:7650: -1- AC_DEFUN([LT_AC_PROG_RC], [AC_DIAGNOSE([obsolete], [The macro `LT_AC_PROG_RC' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PROG_RC], [LT_PROG_RC($@)])])
m4trace:/usr/local/share/aclocal/libtool.m4:7770: -1- AU_DEFUN([LT_AC_PROG_SED], [m4_if($#, 0, [AC_PROG_SED], [AC_PROG_SED($@)])])
m4trace:/usr/local/share/aclocal/libtool.m4:7770: -1- AC_DEFUN([LT_AC_PROG_SED], [AC_DIAGNOSE([obsolete], [The macro `LT_AC_PROG_SED' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [AC_PROG_SED], [AC_PROG_SED($@)])])
m4trace:/usr/local/share/aclocal/ltdl.m4:16: -1- AC_DEFUN([LT_CONFIG_LTDL_DIR], [AC_BEFORE([$0], [LTDL_INIT])
_$0($*)
])
m4trace:/usr/local/share/aclocal/ltdl.m4:68: -1- AC_DEFUN([LTDL_CONVENIENCE], [AC_BEFORE([$0], [LTDL_INIT])dnl
dnl Although the argument is deprecated and no longer documented,
dnl LTDL_CONVENIENCE used to take a DIRECTORY orgument, if we have one
dnl here make sure it is the same as any other declaration of libltdl's
dnl location!  This also ensures lt_ltdl_dir is set when configure.ac is
dnl not yet using an explicit LT_CONFIG_LTDL_DIR.
m4_ifval([$1], [_LT_CONFIG_LTDL_DIR([$1])])dnl
_$0()
])
m4trace:/usr/local/share/aclocal/ltdl.m4:81: -1- AU_DEFUN([AC_LIBLTDL_CONVENIENCE], [_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])
_LTDL_CONVENIENCE])
m4trace:/usr/local/share/aclocal/ltdl.m4:81: -1- AC_DEFUN([AC_LIBLTDL_CONVENIENCE], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBLTDL_CONVENIENCE' is obsolete.
You should run autoupdate.])dnl
_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])
_LTDL_CONVENIENCE])
m4trace:/usr/local/share/aclocal/ltdl.m4:124: -1- AC_DEFUN([LTDL_INSTALLABLE], [AC_BEFORE([$0], [LTDL_INIT])dnl
dnl Although the argument is deprecated and no longer documented,
dnl LTDL_INSTALLABLE used to take a DIRECTORY orgument, if we have one
dnl here make sure it is the same as any other declaration of libltdl's
dnl location!  This also ensures lt_ltdl_dir is set when configure.ac is
dnl not yet using an explicit LT_CONFIG_LTDL_DIR.
m4_ifval([$1], [_LT_CONFIG_LTDL_DIR([$1])])dnl
_$0()
])
m4trace:/usr/local/share/aclocal/ltdl.m4:137: -1- AU_DEFUN([AC_LIBLTDL_INSTALLABLE], [_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])
_LTDL_INSTALLABLE])
m4trace:/usr/local/share/aclocal/ltdl.m4:137: -1- AC_DEFUN([AC_LIBLTDL_INSTALLABLE], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBLTDL_INSTALLABLE' is obsolete.
You should run autoupdate.])dnl
_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])
_LTDL_INSTALLABLE])
m4trace:/usr/local/share/aclocal/ltdl.m4:213: -1- AC_DEFUN([_LT_LIBOBJ], [
  m4_pattern_allow([^_LT_LIBOBJS$])
  _LT_LIBOBJS="$_LT_LIBOBJS $1.$ac_objext"
])
m4trace:/usr/local/share/aclocal/ltdl.m4:226: -1- AC_DEFUN([LTDL_INIT], [dnl Parse OPTIONS
_LT_SET_OPTIONS([$0], [$1])

dnl We need to keep our own list of libobjs separate from our parent project,
dnl and the easiest way to do that is redefine the AC_LIBOBJs macro while
dnl we look for our own LIBOBJs.
m4_pushdef([AC_LIBOBJ], m4_defn([_LT_LIBOBJ]))
m4_pushdef([AC_LIBSOURCES])

dnl If not otherwise defined, default to the 1.5.x compatible subproject mode:
m4_if(_LTDL_MODE, [],
        [m4_define([_LTDL_MODE], m4_default([$2], [subproject]))
        m4_if([-1], [m4_bregexp(_LTDL_MODE, [\(subproject\|\(non\)?recursive\)])],
                [m4_fatal([unknown libltdl mode: ]_LTDL_MODE)])])

AC_ARG_WITH([included_ltdl],
    [AS_HELP_STRING([--with-included-ltdl],
                    [use the GNU ltdl sources included here])])

if test "x$with_included_ltdl" != xyes; then
  # We are not being forced to use the included libltdl sources, so
  # decide whether there is a useful installed version we can use.
  AC_CHECK_HEADER([ltdl.h],
      [AC_CHECK_DECL([lt_dlinterface_register],
	   [AC_CHECK_LIB([ltdl], [lt_dladvise_preload],
	       [with_included_ltdl=no],
	       [with_included_ltdl=yes])],
	   [with_included_ltdl=yes],
	   [AC_INCLUDES_DEFAULT
	    #include <ltdl.h>])],
      [with_included_ltdl=yes],
      [AC_INCLUDES_DEFAULT]
  )
fi

dnl If neither LT_CONFIG_LTDL_DIR, LTDL_CONVENIENCE nor LTDL_INSTALLABLE
dnl was called yet, then for old times' sake, we assume libltdl is in an
dnl eponymous directory:
AC_PROVIDE_IFELSE([LT_CONFIG_LTDL_DIR], [], [_LT_CONFIG_LTDL_DIR([libltdl])])

AC_ARG_WITH([ltdl_include],
    [AS_HELP_STRING([--with-ltdl-include=DIR],
                    [use the ltdl headers installed in DIR])])

if test -n "$with_ltdl_include"; then
  if test -f "$with_ltdl_include/ltdl.h"; then :
  else
    AC_MSG_ERROR([invalid ltdl include directory: `$with_ltdl_include'])
  fi
else
  with_ltdl_include=no
fi

AC_ARG_WITH([ltdl_lib],
    [AS_HELP_STRING([--with-ltdl-lib=DIR],
                    [use the libltdl.la installed in DIR])])

if test -n "$with_ltdl_lib"; then
  if test -f "$with_ltdl_lib/libltdl.la"; then :
  else
    AC_MSG_ERROR([invalid ltdl library directory: `$with_ltdl_lib'])
  fi
else
  with_ltdl_lib=no
fi

case ,$with_included_ltdl,$with_ltdl_include,$with_ltdl_lib, in
  ,yes,no,no,)
	m4_case(m4_default(_LTDL_TYPE, [convenience]),
	    [convenience], [_LTDL_CONVENIENCE],
	    [installable], [_LTDL_INSTALLABLE],
	  [m4_fatal([unknown libltdl build type: ]_LTDL_TYPE)])
	;;
  ,no,no,no,)
	# If the included ltdl is not to be used, then use the
	# preinstalled libltdl we found.
	AC_DEFINE([HAVE_LTDL], [1],
	  [Define this if a modern libltdl is already installed])
	LIBLTDL=-lltdl
	LTDLDEPS=
	LTDLINCL=
	;;
  ,no*,no,*)
	AC_MSG_ERROR([`--with-ltdl-include' and `--with-ltdl-lib' options must be used together])
	;;
  *)	with_included_ltdl=no
	LIBLTDL="-L$with_ltdl_lib -lltdl"
	LTDLDEPS=
	LTDLINCL="-I$with_ltdl_include"
	;;
esac
INCLTDL="$LTDLINCL"

# Report our decision...
AC_MSG_CHECKING([where to find libltdl headers])
AC_MSG_RESULT([$LTDLINCL])
AC_MSG_CHECKING([where to find libltdl library])
AC_MSG_RESULT([$LIBLTDL])

_LTDL_SETUP

dnl restore autoconf definition.
m4_popdef([AC_LIBOBJ])
m4_popdef([AC_LIBSOURCES])

AC_CONFIG_COMMANDS_PRE([
    _ltdl_libobjs=
    _ltdl_ltlibobjs=
    if test -n "$_LT_LIBOBJS"; then
      # Remove the extension.
      _lt_sed_drop_objext='s/\.o$//;s/\.obj$//'
      for i in `for i in $_LT_LIBOBJS; do echo "$i"; done | sed "$_lt_sed_drop_objext" | sort -u`; do
        _ltdl_libobjs="$_ltdl_libobjs $lt_libobj_prefix$i.$ac_objext"
        _ltdl_ltlibobjs="$_ltdl_ltlibobjs $lt_libobj_prefix$i.lo"
      done
    fi
    AC_SUBST([ltdl_LIBOBJS], [$_ltdl_libobjs])
    AC_SUBST([ltdl_LTLIBOBJS], [$_ltdl_ltlibobjs])
])

# Only expand once:
m4_define([LTDL_INIT])
])
m4trace:/usr/local/share/aclocal/ltdl.m4:352: -1- AU_DEFUN([AC_LIB_LTDL], [LTDL_INIT($@)])
m4trace:/usr/local/share/aclocal/ltdl.m4:352: -1- AC_DEFUN([AC_LIB_LTDL], [AC_DIAGNOSE([obsolete], [The macro `AC_LIB_LTDL' is obsolete.
You should run autoupdate.])dnl
LTDL_INIT($@)])
m4trace:/usr/local/share/aclocal/ltdl.m4:353: -1- AU_DEFUN([AC_WITH_LTDL], [LTDL_INIT($@)])
m4trace:/usr/local/share/aclocal/ltdl.m4:353: -1- AC_DEFUN([AC_WITH_LTDL], [AC_DIAGNOSE([obsolete], [The macro `AC_WITH_LTDL' is obsolete.
You should run autoupdate.])dnl
LTDL_INIT($@)])
m4trace:/usr/local/share/aclocal/ltdl.m4:354: -1- AU_DEFUN([LT_WITH_LTDL], [LTDL_INIT($@)])
m4trace:/usr/local/share/aclocal/ltdl.m4:354: -1- AC_DEFUN([LT_WITH_LTDL], [AC_DIAGNOSE([obsolete], [The macro `LT_WITH_LTDL' is obsolete.
You should run autoupdate.])dnl
LTDL_INIT($@)])
m4trace:/usr/local/share/aclocal/ltdl.m4:367: -1- AC_DEFUN([_LTDL_SETUP], [AC_REQUIRE([AC_PROG_CC])dnl
AC_REQUIRE([LT_SYS_MODULE_EXT])dnl
AC_REQUIRE([LT_SYS_MODULE_PATH])dnl
AC_REQUIRE([LT_SYS_DLSEARCH_PATH])dnl
AC_REQUIRE([LT_LIB_DLLOAD])dnl
AC_REQUIRE([LT_SYS_SYMBOL_USCORE])dnl
AC_REQUIRE([LT_FUNC_DLSYM_USCORE])dnl
AC_REQUIRE([LT_SYS_DLOPEN_DEPLIBS])dnl
AC_REQUIRE([gl_FUNC_ARGZ])dnl

m4_require([_LT_CHECK_OBJDIR])dnl
m4_require([_LT_HEADER_DLFCN])dnl
m4_require([_LT_CHECK_DLPREOPEN])dnl
m4_require([_LT_DECL_SED])dnl

dnl Don't require this, or it will be expanded earlier than the code
dnl that sets the variables it relies on:
_LT_ENABLE_INSTALL

dnl _LTDL_MODE specific code must be called at least once:
_LTDL_MODE_DISPATCH

# In order that ltdl.c can compile, find out the first AC_CONFIG_HEADERS
# the user used.  This is so that ltdl.h can pick up the parent projects
# config.h file, The first file in AC_CONFIG_HEADERS must contain the
# definitions required by ltdl.c.
# FIXME: Remove use of undocumented AC_LIST_HEADERS (2.59 compatibility).
AC_CONFIG_COMMANDS_PRE([dnl
m4_pattern_allow([^LT_CONFIG_H$])dnl
m4_ifset([AH_HEADER],
    [LT_CONFIG_H=AH_HEADER],
    [m4_ifset([AC_LIST_HEADERS],
	    [LT_CONFIG_H=`echo "AC_LIST_HEADERS" | $SED 's,^[[      ]]*,,;s,[[ :]].*$,,'`],
	[])])])
AC_SUBST([LT_CONFIG_H])

AC_CHECK_HEADERS([unistd.h dl.h sys/dl.h dld.h mach-o/dyld.h dirent.h],
	[], [], [AC_INCLUDES_DEFAULT])

AC_CHECK_FUNCS([closedir opendir readdir], [], [AC_LIBOBJ([lt__dirent])])
AC_CHECK_FUNCS([strlcat strlcpy], [], [AC_LIBOBJ([lt__strl])])

m4_pattern_allow([LT_LIBEXT])dnl
AC_DEFINE_UNQUOTED([LT_LIBEXT],["$libext"],[The archive extension])

name=
eval "lt_libprefix=\"$libname_spec\""
m4_pattern_allow([LT_LIBPREFIX])dnl
AC_DEFINE_UNQUOTED([LT_LIBPREFIX],["$lt_libprefix"],[The archive prefix])

name=ltdl
eval "LTDLOPEN=\"$libname_spec\""
AC_SUBST([LTDLOPEN])
])
m4trace:/usr/local/share/aclocal/ltdl.m4:443: -1- AC_DEFUN([LT_SYS_DLOPEN_DEPLIBS], [AC_REQUIRE([AC_CANONICAL_HOST])dnl
AC_CACHE_CHECK([whether deplibs are loaded by dlopen],
  [lt_cv_sys_dlopen_deplibs],
  [# PORTME does your system automatically load deplibs for dlopen?
  # or its logical equivalent (e.g. shl_load for HP-UX < 11)
  # For now, we just catch OSes we know something about -- in the
  # future, we'll try test this programmatically.
  lt_cv_sys_dlopen_deplibs=unknown
  case $host_os in
  aix3*|aix4.1.*|aix4.2.*)
    # Unknown whether this is true for these versions of AIX, but
    # we want this `case' here to explicitly catch those versions.
    lt_cv_sys_dlopen_deplibs=unknown
    ;;
  aix[[4-9]]*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  amigaos*)
    case $host_cpu in
    powerpc)
      lt_cv_sys_dlopen_deplibs=no
      ;;
    esac
    ;;
  darwin*)
    # Assuming the user has installed a libdl from somewhere, this is true
    # If you are looking for one http://www.opendarwin.org/projects/dlcompat
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  freebsd* | dragonfly*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  gnu* | linux* | k*bsd*-gnu | kopensolaris*-gnu)
    # GNU and its variants, using gnu ld.so (Glibc)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  hpux10*|hpux11*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  interix*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  irix[[12345]]*|irix6.[[01]]*)
    # Catch all versions of IRIX before 6.2, and indicate that we don't
    # know how it worked for any of those versions.
    lt_cv_sys_dlopen_deplibs=unknown
    ;;
  irix*)
    # The case above catches anything before 6.2, and it's known that
    # at 6.2 and later dlopen does load deplibs.
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  netbsd*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  openbsd*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  osf[[1234]]*)
    # dlopen did load deplibs (at least at 4.x), but until the 5.x series,
    # it did *not* use an RPATH in a shared library to find objects the
    # library depends on, so we explicitly say `no'.
    lt_cv_sys_dlopen_deplibs=no
    ;;
  osf5.0|osf5.0a|osf5.1)
    # dlopen *does* load deplibs and with the right loader patch applied
    # it even uses RPATH in a shared library to search for shared objects
    # that the library depends on, but there's no easy way to know if that
    # patch is installed.  Since this is the case, all we can really
    # say is unknown -- it depends on the patch being installed.  If
    # it is, this changes to `yes'.  Without it, it would be `no'.
    lt_cv_sys_dlopen_deplibs=unknown
    ;;
  osf*)
    # the two cases above should catch all versions of osf <= 5.1.  Read
    # the comments above for what we know about them.
    # At > 5.1, deplibs are loaded *and* any RPATH in a shared library
    # is used to find them so we can finally say `yes'.
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  qnx*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  solaris*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)
    libltdl_cv_sys_dlopen_deplibs=yes
    ;;
  esac
  ])
if test "$lt_cv_sys_dlopen_deplibs" != yes; then
 AC_DEFINE([LTDL_DLOPEN_DEPLIBS], [1],
    [Define if the OS needs help to load dependent libraries for dlopen().])
fi
])
m4trace:/usr/local/share/aclocal/ltdl.m4:542: -1- AU_DEFUN([AC_LTDL_SYS_DLOPEN_DEPLIBS], [m4_if($#, 0, [LT_SYS_DLOPEN_DEPLIBS], [LT_SYS_DLOPEN_DEPLIBS($@)])])
m4trace:/usr/local/share/aclocal/ltdl.m4:542: -1- AC_DEFUN([AC_LTDL_SYS_DLOPEN_DEPLIBS], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_SYS_DLOPEN_DEPLIBS' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_DLOPEN_DEPLIBS], [LT_SYS_DLOPEN_DEPLIBS($@)])])
m4trace:/usr/local/share/aclocal/ltdl.m4:549: -1- AC_DEFUN([LT_SYS_MODULE_EXT], [m4_require([_LT_SYS_DYNAMIC_LINKER])dnl
AC_CACHE_CHECK([which extension is used for runtime loadable modules],
  [libltdl_cv_shlibext],
[
module=yes
eval libltdl_cv_shlibext=$shrext_cmds
module=no
eval libltdl_cv_shrext=$shrext_cmds
  ])
if test -n "$libltdl_cv_shlibext"; then
  m4_pattern_allow([LT_MODULE_EXT])dnl
  AC_DEFINE_UNQUOTED([LT_MODULE_EXT], ["$libltdl_cv_shlibext"],
    [Define to the extension used for runtime loadable modules, say, ".so".])
fi
if test "$libltdl_cv_shrext" != "$libltdl_cv_shlibext"; then
  m4_pattern_allow([LT_SHARED_EXT])dnl
  AC_DEFINE_UNQUOTED([LT_SHARED_EXT], ["$libltdl_cv_shrext"],
    [Define to the shared library suffix, say, ".dylib".])
fi
])
m4trace:/usr/local/share/aclocal/ltdl.m4:572: -1- AU_DEFUN([AC_LTDL_SHLIBEXT], [m4_if($#, 0, [LT_SYS_MODULE_EXT], [LT_SYS_MODULE_EXT($@)])])
m4trace:/usr/local/share/aclocal/ltdl.m4:572: -1- AC_DEFUN([AC_LTDL_SHLIBEXT], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_SHLIBEXT' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_MODULE_EXT], [LT_SYS_MODULE_EXT($@)])])
m4trace:/usr/local/share/aclocal/ltdl.m4:579: -1- AC_DEFUN([LT_SYS_MODULE_PATH], [m4_require([_LT_SYS_DYNAMIC_LINKER])dnl
AC_CACHE_CHECK([which variable specifies run-time module search path],
  [lt_cv_module_path_var], [lt_cv_module_path_var="$shlibpath_var"])
if test -n "$lt_cv_module_path_var"; then
  m4_pattern_allow([LT_MODULE_PATH_VAR])dnl
  AC_DEFINE_UNQUOTED([LT_MODULE_PATH_VAR], ["$lt_cv_module_path_var"],
    [Define to the name of the environment variable that determines the run-time module search path.])
fi
])
m4trace:/usr/local/share/aclocal/ltdl.m4:591: -1- AU_DEFUN([AC_LTDL_SHLIBPATH], [m4_if($#, 0, [LT_SYS_MODULE_PATH], [LT_SYS_MODULE_PATH($@)])])
m4trace:/usr/local/share/aclocal/ltdl.m4:591: -1- AC_DEFUN([AC_LTDL_SHLIBPATH], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_SHLIBPATH' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_MODULE_PATH], [LT_SYS_MODULE_PATH($@)])])
m4trace:/usr/local/share/aclocal/ltdl.m4:598: -1- AC_DEFUN([LT_SYS_DLSEARCH_PATH], [m4_require([_LT_SYS_DYNAMIC_LINKER])dnl
AC_CACHE_CHECK([for the default library search path],
  [lt_cv_sys_dlsearch_path],
  [lt_cv_sys_dlsearch_path="$sys_lib_dlsearch_path_spec"])
if test -n "$lt_cv_sys_dlsearch_path"; then
  sys_dlsearch_path=
  for dir in $lt_cv_sys_dlsearch_path; do
    if test -z "$sys_dlsearch_path"; then
      sys_dlsearch_path="$dir"
    else
      sys_dlsearch_path="$sys_dlsearch_path$PATH_SEPARATOR$dir"
    fi
  done
  m4_pattern_allow([LT_DLSEARCH_PATH])dnl
  AC_DEFINE_UNQUOTED([LT_DLSEARCH_PATH], ["$sys_dlsearch_path"],
    [Define to the system default library search path.])
fi
])
m4trace:/usr/local/share/aclocal/ltdl.m4:619: -1- AU_DEFUN([AC_LTDL_SYSSEARCHPATH], [m4_if($#, 0, [LT_SYS_DLSEARCH_PATH], [LT_SYS_DLSEARCH_PATH($@)])])
m4trace:/usr/local/share/aclocal/ltdl.m4:619: -1- AC_DEFUN([AC_LTDL_SYSSEARCHPATH], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_SYSSEARCHPATH' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_DLSEARCH_PATH], [LT_SYS_DLSEARCH_PATH($@)])])
m4trace:/usr/local/share/aclocal/ltdl.m4:645: -1- AC_DEFUN([LT_LIB_DLLOAD], [m4_pattern_allow([^LT_DLLOADERS$])
LT_DLLOADERS=
AC_SUBST([LT_DLLOADERS])

AC_LANG_PUSH([C])

LIBADD_DLOPEN=
AC_SEARCH_LIBS([dlopen], [dl],
	[AC_DEFINE([HAVE_LIBDL], [1],
		   [Define if you have the libdl library or equivalent.])
	if test "$ac_cv_search_dlopen" != "none required" ; then
	  LIBADD_DLOPEN="-ldl"
	fi
	libltdl_cv_lib_dl_dlopen="yes"
	LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dlopen.la"],
    [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#if HAVE_DLFCN_H
#  include <dlfcn.h>
#endif
    ]], [[dlopen(0, 0);]])],
	    [AC_DEFINE([HAVE_LIBDL], [1],
		       [Define if you have the libdl library or equivalent.])
	    libltdl_cv_func_dlopen="yes"
	    LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dlopen.la"],
	[AC_CHECK_LIB([svld], [dlopen],
		[AC_DEFINE([HAVE_LIBDL], [1],
			 [Define if you have the libdl library or equivalent.])
	        LIBADD_DLOPEN="-lsvld" libltdl_cv_func_dlopen="yes"
		LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dlopen.la"])])])
if test x"$libltdl_cv_func_dlopen" = xyes || test x"$libltdl_cv_lib_dl_dlopen" = xyes
then
  lt_save_LIBS="$LIBS"
  LIBS="$LIBS $LIBADD_DLOPEN"
  AC_CHECK_FUNCS([dlerror])
  LIBS="$lt_save_LIBS"
fi
AC_SUBST([LIBADD_DLOPEN])

LIBADD_SHL_LOAD=
AC_CHECK_FUNC([shl_load],
	[AC_DEFINE([HAVE_SHL_LOAD], [1],
		   [Define if you have the shl_load function.])
	LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}shl_load.la"],
    [AC_CHECK_LIB([dld], [shl_load],
	    [AC_DEFINE([HAVE_SHL_LOAD], [1],
		       [Define if you have the shl_load function.])
	    LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}shl_load.la"
	    LIBADD_SHL_LOAD="-ldld"])])
AC_SUBST([LIBADD_SHL_LOAD])

case $host_os in
darwin[[1567]].*)
# We only want this for pre-Mac OS X 10.4.
  AC_CHECK_FUNC([_dyld_func_lookup],
	[AC_DEFINE([HAVE_DYLD], [1],
		   [Define if you have the _dyld_func_lookup function.])
	LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dyld.la"])
  ;;
beos*)
  LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}load_add_on.la"
  ;;
cygwin* | mingw* | os2* | pw32*)
  AC_CHECK_DECLS([cygwin_conv_path], [], [], [[#include <sys/cygwin.h>]])
  LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}loadlibrary.la"
  ;;
esac

AC_CHECK_LIB([dld], [dld_link],
	[AC_DEFINE([HAVE_DLD], [1],
		   [Define if you have the GNU dld library.])
		LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dld_link.la"])
AC_SUBST([LIBADD_DLD_LINK])

m4_pattern_allow([^LT_DLPREOPEN$])
LT_DLPREOPEN=
if test -n "$LT_DLLOADERS"
then
  for lt_loader in $LT_DLLOADERS; do
    LT_DLPREOPEN="$LT_DLPREOPEN-dlpreopen $lt_loader "
  done
  AC_DEFINE([HAVE_LIBDLLOADER], [1],
            [Define if libdlloader will be built on this platform])
fi
AC_SUBST([LT_DLPREOPEN])

dnl This isn't used anymore, but set it for backwards compatibility
LIBADD_DL="$LIBADD_DLOPEN $LIBADD_SHL_LOAD"
AC_SUBST([LIBADD_DL])

AC_LANG_POP
])
m4trace:/usr/local/share/aclocal/ltdl.m4:738: -1- AU_DEFUN([AC_LTDL_DLLIB], [m4_if($#, 0, [LT_LIB_DLLOAD], [LT_LIB_DLLOAD($@)])])
m4trace:/usr/local/share/aclocal/ltdl.m4:738: -1- AC_DEFUN([AC_LTDL_DLLIB], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_DLLIB' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_LIB_DLLOAD], [LT_LIB_DLLOAD($@)])])
m4trace:/usr/local/share/aclocal/ltdl.m4:746: -1- AC_DEFUN([LT_SYS_SYMBOL_USCORE], [m4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl
AC_CACHE_CHECK([for _ prefix in compiled symbols],
  [lt_cv_sys_symbol_underscore],
  [lt_cv_sys_symbol_underscore=no
  cat > conftest.$ac_ext <<_LT_EOF
void nm_test_func(){}
int main(){nm_test_func;return 0;}
_LT_EOF
  if AC_TRY_EVAL(ac_compile); then
    # Now try to grab the symbols.
    ac_nlist=conftest.nm
    if AC_TRY_EVAL(NM conftest.$ac_objext \| $lt_cv_sys_global_symbol_pipe \> $ac_nlist) && test -s "$ac_nlist"; then
      # See whether the symbols have a leading underscore.
      if grep '^. _nm_test_func' "$ac_nlist" >/dev/null; then
        lt_cv_sys_symbol_underscore=yes
      else
        if grep '^. nm_test_func ' "$ac_nlist" >/dev/null; then
	  :
        else
	  echo "configure: cannot find nm_test_func in $ac_nlist" >&AS_MESSAGE_LOG_FD
        fi
      fi
    else
      echo "configure: cannot run $lt_cv_sys_global_symbol_pipe" >&AS_MESSAGE_LOG_FD
    fi
  else
    echo "configure: failed program was:" >&AS_MESSAGE_LOG_FD
    cat conftest.c >&AS_MESSAGE_LOG_FD
  fi
  rm -rf conftest*
  ])
  sys_symbol_underscore=$lt_cv_sys_symbol_underscore
  AC_SUBST([sys_symbol_underscore])
])
m4trace:/usr/local/share/aclocal/ltdl.m4:783: -1- AU_DEFUN([AC_LTDL_SYMBOL_USCORE], [m4_if($#, 0, [LT_SYS_SYMBOL_USCORE], [LT_SYS_SYMBOL_USCORE($@)])])
m4trace:/usr/local/share/aclocal/ltdl.m4:783: -1- AC_DEFUN([AC_LTDL_SYMBOL_USCORE], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_SYMBOL_USCORE' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_SYMBOL_USCORE], [LT_SYS_SYMBOL_USCORE($@)])])
m4trace:/usr/local/share/aclocal/ltdl.m4:790: -1- AC_DEFUN([LT_FUNC_DLSYM_USCORE], [AC_REQUIRE([LT_SYS_SYMBOL_USCORE])dnl
if test x"$lt_cv_sys_symbol_underscore" = xyes; then
  if test x"$libltdl_cv_func_dlopen" = xyes ||
     test x"$libltdl_cv_lib_dl_dlopen" = xyes ; then
	AC_CACHE_CHECK([whether we have to add an underscore for dlsym],
	  [libltdl_cv_need_uscore],
	  [libltdl_cv_need_uscore=unknown
          save_LIBS="$LIBS"
          LIBS="$LIBS $LIBADD_DLOPEN"
	  _LT_TRY_DLOPEN_SELF(
	    [libltdl_cv_need_uscore=no], [libltdl_cv_need_uscore=yes],
	    [],				 [libltdl_cv_need_uscore=cross])
	  LIBS="$save_LIBS"
	])
  fi
fi

if test x"$libltdl_cv_need_uscore" = xyes; then
  AC_DEFINE([NEED_USCORE], [1],
    [Define if dlsym() requires a leading underscore in symbol names.])
fi
])
m4trace:/usr/local/share/aclocal/ltdl.m4:815: -1- AU_DEFUN([AC_LTDL_DLSYM_USCORE], [m4_if($#, 0, [LT_FUNC_DLSYM_USCORE], [LT_FUNC_DLSYM_USCORE($@)])])
m4trace:/usr/local/share/aclocal/ltdl.m4:815: -1- AC_DEFUN([AC_LTDL_DLSYM_USCORE], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_DLSYM_USCORE' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_FUNC_DLSYM_USCORE], [LT_FUNC_DLSYM_USCORE($@)])])
m4trace:/usr/local/share/aclocal/ltoptions.m4:14: -1- AC_DEFUN([LTOPTIONS_VERSION], [m4_if([1])])
m4trace:/usr/local/share/aclocal/ltoptions.m4:111: -1- AU_DEFUN([AC_LIBTOOL_DLOPEN], [_LT_SET_OPTION([LT_INIT], [dlopen])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the `dlopen' option into LT_INIT's first parameter.])
])
m4trace:/usr/local/share/aclocal/ltoptions.m4:111: -1- AC_DEFUN([AC_LIBTOOL_DLOPEN], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_DLOPEN' is obsolete.
You should run autoupdate.])dnl
_LT_SET_OPTION([LT_INIT], [dlopen])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the `dlopen' option into LT_INIT's first parameter.])
])
m4trace:/usr/local/share/aclocal/ltoptions.m4:146: -1- AU_DEFUN([AC_LIBTOOL_WIN32_DLL], [AC_REQUIRE([AC_CANONICAL_HOST])dnl
_LT_SET_OPTION([LT_INIT], [win32-dll])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the `win32-dll' option into LT_INIT's first parameter.])
])
m4trace:/usr/local/share/aclocal/ltoptions.m4:146: -1- AC_DEFUN([AC_LIBTOOL_WIN32_DLL], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_WIN32_DLL' is obsolete.
You should run autoupdate.])dnl
AC_REQUIRE([AC_CANONICAL_HOST])dnl
_LT_SET_OPTION([LT_INIT], [win32-dll])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the `win32-dll' option into LT_INIT's first parameter.])
])
m4trace:/usr/local/share/aclocal/ltoptions.m4:195: -1- AC_DEFUN([AC_ENABLE_SHARED], [_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[shared])
])
m4trace:/usr/local/share/aclocal/ltoptions.m4:199: -1- AC_DEFUN([AC_DISABLE_SHARED], [_LT_SET_OPTION([LT_INIT], [disable-shared])
])
m4trace:/usr/local/share/aclocal/ltoptions.m4:203: -1- AU_DEFUN([AM_ENABLE_SHARED], [AC_ENABLE_SHARED($@)])
m4trace:/usr/local/share/aclocal/ltoptions.m4:203: -1- AC_DEFUN([AM_ENABLE_SHARED], [AC_DIAGNOSE([obsolete], [The macro `AM_ENABLE_SHARED' is obsolete.
You should run autoupdate.])dnl
AC_ENABLE_SHARED($@)])
m4trace:/usr/local/share/aclocal/ltoptions.m4:204: -1- AU_DEFUN([AM_DISABLE_SHARED], [AC_DISABLE_SHARED($@)])
m4trace:/usr/local/share/aclocal/ltoptions.m4:204: -1- AC_DEFUN([AM_DISABLE_SHARED], [AC_DIAGNOSE([obsolete], [The macro `AM_DISABLE_SHARED' is obsolete.
You should run autoupdate.])dnl
AC_DISABLE_SHARED($@)])
m4trace:/usr/local/share/aclocal/ltoptions.m4:249: -1- AC_DEFUN([AC_ENABLE_STATIC], [_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[static])
])
m4trace:/usr/local/share/aclocal/ltoptions.m4:253: -1- AC_DEFUN([AC_DISABLE_STATIC], [_LT_SET_OPTION([LT_INIT], [disable-static])
])
m4trace:/usr/local/share/aclocal/ltoptions.m4:257: -1- AU_DEFUN([AM_ENABLE_STATIC], [AC_ENABLE_STATIC($@)])
m4trace:/usr/local/share/aclocal/ltoptions.m4:257: -1- AC_DEFUN([AM_ENABLE_STATIC], [AC_DIAGNOSE([obsolete], [The macro `AM_ENABLE_STATIC' is obsolete.
You should run autoupdate.])dnl
AC_ENABLE_STATIC($@)])
m4trace:/usr/local/share/aclocal/ltoptions.m4:258: -1- AU_DEFUN([AM_DISABLE_STATIC], [AC_DISABLE_STATIC($@)])
m4trace:/usr/local/share/aclocal/ltoptions.m4:258: -1- AC_DEFUN([AM_DISABLE_STATIC], [AC_DIAGNOSE([obsolete], [The macro `AM_DISABLE_STATIC' is obsolete.
You should run autoupdate.])dnl
AC_DISABLE_STATIC($@)])
m4trace:/usr/local/share/aclocal/ltoptions.m4:303: -1- AU_DEFUN([AC_ENABLE_FAST_INSTALL], [_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[fast-install])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you put
the `fast-install' option into LT_INIT's first parameter.])
])
m4trace:/usr/local/share/aclocal/ltoptions.m4:303: -1- AC_DEFUN([AC_ENABLE_FAST_INSTALL], [AC_DIAGNOSE([obsolete], [The macro `AC_ENABLE_FAST_INSTALL' is obsolete.
You should run autoupdate.])dnl
_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[fast-install])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you put
the `fast-install' option into LT_INIT's first parameter.])
])
m4trace:/usr/local/share/aclocal/ltoptions.m4:310: -1- AU_DEFUN([AC_DISABLE_FAST_INSTALL], [_LT_SET_OPTION([LT_INIT], [disable-fast-install])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you put
the `disable-fast-install' option into LT_INIT's first parameter.])
])
m4trace:/usr/local/share/aclocal/ltoptions.m4:310: -1- AC_DEFUN([AC_DISABLE_FAST_INSTALL], [AC_DIAGNOSE([obsolete], [The macro `AC_DISABLE_FAST_INSTALL' is obsolete.
You should run autoupdate.])dnl
_LT_SET_OPTION([LT_INIT], [disable-fast-install])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you put
the `disable-fast-install' option into LT_INIT's first parameter.])
])
m4trace:/usr/local/share/aclocal/ltoptions.m4:358: -1- AU_DEFUN([AC_LIBTOOL_PICMODE], [_LT_SET_OPTION([LT_INIT], [pic-only])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the `pic-only' option into LT_INIT's first parameter.])
])
m4trace:/usr/local/share/aclocal/ltoptions.m4:358: -1- AC_DEFUN([AC_LIBTOOL_PICMODE], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_PICMODE' is obsolete.
You should run autoupdate.])dnl
_LT_SET_OPTION([LT_INIT], [pic-only])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the `pic-only' option into LT_INIT's first parameter.])
])
m4trace:/usr/local/share/aclocal/ltsugar.m4:13: -1- AC_DEFUN([LTSUGAR_VERSION], [m4_if([0.1])])
m4trace:/usr/local/share/aclocal/ltversion.m4:18: -1- AC_DEFUN([LTVERSION_VERSION], [macro_version='2.4.2'
macro_revision='1.3337'
_LT_DECL(, macro_version, 0, [Which release of libtool.m4 was used?])
_LT_DECL(, macro_revision, 0)
])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:36: -1- AC_DEFUN([LTOBSOLETE_VERSION], [m4_if([1])])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:40: -1- AC_DEFUN([_LT_AC_PROG_ECHO_BACKSLASH])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:41: -1- AC_DEFUN([_LT_AC_SHELL_INIT])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:42: -1- AC_DEFUN([_LT_AC_SYS_LIBPATH_AIX])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:44: -1- AC_DEFUN([_LT_AC_TAGVAR])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:45: -1- AC_DEFUN([AC_LTDL_ENABLE_INSTALL])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:46: -1- AC_DEFUN([AC_LTDL_PREOPEN])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:47: -1- AC_DEFUN([_LT_AC_SYS_COMPILER])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:48: -1- AC_DEFUN([_LT_AC_LOCK])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:49: -1- AC_DEFUN([AC_LIBTOOL_SYS_OLD_ARCHIVE])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:50: -1- AC_DEFUN([_LT_AC_TRY_DLOPEN_SELF])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:51: -1- AC_DEFUN([AC_LIBTOOL_PROG_CC_C_O])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:52: -1- AC_DEFUN([AC_LIBTOOL_SYS_HARD_LINK_LOCKS])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:53: -1- AC_DEFUN([AC_LIBTOOL_OBJDIR])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:54: -1- AC_DEFUN([AC_LTDL_OBJDIR])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:55: -1- AC_DEFUN([AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:56: -1- AC_DEFUN([AC_LIBTOOL_SYS_LIB_STRIP])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:57: -1- AC_DEFUN([AC_PATH_MAGIC])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:58: -1- AC_DEFUN([AC_PROG_LD_GNU])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:59: -1- AC_DEFUN([AC_PROG_LD_RELOAD_FLAG])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:60: -1- AC_DEFUN([AC_DEPLIBS_CHECK_METHOD])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:61: -1- AC_DEFUN([AC_LIBTOOL_PROG_COMPILER_NO_RTTI])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:62: -1- AC_DEFUN([AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:63: -1- AC_DEFUN([AC_LIBTOOL_PROG_COMPILER_PIC])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:64: -1- AC_DEFUN([AC_LIBTOOL_PROG_LD_SHLIBS])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:65: -1- AC_DEFUN([AC_LIBTOOL_POSTDEP_PREDEP])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:66: -1- AC_DEFUN([LT_AC_PROG_EGREP])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:71: -1- AC_DEFUN([_AC_PROG_LIBTOOL])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:72: -1- AC_DEFUN([AC_LIBTOOL_SETUP])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:73: -1- AC_DEFUN([_LT_AC_CHECK_DLFCN])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:74: -1- AC_DEFUN([AC_LIBTOOL_SYS_DYNAMIC_LINKER])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:75: -1- AC_DEFUN([_LT_AC_TAGCONFIG])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:77: -1- AC_DEFUN([_LT_AC_LANG_CXX])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:78: -1- AC_DEFUN([_LT_AC_LANG_F77])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:79: -1- AC_DEFUN([_LT_AC_LANG_GCJ])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:80: -1- AC_DEFUN([AC_LIBTOOL_LANG_C_CONFIG])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:81: -1- AC_DEFUN([_LT_AC_LANG_C_CONFIG])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:82: -1- AC_DEFUN([AC_LIBTOOL_LANG_CXX_CONFIG])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:83: -1- AC_DEFUN([_LT_AC_LANG_CXX_CONFIG])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:84: -1- AC_DEFUN([AC_LIBTOOL_LANG_F77_CONFIG])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:85: -1- AC_DEFUN([_LT_AC_LANG_F77_CONFIG])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:86: -1- AC_DEFUN([AC_LIBTOOL_LANG_GCJ_CONFIG])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:87: -1- AC_DEFUN([_LT_AC_LANG_GCJ_CONFIG])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:88: -1- AC_DEFUN([AC_LIBTOOL_LANG_RC_CONFIG])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:89: -1- AC_DEFUN([_LT_AC_LANG_RC_CONFIG])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:90: -1- AC_DEFUN([AC_LIBTOOL_CONFIG])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:91: -1- AC_DEFUN([_LT_AC_FILE_LTDLL_C])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:93: -1- AC_DEFUN([_LT_AC_PROG_CXXCPP])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:96: -1- AC_DEFUN([_LT_PROG_F77])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:97: -1- AC_DEFUN([_LT_PROG_FC])
m4trace:/usr/local/share/aclocal/lt~obsolete.m4:98: -1- AC_DEFUN([_LT_PROG_CXX])
m4trace:/usr/local/share/aclocal-1.12/amversion.m4:16: -1- AC_DEFUN([AM_AUTOMAKE_VERSION], [am__api_version='1.12'
dnl Some users find AM_AUTOMAKE_VERSION and mistake it for a way to
dnl require some minimum version.  Point them to the right macro.
m4_if([$1], [1.12.2], [],
      [AC_FATAL([Do not call $0, use AM_INIT_AUTOMAKE([$1]).])])dnl
])
m4trace:/usr/local/share/aclocal-1.12/amversion.m4:35: -1- AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION], [AM_AUTOMAKE_VERSION([1.12.2])dnl
m4_ifndef([AC_AUTOCONF_VERSION],
  [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl
_AM_AUTOCONF_VERSION(m4_defn([AC_AUTOCONF_VERSION]))])
m4trace:/usr/local/share/aclocal-1.12/as.m4:13: -1- AC_DEFUN([AM_PROG_AS], [# By default we simply use the C compiler to build assembly code.
AC_REQUIRE([AC_PROG_CC])
test "${CCAS+set}" = set || CCAS=$CC
test "${CCASFLAGS+set}" = set || CCASFLAGS=$CFLAGS
AC_ARG_VAR([CCAS],      [assembler compiler command (defaults to CC)])
AC_ARG_VAR([CCASFLAGS], [assembler compiler flags (defaults to CFLAGS)])
_AM_IF_OPTION([no-dependencies],, [_AM_DEPENDENCIES([CCAS])])dnl
])
m4trace:/usr/local/share/aclocal-1.12/auxdir.m4:49: -1- AC_DEFUN([AM_AUX_DIR_EXPAND], [dnl Rely on autoconf to set up CDPATH properly.
AC_PREREQ([2.50])dnl
# expand $ac_aux_dir to an absolute path
am_aux_dir=`cd $ac_aux_dir && pwd`
])
m4trace:/usr/local/share/aclocal-1.12/cond.m4:14: -1- AC_DEFUN([AM_CONDITIONAL], [AC_PREREQ([2.52])dnl
 m4_if([$1], [TRUE],  [AC_FATAL([$0: invalid condition: $1])],
       [$1], [FALSE], [AC_FATAL([$0: invalid condition: $1])])dnl
AC_SUBST([$1_TRUE])dnl
AC_SUBST([$1_FALSE])dnl
_AM_SUBST_NOTMAKE([$1_TRUE])dnl
_AM_SUBST_NOTMAKE([$1_FALSE])dnl
m4_define([_AM_COND_VALUE_$1], [$2])dnl
if $2; then
  $1_TRUE=
  $1_FALSE='#'
else
  $1_TRUE='#'
  $1_FALSE=
fi
AC_CONFIG_COMMANDS_PRE(
[if test -z "${$1_TRUE}" && test -z "${$1_FALSE}"; then
  AC_MSG_ERROR([[conditional "$1" was never defined.
Usually this means the macro was only invoked conditionally.]])
fi])])
m4trace:/usr/local/share/aclocal-1.12/depend.m4:27: -1- AC_DEFUN([_AM_DEPENDENCIES], [AC_REQUIRE([AM_SET_DEPDIR])dnl
AC_REQUIRE([AM_OUTPUT_DEPENDENCY_COMMANDS])dnl
AC_REQUIRE([AM_MAKE_INCLUDE])dnl
AC_REQUIRE([AM_DEP_TRACK])dnl

m4_if([$1], [CC],   [depcc="$CC"   am_compiler_list=],
      [$1], [CXX],  [depcc="$CXX"  am_compiler_list=],
      [$1], [OBJC], [depcc="$OBJC" am_compiler_list='gcc3 gcc'],
      [$1], [OBJCXX], [depcc="$OBJCXX" am_compiler_list='gcc3 gcc'],
      [$1], [UPC],  [depcc="$UPC"  am_compiler_list=],
      [$1], [GCJ],  [depcc="$GCJ"  am_compiler_list='gcc3 gcc'],
                    [depcc="$$1"   am_compiler_list=])

AC_CACHE_CHECK([dependency style of $depcc],
               [am_cv_$1_dependencies_compiler_type],
[if test -z "$AMDEP_TRUE" && test -f "$am_depcomp"; then
  # We make a subdir and do the tests there.  Otherwise we can end up
  # making bogus files that we don't know about and never remove.  For
  # instance it was reported that on HP-UX the gcc test will end up
  # making a dummy file named 'D' -- because '-MD' means "put the output
  # in D".
  rm -rf conftest.dir
  mkdir conftest.dir
  # Copy depcomp to subdir because otherwise we won't find it if we're
  # using a relative directory.
  cp "$am_depcomp" conftest.dir
  cd conftest.dir
  # We will build objects and dependencies in a subdirectory because
  # it helps to detect inapplicable dependency modes.  For instance
  # both Tru64's cc and ICC support -MD to output dependencies as a
  # side effect of compilation, but ICC will put the dependencies in
  # the current directory while Tru64 will put them in the object
  # directory.
  mkdir sub

  am_cv_$1_dependencies_compiler_type=none
  if test "$am_compiler_list" = ""; then
     am_compiler_list=`sed -n ['s/^#*\([a-zA-Z0-9]*\))$/\1/p'] < ./depcomp`
  fi
  am__universal=false
  m4_case([$1], [CC],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac],
    [CXX],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac])

  for depmode in $am_compiler_list; do
    # Setup a source with many dependencies, because some compilers
    # like to wrap large dependency lists on column 80 (with \), and
    # we should not choose a depcomp mode which is confused by this.
    #
    # We need to recreate these files for each test, as the compiler may
    # overwrite some of them when testing with obscure command lines.
    # This happens at least with the AIX C compiler.
    : > sub/conftest.c
    for i in 1 2 3 4 5 6; do
      echo '#include "conftst'$i'.h"' >> sub/conftest.c
      # Using ": > sub/conftst$i.h" creates only sub/conftst1.h with
      # Solaris 10 /bin/sh.
      echo '/* dummy */' > sub/conftst$i.h
    done
    echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf

    # We check with '-c' and '-o' for the sake of the "dashmstdout"
    # mode.  It turns out that the SunPro C++ compiler does not properly
    # handle '-M -o', and we need to detect this.  Also, some Intel
    # versions had trouble with output in subdirs.
    am__obj=sub/conftest.${OBJEXT-o}
    am__minus_obj="-o $am__obj"
    case $depmode in
    gcc)
      # This depmode causes a compiler race in universal mode.
      test "$am__universal" = false || continue
      ;;
    nosideeffect)
      # After this tag, mechanisms are not by side-effect, so they'll
      # only be used when explicitly requested.
      if test "x$enable_dependency_tracking" = xyes; then
	continue
      else
	break
      fi
      ;;
    msvc7 | msvc7msys | msvisualcpp | msvcmsys)
      # This compiler won't grok '-c -o', but also, the minuso test has
      # not run yet.  These depmodes are late enough in the game, and
      # so weak that their functioning should not be impacted.
      am__obj=conftest.${OBJEXT-o}
      am__minus_obj=
      ;;
    none) break ;;
    esac
    if depmode=$depmode \
       source=sub/conftest.c object=$am__obj \
       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \
         >/dev/null 2>conftest.err &&
       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&
       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&
       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
      # icc doesn't choke on unknown options, it will just issue warnings
      # or remarks (even with -Werror).  So we grep stderr for any message
      # that says an option was ignored or not supported.
      # When given -MP, icc 7.0 and 7.1 complain thusly:
      #   icc: Command line warning: ignoring option '-M'; no argument required
      # The diagnosis changed in icc 8.0:
      #   icc: Command line remark: option '-MP' not supported
      if (grep 'ignoring option' conftest.err ||
          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
        am_cv_$1_dependencies_compiler_type=$depmode
        break
      fi
    fi
  done

  cd ..
  rm -rf conftest.dir
else
  am_cv_$1_dependencies_compiler_type=none
fi
])
AC_SUBST([$1DEPMODE], [depmode=$am_cv_$1_dependencies_compiler_type])
AM_CONDITIONAL([am__fastdep$1], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_$1_dependencies_compiler_type" = gcc3])
])
m4trace:/usr/local/share/aclocal-1.12/depend.m4:164: -1- AC_DEFUN([AM_SET_DEPDIR], [AC_REQUIRE([AM_SET_LEADING_DOT])dnl
AC_SUBST([DEPDIR], ["${am__leading_dot}deps"])dnl
])
m4trace:/usr/local/share/aclocal-1.12/depend.m4:172: -1- AC_DEFUN([AM_DEP_TRACK], [AC_ARG_ENABLE([dependency-tracking], [dnl
AS_HELP_STRING(
  [--enable-dependency-tracking],
  [do not reject slow dependency extractors])
AS_HELP_STRING(
  [--disable-dependency-tracking],
  [speeds up one-time build])])
if test "x$enable_dependency_tracking" != xno; then
  am_depcomp="$ac_aux_dir/depcomp"
  AMDEPBACKSLASH='\'
  am__nodep='_no'
fi
AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
AC_SUBST([AMDEPBACKSLASH])dnl
_AM_SUBST_NOTMAKE([AMDEPBACKSLASH])dnl
AC_SUBST([am__nodep])dnl
_AM_SUBST_NOTMAKE([am__nodep])dnl
])
m4trace:/usr/local/share/aclocal-1.12/depout.m4:13: -1- AC_DEFUN([_AM_OUTPUT_DEPENDENCY_COMMANDS], [{
  # Autoconf 2.62 quotes --file arguments for eval, but not when files
  # are listed without --file.  Let's play safe and only enable the eval
  # if we detect the quoting.
  case $CONFIG_FILES in
  *\'*) eval set x "$CONFIG_FILES" ;;
  *)   set x $CONFIG_FILES ;;
  esac
  shift
  for mf
  do
    # Strip MF so we end up with the name of the file.
    mf=`echo "$mf" | sed -e 's/:.*$//'`
    # Check whether this is an Automake generated Makefile or not.
    # We used to match only the files named 'Makefile.in', but
    # some people rename them; so instead we look at the file content.
    # Grep'ing the first line is not enough: some people post-process
    # each Makefile.in and add a new line on top of each file to say so.
    # Grep'ing the whole file is not good either: AIX grep has a line
    # limit of 2048, but all sed's we know have understand at least 4000.
    if sed -n 's,^#.*generated by automake.*,X,p' "$mf" | grep X >/dev/null 2>&1; then
      dirpart=`AS_DIRNAME("$mf")`
    else
      continue
    fi
    # Extract the definition of DEPDIR, am__include, and am__quote
    # from the Makefile without running 'make'.
    DEPDIR=`sed -n 's/^DEPDIR = //p' < "$mf"`
    test -z "$DEPDIR" && continue
    am__include=`sed -n 's/^am__include = //p' < "$mf"`
    test -z "am__include" && continue
    am__quote=`sed -n 's/^am__quote = //p' < "$mf"`
    # Find all dependency output files, they are included files with
    # $(DEPDIR) in their names.  We invoke sed twice because it is the
    # simplest approach to changing $(DEPDIR) to its actual value in the
    # expansion.
    for file in `sed -n "
      s/^$am__include $am__quote\(.*(DEPDIR).*\)$am__quote"'$/\1/p' <"$mf" | \
	 sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g'`; do
      # Make sure the directory exists.
      test -f "$dirpart/$file" && continue
      fdir=`AS_DIRNAME(["$file"])`
      AS_MKDIR_P([$dirpart/$fdir])
      # echo "creating $dirpart/$file"
      echo '# dummy' > "$dirpart/$file"
    done
  done
}
])
m4trace:/usr/local/share/aclocal-1.12/depout.m4:72: -1- AC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS], [AC_CONFIG_COMMANDS([depfiles],
     [test x"$AMDEP_TRUE" != x"" || _AM_OUTPUT_DEPENDENCY_COMMANDS],
     [AMDEP_TRUE="$AMDEP_TRUE" ac_aux_dir="$ac_aux_dir"])
])
m4trace:/usr/local/share/aclocal-1.12/init.m4:25: -1- AC_DEFUN([AM_INIT_AUTOMAKE], [AC_PREREQ([2.62])dnl
dnl Autoconf wants to disallow AM_ names.  We explicitly allow
dnl the ones we care about.
m4_pattern_allow([^AM_[A-Z]+FLAGS$])dnl
AC_REQUIRE([AM_SET_CURRENT_AUTOMAKE_VERSION])dnl
AC_REQUIRE([AC_PROG_INSTALL])dnl
if test "`cd $srcdir && pwd`" != "`pwd`"; then
  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output
  # is not polluted with repeated "-I."
  AC_SUBST([am__isrc], [' -I$(srcdir)'])_AM_SUBST_NOTMAKE([am__isrc])dnl
  # test to see if srcdir already configured
  if test -f $srcdir/config.status; then
    AC_MSG_ERROR([source directory already configured; run "make distclean" there first])
  fi
fi

# test whether we have cygpath
if test -z "$CYGPATH_W"; then
  if (cygpath --version) >/dev/null 2>/dev/null; then
    CYGPATH_W='cygpath -w'
  else
    CYGPATH_W=echo
  fi
fi
AC_SUBST([CYGPATH_W])

# Define the identity of the package.
dnl Distinguish between old-style and new-style calls.
m4_ifval([$2],
[AC_DIAGNOSE([obsolete],
[$0: two- and three-arguments forms are deprecated.  For more info, see:
http://www.gnu.org/software/automake/manual/automake.html#Modernize-AM_INIT_AUTOMAKE-invocation])
m4_ifval([$3], [_AM_SET_OPTION([no-define])])dnl
 AC_SUBST([PACKAGE], [$1])dnl
 AC_SUBST([VERSION], [$2])],
[_AM_SET_OPTIONS([$1])dnl
dnl Diagnose old-style AC_INIT with new-style AM_AUTOMAKE_INIT.
m4_if(
  m4_ifdef([AC_PACKAGE_NAME], [ok]):m4_ifdef([AC_PACKAGE_VERSION], [ok]),
  [ok:ok],,
  [m4_fatal([AC_INIT should be called with package and version arguments])])dnl
 AC_SUBST([PACKAGE], ['AC_PACKAGE_TARNAME'])dnl
 AC_SUBST([VERSION], ['AC_PACKAGE_VERSION'])])dnl

_AM_IF_OPTION([no-define],,
[AC_DEFINE_UNQUOTED([PACKAGE], ["$PACKAGE"], [Name of package])
 AC_DEFINE_UNQUOTED([VERSION], ["$VERSION"], [Version number of package])])dnl

# Some tools Automake needs.
AC_REQUIRE([AM_SANITY_CHECK])dnl
AC_REQUIRE([AC_ARG_PROGRAM])dnl
AM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])
AM_MISSING_PROG([AUTOCONF], [autoconf])
AM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])
AM_MISSING_PROG([AUTOHEADER], [autoheader])
AM_MISSING_PROG([MAKEINFO], [makeinfo])
AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
AC_REQUIRE([AM_PROG_INSTALL_STRIP])dnl
AC_REQUIRE([AC_PROG_MKDIR_P])dnl
# For better backward compatibility.  To be removed once Automake 1.9.x
# dies out for good.  For more background, see:
# <http://lists.gnu.org/archive/html/automake/2012-07/msg00001.html>
# <http://lists.gnu.org/archive/html/automake/2012-07/msg00014.html>
AC_SUBST([mkdir_p], ['$(MKDIR_P)'])
# We need awk for the "check" target.  The system "awk" is bad on
# some platforms.
AC_REQUIRE([AC_PROG_AWK])dnl
AC_REQUIRE([AC_PROG_MAKE_SET])dnl
AC_REQUIRE([AM_SET_LEADING_DOT])dnl
_AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])],
	      [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
_AM_IF_OPTION([no-dependencies],,
[AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES([CC])],
		  [m4_define([AC_PROG_CC],
			     m4_defn([AC_PROG_CC])[_AM_DEPENDENCIES([CC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES([CXX])],
		  [m4_define([AC_PROG_CXX],
			     m4_defn([AC_PROG_CXX])[_AM_DEPENDENCIES([CXX])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES([OBJC])],
		  [m4_define([AC_PROG_OBJC],
			     m4_defn([AC_PROG_OBJC])[_AM_DEPENDENCIES([OBJC])])])dnl
dnl Support for Objective C++ was only introduced in Autoconf 2.65,
dnl but we still cater to Autoconf 2.62.
m4_ifdef([AC_PROG_OBJCXX],
[AC_PROVIDE_IFELSE([AC_PROG_OBJCXX],
		  [_AM_DEPENDENCIES([OBJCXX])],
		  [m4_define([AC_PROG_OBJCXX],
			     m4_defn([AC_PROG_OBJCXX])[_AM_DEPENDENCIES([OBJCXX])])])])dnl
])
_AM_IF_OPTION([silent-rules], [AC_REQUIRE([AM_SILENT_RULES])])dnl
dnl The 'parallel-tests' driver may need to know about EXEEXT, so add the
dnl 'am__EXEEXT' conditional if _AM_COMPILER_EXEEXT was seen.  This macro
dnl is hooked onto _AC_COMPILER_EXEEXT early, see below.
AC_CONFIG_COMMANDS_PRE(dnl
[m4_provide_if([_AM_COMPILER_EXEEXT],
  [AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])])])dnl
])
m4trace:/usr/local/share/aclocal-1.12/init.m4:142: -1- AC_DEFUN([_AC_AM_CONFIG_HEADER_HOOK], [# Compute $1's index in $config_headers.
_am_arg=$1
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`AS_DIRNAME(["$_am_arg"])`/stamp-h[]$_am_stamp_count])
m4trace:/usr/local/share/aclocal-1.12/install-sh.m4:13: -1- AC_DEFUN([AM_PROG_INSTALL_SH], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
if test x"${install_sh}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    install_sh="\${SHELL} '$am_aux_dir/install-sh'" ;;
  *)
    install_sh="\${SHELL} $am_aux_dir/install-sh"
  esac
fi
AC_SUBST([install_sh])])
m4trace:/usr/local/share/aclocal-1.12/lead-dot.m4:12: -1- AC_DEFUN([AM_SET_LEADING_DOT], [rm -rf .tst 2>/dev/null
mkdir .tst 2>/dev/null
if test -d .tst; then
  am__leading_dot=.
else
  am__leading_dot=_
fi
rmdir .tst 2>/dev/null
AC_SUBST([am__leading_dot])])
m4trace:/usr/local/share/aclocal-1.12/lex.m4:15: -1- AC_DEFUN([AM_PROG_LEX], [AC_PREREQ([2.50])dnl
AC_REQUIRE([AM_MISSING_HAS_RUN])dnl
AC_REQUIRE([AC_PROG_LEX])dnl
if test "$LEX" = :; then
  LEX=${am_missing_run}flex
fi])
m4trace:/usr/local/share/aclocal-1.12/make.m4:14: -1- AC_DEFUN([AM_MAKE_INCLUDE], [am_make=${MAKE-make}
cat > confinc << 'END'
am__doit:
	@echo this is the am__doit target
.PHONY: am__doit
END
# If we don't find an include directive, just comment out the code.
AC_MSG_CHECKING([for style of include used by $am_make])
am__include="#"
am__quote=
_am_result=none
# First try GNU make style include.
echo "include confinc" > confmf
# Ignore all kinds of additional output from 'make'.
case `$am_make -s -f confmf 2> /dev/null` in #(
*the\ am__doit\ target*)
  am__include=include
  am__quote=
  _am_result=GNU
  ;;
esac
# Now try BSD make style include.
if test "$am__include" = "#"; then
   echo '.include "confinc"' > confmf
   case `$am_make -s -f confmf 2> /dev/null` in #(
   *the\ am__doit\ target*)
     am__include=.include
     am__quote="\""
     _am_result=BSD
     ;;
   esac
fi
AC_SUBST([am__include])
AC_SUBST([am__quote])
AC_MSG_RESULT([$_am_result])
rm -f confinc confmf
])
m4trace:/usr/local/share/aclocal-1.12/missing.m4:13: -1- AC_DEFUN([AM_MISSING_PROG], [AC_REQUIRE([AM_MISSING_HAS_RUN])
$1=${$1-"${am_missing_run}$2"}
AC_SUBST($1)])
m4trace:/usr/local/share/aclocal-1.12/missing.m4:23: -1- AC_DEFUN([AM_MISSING_HAS_RUN], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([missing])dnl
if test x"${MISSING+set}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    MISSING="\${SHELL} \"$am_aux_dir/missing\"" ;;
  *)
    MISSING="\${SHELL} $am_aux_dir/missing" ;;
  esac
fi
# Use eval to expand $SHELL
if eval "$MISSING --run true"; then
  am_missing_run="$MISSING --run "
else
  am_missing_run=
  AC_MSG_WARN(['missing' script is too old or missing])
fi
])
m4trace:/usr/local/share/aclocal-1.12/options.m4:13: -1- AC_DEFUN([_AM_MANGLE_OPTION], [[_AM_OPTION_]m4_bpatsubst($1, [[^a-zA-Z0-9_]], [_])])
m4trace:/usr/local/share/aclocal-1.12/options.m4:19: -1- AC_DEFUN([_AM_SET_OPTION], [m4_define(_AM_MANGLE_OPTION([$1]), [1])])
m4trace:/usr/local/share/aclocal-1.12/options.m4:25: -1- AC_DEFUN([_AM_SET_OPTIONS], [m4_foreach_w([_AM_Option], [$1], [_AM_SET_OPTION(_AM_Option)])])
m4trace:/usr/local/share/aclocal-1.12/options.m4:31: -1- AC_DEFUN([_AM_IF_OPTION], [m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])
m4trace:/usr/local/share/aclocal-1.12/runlog.m4:14: -1- AC_DEFUN([AM_RUN_LOG], [{ echo "$as_me:$LINENO: $1" >&AS_MESSAGE_LOG_FD
   ($1) >&AS_MESSAGE_LOG_FD 2>&AS_MESSAGE_LOG_FD
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
   (exit $ac_status); }])
m4trace:/usr/local/share/aclocal-1.12/sanity.m4:13: -1- AC_DEFUN([AM_SANITY_CHECK], [AC_MSG_CHECKING([whether build environment is sane])
# Reject unsafe characters in $srcdir or the absolute working directory
# name.  Accept space and tab only in the latter.
am_lf='
'
case `pwd` in
  *[[\\\"\#\$\&\'\`$am_lf]]*)
    AC_MSG_ERROR([unsafe absolute working directory name]);;
esac
case $srcdir in
  *[[\\\"\#\$\&\'\`$am_lf\ \	]]*)
    AC_MSG_ERROR([unsafe srcdir value: '$srcdir']);;
esac

# Do 'set' in a subshell so we don't clobber the current shell's
# arguments.  Must try -L first in case configure is actually a
# symlink; some systems play weird games with the mod time of symlinks
# (eg FreeBSD returns the mod time of the symlink's containing
# directory).
if (
   am_has_slept=no
   for am_try in 1 2; do
     echo "timestamp, slept: $am_has_slept" > conftest.file
     set X `ls -Lt "$srcdir/configure" conftest.file 2> /dev/null`
     if test "$[*]" = "X"; then
	# -L didn't work.
	set X `ls -t "$srcdir/configure" conftest.file`
     fi
     if test "$[*]" != "X $srcdir/configure conftest.file" \
	&& test "$[*]" != "X conftest.file $srcdir/configure"; then

	# If neither matched, then we have a broken ls.  This can happen
	# if, for instance, CONFIG_SHELL is bash and it inherits a
	# broken ls alias from the environment.  This has actually
	# happened.  Such a system could not be considered "sane".
	AC_MSG_ERROR([ls -t appears to fail.  Make sure there is not a broken
  alias in your environment])
     fi
     if test "$[2]" = conftest.file || test $am_try -eq 2; then
       break
     fi
     # Just in case.
     sleep 1
     am_has_slept=yes
   done
   test "$[2]" = conftest.file
   )
then
   # Ok.
   :
else
   AC_MSG_ERROR([newly created file is older than distributed files!
Check your system clock])
fi
AC_MSG_RESULT([yes])
# If we didn't sleep, we still need to ensure time stamps of config.status and
# generated files are strictly newer.
am_sleep_pid=
if grep 'slept: no' conftest.file >/dev/null 2>&1; then
  ( sleep 1 ) &
  am_sleep_pid=$!
fi
AC_CONFIG_COMMANDS_PRE(
  [AC_MSG_CHECKING([that generated files are newer than configure])
   if test -n "$am_sleep_pid"; then
     # Hide warnings about reused PIDs.
     wait $am_sleep_pid 2>/dev/null
   fi
   AC_MSG_RESULT([done])])
rm -f conftest.file
])
m4trace:/usr/local/share/aclocal-1.12/silent.m4:14: -1- AC_DEFUN([AM_SILENT_RULES], [AC_ARG_ENABLE([silent-rules], [dnl
AS_HELP_STRING(
  [--enable-silent-rules],
  [less verbose build output (undo: "make V=1")])
AS_HELP_STRING(
  [--disable-silent-rules],
  [verbose build output (undo: "make V=0")])dnl
])
case $enable_silent_rules in @%:@ (((
  yes) AM_DEFAULT_VERBOSITY=0;;
   no) AM_DEFAULT_VERBOSITY=1;;
    *) AM_DEFAULT_VERBOSITY=m4_if([$1], [yes], [0], [1]);;
esac
dnl
dnl A few 'make' implementations (e.g., NonStop OS and NextStep)
dnl do not support nested variable expansions.
dnl See automake bug#9928 and bug#10237.
am_make=${MAKE-make}
AC_CACHE_CHECK([whether $am_make supports nested variables],
   [am_cv_make_support_nested_variables],
   [if AS_ECHO([['TRUE=$(BAR$(V))
BAR0=false
BAR1=true
V=1
am__doit:
	@$(TRUE)
.PHONY: am__doit']]) | $am_make -f - >/dev/null 2>&1; then
  am_cv_make_support_nested_variables=yes
else
  am_cv_make_support_nested_variables=no
fi])
if test $am_cv_make_support_nested_variables = yes; then
  dnl Using '$V' instead of '$(V)' breaks IRIX make.
  AM_V='$(V)'
  AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'
else
  AM_V=$AM_DEFAULT_VERBOSITY
  AM_DEFAULT_V=$AM_DEFAULT_VERBOSITY
fi
AC_SUBST([AM_V])dnl
AM_SUBST_NOTMAKE([AM_V])dnl
AC_SUBST([AM_DEFAULT_V])dnl
AM_SUBST_NOTMAKE([AM_DEFAULT_V])dnl
AC_SUBST([AM_DEFAULT_VERBOSITY])dnl
AM_BACKSLASH='\'
AC_SUBST([AM_BACKSLASH])dnl
_AM_SUBST_NOTMAKE([AM_BACKSLASH])dnl
])
m4trace:/usr/local/share/aclocal-1.12/strip.m4:19: -1- AC_DEFUN([AM_PROG_INSTALL_STRIP], [AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
# Installed binaries are usually stripped using 'strip' when the user
# run "make install-strip".  However 'strip' might not be the right
# tool to use in cross-compilation environments, therefore Automake
# will honor the 'STRIP' environment variable to overrule this program.
dnl Don't test for $cross_compiling = yes, because it might be 'maybe'.
if test "$cross_compiling" != no; then
  AC_CHECK_TOOL([STRIP], [strip], :)
fi
INSTALL_STRIP_PROGRAM="\$(install_sh) -c -s"
AC_SUBST([INSTALL_STRIP_PROGRAM])])
m4trace:/usr/local/share/aclocal-1.12/substnot.m4:14: -1- AC_DEFUN([_AM_SUBST_NOTMAKE])
m4trace:/usr/local/share/aclocal-1.12/substnot.m4:19: -1- AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])
m4trace:/usr/local/share/aclocal-1.12/tar.m4:24: -1- AC_DEFUN([_AM_PROG_TAR], [# Always define AMTAR for backward compatibility.  Yes, it's still used
# in the wild :-(  We should find a proper way to deprecate it ...
AC_SUBST([AMTAR], ['$${TAR-tar}'])
m4_if([$1], [v7],
     [am__tar='$${TAR-tar} chof - "$$tardir"' am__untar='$${TAR-tar} xf -'],
     [m4_case([$1], [ustar],, [pax],,
              [m4_fatal([Unknown tar format])])
AC_MSG_CHECKING([how to create a $1 tar archive])
# Loop over all known methods to create a tar archive until one works.
_am_tools='gnutar m4_if([$1], [ustar], [plaintar]) pax cpio none'
_am_tools=${am_cv_prog_tar_$1-$_am_tools}
# Do not fold the above two line into one, because Tru64 sh and
# Solaris sh will not grok spaces in the rhs of '-'.
for _am_tool in $_am_tools
do
  case $_am_tool in
  gnutar)
    for _am_tar in tar gnutar gtar;
    do
      AM_RUN_LOG([$_am_tar --version]) && break
    done
    am__tar="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$$tardir"'
    am__tar_="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$tardir"'
    am__untar="$_am_tar -xf -"
    ;;
  plaintar)
    # Must skip GNU tar: if it does not support --format= it doesn't create
    # ustar tarball either.
    (tar --version) >/dev/null 2>&1 && continue
    am__tar='tar chf - "$$tardir"'
    am__tar_='tar chf - "$tardir"'
    am__untar='tar xf -'
    ;;
  pax)
    am__tar='pax -L -x $1 -w "$$tardir"'
    am__tar_='pax -L -x $1 -w "$tardir"'
    am__untar='pax -r'
    ;;
  cpio)
    am__tar='find "$$tardir" -print | cpio -o -H $1 -L'
    am__tar_='find "$tardir" -print | cpio -o -H $1 -L'
    am__untar='cpio -i -H $1 -d'
    ;;
  none)
    am__tar=false
    am__tar_=false
    am__untar=false
    ;;
  esac

  # If the value was cached, stop now.  We just wanted to have am__tar
  # and am__untar set.
  test -n "${am_cv_prog_tar_$1}" && break

  # tar/untar a dummy directory, and stop if the command works
  rm -rf conftest.dir
  mkdir conftest.dir
  echo GrepMe > conftest.dir/file
  AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])
  rm -rf conftest.dir
  if test -s conftest.tar; then
    AM_RUN_LOG([$am__untar <conftest.tar])
    grep GrepMe conftest.dir/file >/dev/null 2>&1 && break
  fi
done
rm -rf conftest.dir

AC_CACHE_VAL([am_cv_prog_tar_$1], [am_cv_prog_tar_$1=$_am_tool])
AC_MSG_RESULT([$am_cv_prog_tar_$1])])
AC_SUBST([am__tar])
AC_SUBST([am__untar])
])
m4trace:configure.ac:38: -1- m4_include([config/autogen_found_items.m4])
m4trace:config/autogen_found_items.m4:304: -1- m4_include([opal/mca/backtrace/configure.m4])
m4trace:config/autogen_found_items.m4:305: -1- m4_include([opal/mca/event/configure.m4])
m4trace:opal/mca/event/configure.m4:23: -1- AC_DEFUN([MCA_opal_event_CONFIG], [
    opal_event_base_include=
    
    # configure all the components
    MCA_CONFIGURE_FRAMEWORK($1, $2, 1)

    # We must have found exactly 1 static component, or we can't
    # continue.  STOP_AT_FIRST will guarantee that we find at most
    # one.  We need to check here that we found *at least* one.
    AS_IF([test "$MCA_opal_event_STATIC_COMPONENTS" = ""],
          [AC_MSG_WARN([Did not find a suitable static opal event component])
           AC_MSG_ERROR([Cannot continue])])

    # We need to find out what the underlying component set
    # HAVE_WORKING_EVENTOPS was set to.  This is for systems that
    # don't have working poll(), etc. (e.g., Cray) -- we still need an
    # event component (for timers, etc.), but we don't have working
    # event ops.  Ensure that it was set by the component.
    echo " "
    AC_MSG_CHECKING([if have working event ops for the event framework])
    AS_IF([test "$OPAL_HAVE_WORKING_EVENTOPS" = ""],
          [AC_MSG_RESULT([unknown])
           AC_MSG_WARN([Event component did not set OPAL_HAVE_WORKING_EVENTOPS])
           AC_MSG_ERROR([Cannot continue])],
          [AS_IF([test "$OPAL_HAVE_WORKING_EVENTOPS" = "1"],
                 [AC_MSG_RESULT([yes])],
                 [AC_MSG_RESULT([no])])])
    AC_DEFINE_UNQUOTED(OPAL_HAVE_WORKING_EVENTOPS, 
                       [$OPAL_HAVE_WORKING_EVENTOPS], 
                       [Whether our event component has working event operations or not (if not, then assumedly it only has working timers and signals)])

    # The winning component will have told us where their header file
    # is located
    AC_MSG_CHECKING([for winning event component header file])
    AS_IF([test "$opal_event_base_include" = ""],
          [AC_MSG_RESULT([missing])
           AC_MSG_WARN([Missing implementation header])
           AC_MSG_ERROR([Cannot continue])])
    AC_DEFINE_UNQUOTED([MCA_event_IMPLEMENTATION_HEADER],
                       ["opal/mca/event/$opal_event_base_include"],
                       [Header to include for event implementation])
    AC_MSG_RESULT([$opal_event_base_include])
])
m4trace:config/autogen_found_items.m4:306: -1- m4_include([opal/mca/hwloc/configure.m4])
m4trace:opal/mca/hwloc/configure.m4:31: -1- AC_DEFUN([MCA_opal_hwloc_CONFIG], [
    # Use a crude shell variable to know whether this component is
    # being required "early".  See below.
    opal_hwloc_its_time_to_configure=1
    AC_REQUIRE([MCA_opal_hwloc_CONFIG_REQUIRE])
])
m4trace:opal/mca/hwloc/configure.m4:40: -1- AC_DEFUN([MCA_opal_hwloc_CONFIG_REQUIRE], [
    opal_hwloc_base_include=

   # If this shell variable is not 1, then this m4 is being invoked
   # "early" via AC REQUIRE.  Therefore, since we like having fairly
   # readable configure output, print out a nice banner explaining why
   # this is coming early.
   AS_IF([test "$opal_hwloc_its_time_to_configure" != "1"],
         [echo " "
          echo "==> Pre-emptively configuring the hwloc framework to satisfy dependencies."])

    # See if we want hwloc, and if so, internal vs external
    AC_ARG_WITH(hwloc,
        AC_HELP_STRING([--with-hwloc(=DIR)],
                       [Build hwloc support.  DIR can take one of three values: "internal", "external", or a valid directory name.  "internal" (or no DIR value) forces Open MPI to use its internal copy of hwloc.  "external" forces Open MPI to use an external installation of hwloc.  Supplying a valid directory name also forces Open MPI to use an external installation of hwloc, and adds DIR/include, DIR/lib, and DIR/lib64 to the search path for headers and libraries.]))

    # Whether to enable or disable PCI support in embedded hwloc
    # support.
    AC_ARG_ENABLE([hwloc-pci],
        AC_HELP_STRING([--enable-hwloc-pci],
                       [When building the embedded hwloc, whether to explicitly enable or disable PCI device support.  By default Open MPI will build support for PCI device detection if libpciaccess is available (including its header files)]))

    AC_MSG_CHECKING([whether to enable hwloc PCI device support])
    AS_IF([test "$enable_hwloc_pci" = "yes"],
          [AC_MSG_RESULT([yes (--enable-hwloc-pci specified)])
           enable_pci=yes],
          [AS_IF([test "$enable_hwloc_pci" = "no"],
                 [AC_MSG_RESULT([no (--disable-hwloc-pci specified)])
                  enable_pci=no],
                 [AC_MSG_RESULT([yes (default)])
                  enable_pci=])
          ])

    # set defaults of not having any support
    opal_hwloc_base_enable_xml=0
    OPAL_HAVE_HWLOC=0

    # Configure all the components - always have to do this, even if
    # we configure --without-hwloc.  Note that instead of passing in
    # the traditional $1 and $2 as the first arguments, we hard-code
    # "opal" and "hwloc", because this macro is invoked via AC
    # REQUIRE.
    MCA_CONFIGURE_FRAMEWORK([opal], [hwloc], 1)

    # Restore the --enable-pci flag
    enable_pci=$opal_hwloc_hwloc132_save_enable_pci

    # Give a blank line to separate these messages from the last
    # component's configure.m4 output.
    echo " "

    # Unless --with-hwloc[=<foo>] was given, it's ok to have no hwloc
    # component.
    AS_IF([test "$with_hwloc" = "no" -o "$with_hwloc" = ""], [],
       [ # STOP_AT_FIRST_PRIORITY will guarantee that we find at most
        # one.  We need to check here that we found *at least* one.
        AS_IF([test "$MCA_opal_hwloc_STATIC_COMPONENTS" = ""],
              [AC_MSG_WARN([Did not find a suitable static opal hwloc component])
               AC_MSG_ERROR([Cannot continue])])
   ])

   # If we have a winning component, do some more logic
   AS_IF([test "$MCA_opal_hwloc_STATIC_COMPONENTS" != ""],
       [ # We had a winner -- w00t!
        OPAL_HAVE_HWLOC=1

        # The winning component will have told us where their header file
        # is located
        AC_MSG_CHECKING([for winning hwloc component header file])
        AS_IF([test "$opal_hwloc_base_include" = ""],
              [AC_MSG_RESULT([missing])
               AC_MSG_WARN([Missing implementation header])
               AC_MSG_ERROR([Cannot continue])])
        AC_MSG_RESULT([$opal_hwloc_base_include])
        AC_DEFINE_UNQUOTED([MCA_hwloc_IMPLEMENTATION_HEADER],
                           ["$opal_hwloc_base_include"],
                           [Header to include for hwloc implementation])

        # If we added any -L flags to ADD_LDFLAGS, then we (might)
        # need to add those directories to LD_LIBRARY_PATH.
        # Otherwise, if we try to AC RUN_IFELSE anything here in
        # configure, it might die because it can't find the libraries
        # we just linked against.
        OPAL_VAR_SCOPE_PUSH([opal_hwloc_base_found_l opal_hwloc_base_token opal_hwloc_base_tmp opal_hwloc_base_dir])
        opal_hwloc_base_found_l=0
        eval "opal_hwloc_base_tmp=\$opal_hwloc_${opal_hwloc_winner}_ADD_LIBS"
        for opal_hwloc_base_token in $opal_hwloc_base_tmp; do
            case $opal_hwloc_base_token in
            -l*) opal_hwloc_base_found_l=1 ;;
            esac
        done
        AS_IF([test $opal_hwloc_base_found_l -eq 1],
              [eval "opal_hwloc_base_tmp=\$opal_hwloc_${opal_hwloc_winner}_ADD_LDFLAGS"
               for opal_hwloc_base_token in $opal_hwloc_base_tmp; do
                   case $opal_hwloc_base_token in
                   -L*)
                       opal_hwloc_base_dir=`echo $opal_hwloc_base_token | cut -c3-`
                       export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$opal_hwloc_base_dir
                       AC_MSG_WARN([Adding to LD_LIBRARY_PATH: $opal_hwloc_base_dir])
                       ;;
                   esac
               done])
        OPAL_VAR_SCOPE_POP
    ])

    AM_CONDITIONAL(OPAL_HAVE_HWLOC, test $OPAL_HAVE_HWLOC -eq 1)
    AC_DEFINE_UNQUOTED(OPAL_HAVE_HWLOC, $OPAL_HAVE_HWLOC,
        [Whether we have hwloc support or not])

   # Similar to above, if this m4 is being invoked "early" via AC
   # REQUIRE, print out a nice banner that we have now finished
   # pre-emption and are returning to the Normal Order Of Things.
   AS_IF([test "$opal_hwloc_its_time_to_configure" != "1"],
         [echo " "
          echo "<== Pre-emptive hwloc framework configuration complete."
          echo "<== We now return you to your regularly scheduled programming."
          echo " "]);
])
m4trace:config/autogen_found_items.m4:307: -1- m4_include([opal/mca/installdirs/configure.m4])
m4trace:opal/mca/installdirs/configure.m4:11: -1- AC_DEFUN([MCA_opal_installdirs_CONFIGURE_MODE], [PRIORITY])
m4trace:config/autogen_found_items.m4:308: -1- m4_include([opal/mca/memchecker/configure.m4])
m4trace:opal/mca/memchecker/configure.m4:16: -1- AC_DEFUN([MCA_opal_memchecker_CONFIG], [
    ompi_show_subsubtitle "Pre-configuring the framework memchecker"

    AC_MSG_CHECKING([if --enable-memchecker was specified])
    AC_ARG_ENABLE(memchecker,
        AC_HELP_STRING([--enable-memchecker],
                       [Enable memory and buffer checks.  Note that disabling will *also* add "memchecker" to the --enable-mca-no-build list (default: disabled)]))
    if test "$enable_memchecker" = "yes"; then
        AC_MSG_RESULT([yes])
        WANT_MEMCHECKER=1
    else
        AC_MSG_RESULT([no (adding "memchecker" to --enable-mca-no-build list)])
        WANT_MEMCHECKER=0

        # Setting this environment variable causes
        # MCA_COMONENT_BUILD_CHECK (in ompi_mca.m4, invoked by
        # MCA_CONFIGURE_FRAMEWORK, below) to rule that the component
        # should not be built.  It is effectively the same as adding
        # "memchecker" to the --enable-mca-no-build list.
        DISABLE_memchecker=1
    fi
    AC_DEFINE_UNQUOTED([OMPI_WANT_MEMCHECKER],
                       [$WANT_MEMCHECKER],
                       [if the memory and buffer checking should be enabled])
    AM_CONDITIONAL([OMPI_WANT_MEMCHECKER],
                   [test "$WANT_MEMCHECKER" = "1"])

    # first, compile all the components
    MCA_CONFIGURE_FRAMEWORK($1, $2, 1)

    AS_IF([test "$MCA_opal_memchecker_STATIC_COMPONENTS" != "" -o "$MCA_opal_memchecker_DSO_COMPONENTS" != ""],
          [memchecker_base_found=1],
          [memchecker_base_found=0])
    AS_IF([test $WANT_MEMCHECKER -eq 1 -a $memchecker_base_found -eq 0],
          [AC_MSG_WARN([Memchecker support requested, but no memchecker])
           AC_MSG_WARN([components configured successfully.  Did you])
           AC_MSG_WARN([forget --with-valgrind?])
           AC_MSG_ERROR([Cannot continue])])
])
m4trace:config/autogen_found_items.m4:309: -1- m4_include([opal/mca/memcpy/configure.m4])
m4trace:opal/mca/memcpy/configure.m4:18: -1- AC_DEFUN([MCA_opal_memcpy_CONFIG], [
        memcpy_base_include=

        # first, compile all the components
        MCA_CONFIGURE_FRAMEWORK($1, $2, 1)

        # someone should have set this...
        if test "$memcpy_base_include" = "" ; then
            memcpy_base_include="base/memcpy_base_default.h"
        fi

        AC_DEFINE_UNQUOTED([MCA_memcpy_IMPLEMENTATION_HEADER],
                           ["opal/mca/memcpy/$memcpy_base_include"],
                           [Header to include for memcpy implementation])
])
m4trace:config/autogen_found_items.m4:310: -1- m4_include([opal/mca/memory/configure.m4])
m4trace:opal/mca/memory/configure.m4:24: -1- AC_DEFUN([MCA_opal_memory_CONFIG], [
        AC_ARG_WITH([memory-manager],
            [AC_HELP_STRING([--with-memory-manager=TYPE],
                           [Use TYPE for intercepting memory management
                            calls to control memory pinning.])])

        memory_base_found=0
        memory_base_want=1
        AS_IF([test "$with_memory_manager" = "no"], [memory_base_want=0])
        MCA_CONFIGURE_FRAMEWORK($1, $2, $memory_base_want)

        AC_DEFINE_UNQUOTED([OMPI_MEMORY_HAVE_COMPONENT], [$memory_base_found],
            [Whether any opal memory mca components were found])

        # See if someone set to use their header file
        if test "$memory_base_include" = "" ; then
            memory_base_include="base/empty.h"
        fi

        AC_DEFINE_UNQUOTED([MCA_memory_IMPLEMENTATION_HEADER],
                           ["opal/mca/memory/$memory_base_include"],
                           [Header to include for parts of the memory implementation])
])
m4trace:config/autogen_found_items.m4:311: -1- m4_include([opal/mca/pstat/configure.m4])
m4trace:config/autogen_found_items.m4:312: -1- m4_include([opal/mca/timer/configure.m4])
m4trace:opal/mca/timer/configure.m4:24: -1- AC_DEFUN([MCA_opal_timer_CONFIG], [
        timer_base_include=

        # All components look at this value
        AC_ARG_WITH([timer],
            [AC_HELP_STRING([--with-timer=TYPE],
                        [Build high resolution timer component TYPE])])

        # first, compile all the components
        MCA_CONFIGURE_FRAMEWORK($1, $2, 1)

        # someone should have set this...
        if test "$timer_base_include" = "" ; then
            timer_base_include="base/timer_base_null.h"
        fi

        AC_DEFINE_UNQUOTED([MCA_timer_IMPLEMENTATION_HEADER],
                           ["opal/mca/timer/$timer_base_include"],
                           [Header to include for timer implementation])
])
m4trace:config/autogen_found_items.m4:313: -1- m4_include([opal/mca/common/pmi/configure.m4])
m4trace:opal/mca/common/pmi/configure.m4:15: -1- AC_DEFUN([MCA_opal_common_pmi_CONFIG], [
    AC_CONFIG_FILES([opal/mca/common/pmi/Makefile])
         
    OPAL_CHECK_PMI([common_pmi], [common_pmi_good=1], [common_pmi_good=0])
         
    # Evaluate succeed / fail
    AS_IF([test "$common_pmi_good" = 1],
          [$1],
          [$2])

    # set build flags to use in makefile
    AC_SUBST([common_pmi_CPPFLAGS])
    AC_SUBST([common_pmi_LDFLAGS])
    AC_SUBST([common_pmi_LIBS])

])
m4trace:config/autogen_found_items.m4:314: -1- m4_include([opal/mca/backtrace/execinfo/configure.m4])
m4trace:opal/mca/backtrace/execinfo/configure.m4:20: -1- AC_DEFUN([MCA_opal_backtrace_execinfo_PRIORITY], [30])
m4trace:opal/mca/backtrace/execinfo/configure.m4:22: -1- AC_DEFUN([MCA_opal_backtrace_execinfo_COMPILE_MODE], [
    AC_MSG_CHECKING([for MCA component $2:$3 compile mode])
    $4="static"
    AC_MSG_RESULT([$$4])
])
m4trace:opal/mca/backtrace/execinfo/configure.m4:31: -1- AC_DEFUN([MCA_opal_backtrace_execinfo_CONFIG], [
    AC_CONFIG_FILES([opal/mca/backtrace/execinfo/Makefile])

    AC_CHECK_HEADERS([execinfo.h])
    # FreeBSD has backtrace in -lexecinfo, usually in libc
    OPAL_SEARCH_LIBS_COMPONENT([backtrace_execinfo], [backtrace], [execinfo],
                   [backtrace_execinfo_happy="yes"],
                   [backtrace_execinfo_happy="no"])

    AS_IF([test "$backtrace_execinfo_happy" = "yes"], 
          [$1], [$2])
])
m4trace:config/autogen_found_items.m4:315: -1- m4_include([opal/mca/backtrace/printstack/configure.m4])
m4trace:opal/mca/backtrace/printstack/configure.m4:20: -1- AC_DEFUN([MCA_opal_backtrace_printstack_PRIORITY], [30])
m4trace:opal/mca/backtrace/printstack/configure.m4:22: -1- AC_DEFUN([MCA_opal_backtrace_printstack_COMPILE_MODE], [
    AC_MSG_CHECKING([for MCA component $2:$3 compile mode])
    $4="static"
    AC_MSG_RESULT([$$4])
])
m4trace:opal/mca/backtrace/printstack/configure.m4:32: -1- AC_DEFUN([MCA_opal_backtrace_printstack_CONFIG], [
    AC_CONFIG_FILES([opal/mca/backtrace/printstack/Makefile])

    AC_CHECK_HEADERS([ucontext.h])
    # FreeBSD has backtrace in -lexecinfo, usually in libc
    AC_CHECK_FUNCS([printstack],
                   [backtrace_printstack_happy="yes"],
                   [backtrace_printstack_happy="no"])

    AS_IF([test "$backtrace_printstack_happy" = "yes"], 
          [$1], [$2])
])
m4trace:config/autogen_found_items.m4:316: -1- m4_include([opal/mca/backtrace/none/configure.m4])
m4trace:opal/mca/backtrace/none/configure.m4:20: -1- AC_DEFUN([MCA_opal_backtrace_none_PRIORITY], [0])
m4trace:opal/mca/backtrace/none/configure.m4:22: -1- AC_DEFUN([MCA_opal_backtrace_none_COMPILE_MODE], [
    AC_MSG_CHECKING([for MCA component $2:$3 compile mode])
    $4="static"
    AC_MSG_RESULT([$$4])
])
m4trace:opal/mca/backtrace/none/configure.m4:32: -1- AC_DEFUN([MCA_opal_backtrace_none_CONFIG], [
    AC_CONFIG_FILES([opal/mca/backtrace/none/Makefile])
])
m4trace:config/autogen_found_items.m4:317: -1- m4_include([opal/mca/crs/self/configure.m4])
m4trace:opal/mca/crs/self/configure.m4:21: -1- AC_DEFUN([MCA_opal_crs_self_CONFIG], [
    AC_CONFIG_FILES([opal/mca/crs/self/Makefile])

    # If we don't want FT, don't compile this component
    AS_IF([test "$opal_want_ft_cr" = "1"],
        [crs_self_good="yes"],
        [crs_self_good="no"])

    # We need the dlfcn.h so we can access dlsym and friends
    AS_IF([test "$crs_self_good" = "yes"],
        [AC_CHECK_HEADER([dlfcn.h],
                         [crs_self_good="yes"],
                         [crs_self_good="no"])])

    # If they did not ask for dlopen support,
    # they probably do not want this component either
    AS_IF([test "$crs_self_good" = "yes"],
        [AS_IF([test "$OPAL_ENABLE_DLOPEN_SUPPORT" = "1"],
                [crs_self_good="yes"],
                [crs_self_good="no"])])

    AS_IF([test "$crs_self_good" = "yes"],
        [$1],
        [$2])

])
m4trace:config/autogen_found_items.m4:318: -1- m4_include([opal/mca/crs/dmtcp/configure.m4])
m4trace:opal/mca/crs/dmtcp/configure.m4:15: -1- AC_DEFUN([MCA_opal_crs_dmtcp_CONFIG], [
    AC_CONFIG_FILES([opal/mca/crs/dmtcp/Makefile])

    opal_check_crs_dmtcp_good="no"

    # Turn OFF DMTCP as C/R is no longer supported
    #
    AS_IF([test "$opal_check_crs_dmtcp_good" = "no"],
          [$2],
          [$1])
])
m4trace:config/autogen_found_items.m4:319: -1- m4_include([opal/mca/crs/blcr/configure.m4])
m4trace:opal/mca/crs/blcr/configure.m4:22: -1- AC_DEFUN([MCA_opal_crs_blcr_CONFIG], [
    AC_CONFIG_FILES([opal/mca/crs/blcr/Makefile])

    check_crs_blcr_good="no"

    # Turn OFF BLCR as C/R is no longer supported
    AS_IF([test "$check_crs_blcr_good" = "no"],
          [$2
           check_crs_blcr_good="no"],
          [$1
           check_crs_blcr_good="yes"])
])
m4trace:config/autogen_found_items.m4:320: -1- m4_include([opal/mca/db/sqlite/configure.m4])
m4trace:opal/mca/db/sqlite/configure.m4:13: -1- AC_DEFUN([MCA_opal_db_sqlite_CONFIG], [
    AC_CONFIG_FILES([opal/mca/db/sqlite/Makefile])

    AC_ARG_WITH([sqlite3],
                [AC_HELP_STRING([--with-sqlite3],
                                [Build sqlite3 support (default: no)])],
	                        [], with_sqlite3=no)

    # do not build if rte is disabled or support not requested
    AS_IF([test "$with_sqlite3" != "no"],
          [AS_IF([test ! -z "$with_sqlite3" -a "$with_sqlite3" != "yes"],
                 [opal_check_sqlite3_dir="$with_sqlite3"])
           OMPI_CHECK_PACKAGE([db_sqlite],
                              [sqlite3.h],
                              [sqlite3],
                              [sqlite3_open],
                              [],
                              [$opal_check_sqlite3_dir],
                              [],
                              [$1],
                              [$2])],
          [$2])

    AC_SUBST(db_sqlite_CPPFLAGS)
    AC_SUBST(db_sqlite_LDFLAGS)
    AC_SUBST(db_sqlite_LIBS)
])
m4trace:config/autogen_found_items.m4:321: -1- m4_include([opal/mca/db/pmi/configure.m4])
m4trace:opal/mca/db/pmi/configure.m4:13: -1- AC_DEFUN([MCA_opal_db_pmi_CONFIG], [
    AC_CONFIG_FILES([opal/mca/db/pmi/Makefile])
         
    OPAL_CHECK_PMI([db_pmi], [db_pmi_good=1], [db_pmi_good=0])
         
    # Evaluate succeed / fail
    AS_IF([test "$db_pmi_good" = 1],
          [$1],
          [$2])

    # set build flags to use in makefile
    AC_SUBST([db_pmi_CPPFLAGS])
    AC_SUBST([db_pmi_LDFLAGS])
    AC_SUBST([db_pmi_LIBS])

])
m4trace:config/autogen_found_items.m4:322: -1- m4_include([opal/mca/event/libevent2021/configure.m4])
m4trace:opal/mca/event/libevent2021/configure.m4:12: -1- AC_DEFUN([MCA_opal_event_libevent2021_PRIORITY], [80])
m4trace:opal/mca/event/libevent2021/configure.m4:17: -1- AC_DEFUN([MCA_opal_event_libevent2021_COMPILE_MODE], [
    AC_MSG_CHECKING([for MCA component $2:$3 compile mode])
    $4="static"
    AC_MSG_RESULT([$$4])
])
m4trace:opal/mca/event/libevent2021/configure.m4:23: -1- AC_DEFUN([MCA_opal_event_libevent2021_POST_CONFIG], [
    AM_CONDITIONAL(OPAL_EVENT_HAVE_THREAD_SUPPORT, test "$enable_event_thread_support" = "yes")
    AS_IF([test "$1" = "1"], 
          [ # Build libevent/include/event2/event-config.h.  If we
           # don't do it here, then libevent's Makefile.am will build
           # it during "make all", which is too late for us (because
           # other things are built before the event framework that
           # end up including event-config.h).  The steps below were
           # copied from libevent's Makefile.am.

           AC_CONFIG_COMMANDS([opal/mca/event/libevent2021/libevent/include/event2/event-config.h],
                              [libevent_basedir="opal/mca/event/libevent2021"
                               libevent_file="$libevent_basedir/libevent/include/event2/event-config.h"
                               rm -f "$libevent_file.new"
                               cat > "$libevent_file.new" <<EOF
/* event2/event-config.h
 *
 * This file was generated by autoconf when libevent was built, and
 * post- processed by Open MPI's component configure.m4 (so that
 * Libevent wouldn't build it during "make all") so that its macros
 * would have a uniform prefix.
 *
 * DO NOT EDIT THIS FILE.
 *
 * Do not rely on macros in this file existing in later versions
 */
#ifndef _EVENT2_EVENT_CONFIG_H_
#define _EVENT2_EVENT_CONFIG_H_
EOF

                               sed -e 's/#define /#define _EVENT_/' \
                                   -e 's/#undef /#undef _EVENT_/' \
                                   -e 's/#ifndef /#ifndef _EVENT_/' < "$libevent_basedir/libevent/config.h" >> "$libevent_file.new"
                               echo "#endif" >> "$libevent_file.new"

                               # Only make a new .h libevent_file if the
                               # contents haven't changed
                               diff -q $libevent_file "$libevent_file.new" > /dev/null 2> /dev/null
                               if test "$?" = "0"; then
                                   echo $libevent_file is unchanged
                               else
                                   cp "$libevent_file.new" $libevent_file
                               fi
                               rm -f "$libevent_file.new"])

           # Must set this variable so that the framework m4 knows
           # what file to include in opal/mca/event/event.h
           opal_event_base_include="libevent2021/libevent2021.h"

           # Add some stuff to CPPFLAGS so that the rest of the source
           # tree can be built
           libevent_file=$libevent_basedir/libevent
           CPPFLAGS="$CPPFLAGS -I$OMPI_TOP_SRCDIR/$libevent_file -I$OMPI_TOP_SRCDIR/$libevent_file/include"
           AS_IF([test "$OMPI_TOP_BUILDDIR" != "$OMPI_TOP_SRCDIR"],
                 [CPPFLAGS="$CPPFLAGS -I$OMPI_TOP_BUILDDIR/$libevent_file/include"])
           unset libevent_file
          ])
])
m4trace:opal/mca/event/libevent2021/configure.m4:85: -1- AC_DEFUN([MCA_opal_event_libevent2021_CONFIG], [
    OPAL_VAR_SCOPE_PUSH([CFLAGS_save CPPFLAGS_save libevent_file event_args libevent_happy])

    AC_CONFIG_FILES([opal/mca/event/libevent2021/Makefile])
    libevent_basedir="opal/mca/event/libevent2021"

    # If we're not building externally, configure this component
    AS_IF([test "$with_libevent" = "internal" -o "$with_libevent" = "" -o "$with_libevent" = "yes"],
          [MCA_opal_event_libevent2021_DO_THE_CONFIG],
          [AC_MSG_WARN([using an external libevent; disqualifiying this component])
           $2])
    OPAL_VAR_SCOPE_POP
])
m4trace:opal/mca/event/libevent2021/configure.m4:99: -1- AC_DEFUN([MCA_opal_event_libevent2021_DO_THE_CONFIG], [
    CFLAGS_save="$CFLAGS"
    CFLAGS="$OMPI_CFLAGS_BEFORE_PICKY $OPAL_VISIBILITY_CFLAGS"
    CPPFLAGS_save="$CPPFLAGS"
    CPPFLAGS="-I$OMPI_TOP_SRCDIR -I$OMPI_TOP_BUILDDIR -I$OMPI_TOP_SRCDIR/opal/include $CPPFLAGS"

    AC_MSG_CHECKING([libevent configuration args])
    event_args="--disable-dns --disable-http --disable-rpc --disable-openssl --enable-thread-support"

    AC_ARG_ENABLE(event-rtsig,
        AC_HELP_STRING([--enable-event-rtsig],
                       [enable support for real time signals (experimental)]))
    if test "$enable_event_rtsig" = "yes"; then
        event_args="$event_args --enable-rtsig"
    fi

    AC_ARG_ENABLE(event-select,
                  AC_HELP_STRING([--disable-event-select], [disable select support]))
    if test "$enable_event_select" = "no"; then
        event_args="$event_args --disable-select"
    fi

    AC_ARG_ENABLE(event-poll,
                  AC_HELP_STRING([--disable-event-poll], [disable poll support]))
    if test "$enable_event_poll" = "no"; then
        event_args="$event_args --disable-poll"
    fi

    AC_ARG_ENABLE(event-devpoll,
                  AC_HELP_STRING([--disable-event-devpoll], [disable devpoll support]))
    if test "$enable_event_devpoll" = "no"; then
        event_args="$event_args --disable-devpoll"
    fi

    AC_ARG_ENABLE(event-kqueue,
                  AC_HELP_STRING([--disable-event-kqueue], [disable kqueue support]))
    if test "$enable_event_kqueue" = "no"; then
        event_args="$event_args --disable-kqueue"
    fi

    AC_ARG_ENABLE(event-epoll,
                  AC_HELP_STRING([--disable-event-epoll], [disable epoll support]))
    if test "$enable_event_epoll" = "no"; then
        event_args="$event_args --disable-epoll"
    fi

    AC_ARG_ENABLE(event-evport,
                  AC_HELP_STRING([--enable-event-evport], [enable evport support]))
    if test "$enable_event_evport" = "yes"; then
        event_args="$event_args --enable-evport"
    else
        event_args="$event_args --disable-evport"
    fi

    AC_ARG_ENABLE(event-signal,
                  AC_HELP_STRING([--disable-event-signal], [disable signal support]))
    if test "$enable_event_signal" = "no"; then
        event_args="$event_args --disable-signal"
    fi

    AC_ARG_ENABLE(event-debug,
                  AC_HELP_STRING([--enable-event-debug], [enable event library debug output]))
    if test "$enable_event_debug" = "yes"; then
        event_args="$event_args --enable-debug-mode"
    fi

    AC_MSG_RESULT([$event_args])

    OMPI_CONFIG_SUBDIR([$libevent_basedir/libevent], 
        [$event_args $ompi_subdir_args],
        [libevent_happy="yes"], [libevent_happy="no"])
    if test "$libevent_happy" = "no"; then
        AC_MSG_WARN([Event library failed to configure])
        AC_MSG_ERROR([Cannot continue])
    fi

    # Finally, add some flags to the wrapper compiler if we're
    # building with developer headers so that our headers can
    # be found.
    event_libevent2021_WRAPPER_EXTRA_CPPFLAGS='-I${includedir}/openmpi/opal/mca/event/libevent2021/libevent -I${includedir}/openmpi/opal/mca/event/libevent2021/libevent/include'

    CFLAGS="$CFLAGS_save"
    CPPFLAGS="$CPPFLAGS_save"

    # If we configured successfully, set OPAL_HAVE_WORKING_EVENTOPS to
    # the value in the generated libevent/config.h (NOT
    # libevent/include/event2/event-config.h!).  Otherwise, set it to
    # 0.
    libevent_file=$libevent_basedir/libevent/config.h
    AS_IF([test "$libevent_happy" = "yes" -a -r $libevent_file], 
          [OPAL_HAVE_WORKING_EVENTOPS=`grep HAVE_WORKING_EVENTOPS $libevent_file | awk '{print [$]3 }'`
           $1],
          [$2
           OPAL_HAVE_WORKING_EVENTOPS=0])
])
m4trace:config/autogen_found_items.m4:323: -1- m4_include([opal/mca/event/external/configure.m4])
m4trace:opal/mca/event/external/configure.m4:16: -1- AC_DEFUN([MCA_opal_event_external_PRIORITY], [90])
m4trace:opal/mca/event/external/configure.m4:21: -1- AC_DEFUN([MCA_opal_event_external_COMPILE_MODE], [
    AC_MSG_CHECKING([for MCA component $2:$3 compile mode])
    $4="static"
    AC_MSG_RESULT([$$4])
])
m4trace:opal/mca/event/external/configure.m4:30: -1- AC_DEFUN([MCA_opal_event_external_POST_CONFIG], [
    # If we won, then do all the rest of the setup
    AS_IF([test "$1" = "1"], 
          [AC_DEFINE_UNQUOTED([EVENT_EXTERNAL_EVENT_VERSION], 
                              [external], 
                              [Version of event])

           # Set this variable so that the framework m4 knows what
           # file to include in opal/mca/event/event.h
           opal_event_external_basedir=opal/mca/event/external
           opal_event_base_include="external/external.h"

           # Add some stuff to CPPFLAGS so that the rest of the source
           # tree can be built
           CPPFLAGS="$CPPFLAGS $opal_event_external_CPPFLAGS"
           LDFLAGS="$LDFLAGS $opal_event_external_LDFLAGS"
           LIBS="$LIBS $opal_event_external_LIBS"
          ])
])
m4trace:opal/mca/event/external/configure.m4:53: -1- AC_DEFUN([MCA_opal_event_external_CONFIG], [
    AC_CONFIG_FILES([opal/mca/event/external/Makefile])

    OPAL_VAR_SCOPE_PUSH([opal_event_external_CPPFLAGS_save opal_event_external_CFLAGS_save opal_event_external_LDFLAGS_save opal_event_external_LIBS_save])

    AC_ARG_WITH([libevent],
       [AC_HELP_STRING([--with-libevent=DIR],
             [Search for libevent headers and libraries in DIR.  Should only be used if an external copy of libevent is being used.])])

    # Bozo check
    AS_IF([test "$with_libevent" = "no"],
          [AC_MSG_WARN([It is not possible to configure Open MPI --without-libevent])
           AC_MSG_ERROR([Cannot continue])])

    AC_ARG_WITH([libevent-libdir],
       [AC_HELP_STRING([--with-libevent-libdir=DIR],
             [Search for libevent libraries in DIR.  Should only be used if an external copy of libevent is being used.])])

    # Make sure the user didn't specify --with-libevent=internal and
    # --with-libevent-libdir=whatever (because you can only specify
    # --with-libevent-libdir when external libevent is being used).
    AS_IF([test "$with_libevent" = "internal" -a "$with_libevent_libdir" != ""],
          [AC_MSG_WARN([Both --with-libevent=internal and --with-libevent-libdir=DIR])
           AC_MSG_WARN([were specified, which does not make sense.])
           AC_MSG_ERROR([Cannot continue])])

    # Do we want this external component? (slightly redundant logic,
    # but hopefully slightly more clear...)
    opal_event_external_want=no
    AS_IF([test "$with_libevent" = "external"], [opal_event_external_want=yes])
    AS_IF([test "$with_libevent_libdir" != ""], [opal_event_external_want=yes])
    AS_IF([test "$with_libevent" != "" -a "$with_libevent" != "no" -a "$with_libevent" != "internal"], [opal_event_external_want=yes])

    # If we want external support, try it
    AS_IF([test "$opal_event_external_want" = "yes"],
          [ # Error out if the specified dir does not exist
           OMPI_CHECK_WITHDIR([libevent-libdir], [$with_libevent_libdir], 
                              [libevent.*])

           AC_MSG_CHECKING([for external libevent in])
           AS_IF([test "$with_libevent" != "external" -a "$with_libevent" != "yes"],
                 [opal_event_dir=$with_libevent
                  AC_MSG_RESULT([$opal_event_dir])
                  OMPI_CHECK_WITHDIR([libevent], [$with_libdir], 
                                     [include/event.h])
                 ],
                 [AC_MSG_RESULT([(default search paths)])])
           AS_IF([test ! -z "$with_libevent_libdir" -a "$with_libevent_libdir" != "yes"],
                 [opal_event_libdir="$with_libevent_libdir"])

           opal_event_external_CPPFLAGS_save=$CPPFLAGS
           opal_event_external_CFLAGS_save=$CFLAGS
           opal_event_external_LDFLAGS_save=$LDFLAGS
           opal_event_external_LIBS_save=$LIBS

           OMPI_CHECK_PACKAGE([opal_event_external],
                              [event.h],
                              [event],
                              [event_config_new],
                              [-levent_pthreads],
                              [$opal_event_dir],
                              [$opal_event_libdir],
                              [opal_event_external_support=yes],
                              [opal_event_external_support=no])

           # Ensure that this libevent has the symbol
           # "evthread_set_lock_callbacks", which will only exist if
           # libevent was configured with thread support.
           LIBS="$opal_event_external_LDFLAGS $LIBS"
           AC_CHECK_LIB([event], [evthread_set_lock_callbacks],
                        [],
                        [AC_MSG_WARN([External libevent does not have thread support])
                         AC_MSG_WARN([Open MPI requires libevent to be compiled with])
                         AC_MSG_WARN([thread support enabled])
                         AC_MSG_ERROR([Cannot continue])])
           AC_CHECK_LIB([event_pthreads], [evthread_use_pthreads],
                        [],
                        [AC_MSG_WARN([External libevent does not have thread support])
                         AC_MSG_WARN([Open MPI requires libevent to be compiled with])
                         AC_MSG_WARN([thread support enabled])
                         AC_MSG_ERROR([Cannot continue])])

           CPPFLAGS=$opal_event_external_CPPFLAGS_save
           CFLAGS=$opal_event_external_CFLAGS_save
           LDFLAGS=$opal_event_external_LDFLAGS_save
           LIBS=$opal_event_external_LIBS_save

           AC_SUBST(opal_event_external_CPPFLAGS)
           AC_SUBST(opal_event_external_LDFLAGS)
           AC_SUBST(opal_event_external_LIBS)

           # These flags need to get passed to the wrapper compilers
           # (this is unnecessary for the internal/embedded event)
           event_external_WRAPPER_EXTRA_CPPFLAGS=$opal_event_external_CPPFLAGS

           # Finally, add some flags to the wrapper compiler if we're
           # building with developer headers so that our headers can
           # be found.
           event_external_WRAPPER_EXTRA_LDFLAGS=$opal_event_external_LDFLAGS
           event_external_WRAPPER_EXTRA_LIBS=$opal_event_external_LIBS
    ])

    # Done!
    AS_IF([test "$opal_event_external_support" = "yes"],
          [ # If we configured successfully, set
           # OPAL_HAVE_WORKING_EVENTOPS to 1 (it's a calculated value
           # in the embedded Open MPI libevent, so we can only assume
           # what it is in the installed libevent :-\ ).
           file=$opal_event_dir/include/libevent/config.h
           OPAL_HAVE_WORKING_EVENTOPS=1
           $1],
          [OPAL_HAVE_WORKING_EVENTOPS=0
           $2])

    OPAL_VAR_SCOPE_POP
])
m4trace:config/autogen_found_items.m4:324: -1- m4_include([opal/mca/hwloc/external/configure.m4])
m4trace:opal/mca/hwloc/external/configure.m4:15: -1- AC_DEFUN([MCA_opal_hwloc_external_PRIORITY], [90])
m4trace:opal/mca/hwloc/external/configure.m4:20: -1- AC_DEFUN([MCA_opal_hwloc_external_COMPILE_MODE], [
    AC_MSG_CHECKING([for MCA component $2:$3 compile mode])
    $4="static"
    AC_MSG_RESULT([$$4])
])
m4trace:opal/mca/hwloc/external/configure.m4:29: -1- AC_DEFUN([MCA_opal_hwloc_external_POST_CONFIG], [
    OPAL_VAR_SCOPE_PUSH([opal_hwloc_external_basedir])

    # If we won, then do all the rest of the setup
    AS_IF([test "$1" = "1"], 
          [AC_DEFINE_UNQUOTED([HWLOC_EXTERNAL_HWLOC_VERSION], 
                              [external], 
                              [Version of hwloc])

           # Set this variable so that the framework m4 knows what
           # file to include in opal/mca/hwloc/hwloc.h
           opal_hwloc_external_basedir=opal/mca/hwloc/external
           opal_hwloc_base_include="$opal_hwloc_external_basedir/external.h"

           # Add some stuff to CPPFLAGS so that the rest of the source
           # tree can be built
           file=$opal_hwloc_external_basedir/hwloc
           CPPFLAGS="$CPPFLAGS $opal_hwloc_external_CPPFLAGS"
           LDFLAGS="$LDFLAGS $opal_hwloc_external_LDFLAGS"
           LIBS="$LIBS $opal_hwloc_external_LIBS"
           AS_IF([test "$OMPI_TOP_BUILDDIR" != "$OMPI_TOP_SRCDIR"],
                 [CPPFLAGS="$CPPFLAGS -I$OMPI_TOP_BUILDDIR/$file/include"])
           unset file

           # We have to do some extra indirection to get the
           # OPAL_HWLOC_WANT_VERBS_HELPER to work.  First, the
           # opal_hwloc_external_include file (set above), points to a
           # file here in this component. That file will include the
           # actual external hwloc.h file (via the
           # MCA_hwloc_external_header define).  And if
           # OPAL_HWLOC_WANT_VERBS_HELPER is set, that file will
           # include the external hwloc/openfabrics-verbs.h file (via
           # the MCA_hwloc_external_openfabrics_helper define).
           AC_DEFINE_UNQUOTED(MCA_hwloc_external_header,
                  ["$opal_hwloc_dir/include/hwloc.h"],
                  [Location of external hwloc header])
           AC_DEFINE_UNQUOTED(MCA_hwloc_external_openfabrics_header,
                  ["$opal_hwloc_dir/include/hwloc/openfabrics-verbs.h"],
                  [Location of external hwloc header])

           # These flags need to get passed to the wrapper compilers
           # (this is unnecessary for the internal/embedded hwloc)

           # Finally, add some flags to the wrapper compiler if we're
           # building with developer headers so that our headers can
           # be found.
           hwloc_external_WRAPPER_EXTRA_CPPFLAGS="$opal_hwloc_external_CPPFLAGS"
           hwloc_external_WRAPPER_EXTRA_LDFLAGS="$opal_hwloc_external_LDFLAGS"
           hwloc_external_WRAPPER_EXTRA_LIBS="$opal_hwloc_external_LIBS"
          ])
    OPAL_VAR_SCOPE_POP
])
m4trace:opal/mca/hwloc/external/configure.m4:85: -1- AC_DEFUN([MCA_opal_hwloc_external_CONFIG], [
    AC_CONFIG_FILES([opal/mca/hwloc/external/Makefile])

    OPAL_VAR_SCOPE_PUSH([opal_hwloc_external_CPPFLAGS_save opal_hwloc_external_CFLAGS_save opal_hwloc_external_LDFLAGS_save opal_hwloc_external_LIBS_save opal_hwloc_external_want opal_hwloc_external_tmp opal_hwloc_external_lstopo])

    AC_ARG_WITH([hwloc-libdir],
       [AC_HELP_STRING([--with-hwloc-libdir=DIR],
             [Search for hwloc libraries in DIR.  Should only be used if an external copy of hwloc is being used.])])

    # Make sure the user didn't specify --with-hwloc=internal and
    # --with-hwloc-libdir=whatever.
    AS_IF([test "$with_hwloc" = "internal" -a "$with_hwloc_libdir" != ""],
          [AC_MSG_WARN([Both --with-hwloc=internal and --with-hwloc-libdir=DIR])
           AC_MSG_WARN([were specified, which does not make sense.])
           AC_MSG_ERROR([Cannot continue])])

    # Do we want this external component? (slightly redundant logic,
    # but hopefully slightly more clear...)
    opal_hwloc_external_want=no
    AS_IF([test "$with_hwloc_libdir" != ""], [opal_hwloc_external_want=yes])
    AS_IF([test "$with_hwloc" = "external"], [opal_hwloc_external_want=yes])
    AS_IF([test "$with_hwloc" != "" -a "$with_hwloc" != "no" -a "$with_hwloc" != "internal"], [opal_hwloc_external_want=yes])
    AS_IF([test "$with_hwloc" = "no"], [opal_hwloc_external_want=no])

    # If we still want external support, try it
    AS_IF([test "$opal_hwloc_external_want" = "yes"],
          [OMPI_CHECK_WITHDIR([hwloc-libdir], [$with_hwloc_libdir], 
                              [libhwloc.*])

           AC_MSG_CHECKING([looking for external hwloc in])
           AS_IF([test "$with_hwloc" != "external" -a "$with_hwloc" != "yes"],
                 [opal_hwloc_dir=$with_hwloc
                  AC_MSG_RESULT([($opal_hwloc_dir)])],
                 [AC_MSG_RESULT([(default search paths)])])
           AS_IF([test ! -z "$with_hwloc_libdir" -a "$with_hwloc_libdir" != "yes"],
                 [opal_hwloc_libdir="$with_hwloc_libdir"])

           opal_hwloc_external_CPPFLAGS_save=$CPPFLAGS
           opal_hwloc_external_CFLAGS_save=$CFLAGS
           opal_hwloc_external_LDFLAGS_save=$LDFLAGS
           opal_hwloc_external_LIBS_save=$LIBS

           OMPI_CHECK_PACKAGE([opal_hwloc_external],
                              [hwloc.h],
                              [hwloc],
                              [hwloc_topology_init],
                              [],
                              [$opal_hwloc_dir],
                              [$opal_hwloc_libdir],
                              [opal_hwloc_external_support=yes],
                              [opal_hwloc_external_support=no])

           CPPFLAGS=$opal_hwloc_external_CPPFLAGS_save
           CFLAGS=$opal_hwloc_external_CFLAGS_save
           LDFLAGS=$opal_hwloc_external_LDFLAGS_save
           LIBS=$opal_hwloc_external_LIBS_save
          ])

    # Done!
    AS_IF([test "$opal_hwloc_external_support" = "yes"],
          [AC_DEFINE_UNQUOTED([HWLOC_EXTERNAL_HWLOC_VERSION], 
                              [external], 
                              [Version of hwloc])

           # See if the external hwloc supports XML
           AC_MSG_CHECKING([if external hwloc supports XML])
           AS_IF([test "$opal_hwloc_dir" != ""],
                 [opal_hwloc_external_lstopo="$opal_hwloc_dir/bin/lstopo"],
                 [OPAL_WHICH(lstopo, opal_hwloc_external_lstopo)])
           opal_hwloc_external_tmp=`$opal_hwloc_external_lstopo --help | $GREP "Supported output file formats" | grep xml`
           AS_IF([test "$opal_hwloc_external_tmp" = ""],
                 [opal_hwloc_external_enable_xml=0
                  AC_MSG_RESULT([no])],
                 [opal_hwloc_external_enable_xml=1
                  AC_MSG_RESULT([yes])])

           AC_CHECK_HEADERS([infiniband/verbs.h])

           $1],
          [$2])

    AC_SUBST(opal_hwloc_external_LDFLAGS)
    AC_SUBST(opal_hwloc_external_LIBS)

    OPAL_VAR_SCOPE_POP
])
m4trace:config/autogen_found_items.m4:325: -1- m4_include([opal/mca/hwloc/hwloc172/configure.m4])
m4trace:opal/mca/hwloc/hwloc172/configure.m4:15: -1- AC_DEFUN([MCA_opal_hwloc_hwloc172_PRIORITY], [75])
m4trace:opal/mca/hwloc/hwloc172/configure.m4:20: -1- AC_DEFUN([MCA_opal_hwloc_hwloc172_COMPILE_MODE], [
    AC_MSG_CHECKING([for MCA component $2:$3 compile mode])
    $4="static"
    AC_MSG_RESULT([$$4])
])
m4trace:opal/mca/hwloc/hwloc172/configure.m4:27: -1- m4_include([opal/mca/hwloc/hwloc172/hwloc/config/hwloc.m4])
m4trace:opal/mca/hwloc/hwloc172/hwloc/config/hwloc.m4:25: -1- AC_DEFUN([HWLOC_SETUP_CORE], [
    AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])
    AC_REQUIRE([AC_CANONICAL_TARGET])
    AC_REQUIRE([AC_PROG_CC])

    AS_IF([test "x$4" != "x"],
          [cat <<EOF

###
### Configuring hwloc core
###
EOF])

    # If no prefix was defined, set a good value
    m4_ifval([$1], 
             [m4_define([hwloc_config_prefix],[$1/])],
             [m4_define([hwloc_config_prefix], [])])

    # Unless previously set to "standalone" mode, default to embedded
    # mode
    AS_IF([test "$hwloc_mode" = ""], [hwloc_mode=embedded])
    AC_MSG_CHECKING([hwloc building mode])
    AC_MSG_RESULT([$hwloc_mode])

    # Get hwloc's absolute top builddir (which may not be the same as
    # the real $top_builddir, because we may be building in embedded
    # mode).
    HWLOC_startdir=`pwd`
    if test x"hwloc_config_prefix" != "x" -a ! -d "hwloc_config_prefix"; then
        mkdir -p "hwloc_config_prefix"
    fi
    if test x"hwloc_config_prefix" != "x"; then
        cd "hwloc_config_prefix"
    fi
    HWLOC_top_builddir=`pwd`
    AC_SUBST(HWLOC_top_builddir)

    # Get hwloc's absolute top srcdir (which may not be the same as
    # the real $top_srcdir, because we may be building in embedded
    # mode).  First, go back to the startdir incase the $srcdir is
    # relative.

    cd "$HWLOC_startdir"
    cd "$srcdir"/hwloc_config_prefix
    HWLOC_top_srcdir="`pwd`"
    AC_SUBST(HWLOC_top_srcdir)

    # Go back to where we started
    cd "$HWLOC_startdir"

    AC_MSG_NOTICE([hwloc builddir: $HWLOC_top_builddir])
    AC_MSG_NOTICE([hwloc srcdir: $HWLOC_top_srcdir])
    if test "$HWLOC_top_builddir" != "$HWLOC_top_srcdir"; then
        AC_MSG_NOTICE([Detected VPATH build])
    fi

    # Debug mode?
    AC_MSG_CHECKING([if want hwloc maintainer support])
    hwloc_debug=

    # Unconditionally disable debug mode in embedded mode; if someone
    # asks, we can add a configure-time option for it.  Disable it
    # now, however, because --enable-debug is not even added as an
    # option when configuring in embedded mode, and we wouldn't want
    # to hijack the enclosing application's --enable-debug configure
    # switch.
    AS_IF([test "$hwloc_mode" = "embedded"],
          [hwloc_debug=0
           hwloc_debug_msg="disabled (embedded mode)"])
    AS_IF([test "$hwloc_debug" = "" -a "$enable_debug" = "yes"],
          [hwloc_debug=1
           hwloc_debug_msg="enabled"])
    AS_IF([test "$hwloc_debug" = ""],
          [hwloc_debug=0
           hwloc_debug_msg="disabled"])
    # Grr; we use #ifndef for HWLOC_DEBUG!  :-(
    AH_TEMPLATE(HWLOC_DEBUG, [Whether we are in debugging mode or not])
    AS_IF([test "$hwloc_debug" = "1"], [AC_DEFINE([HWLOC_DEBUG])])
    AC_MSG_RESULT([$hwloc_debug_msg])

    # We need to set a path for header, etc files depending on whether
    # we're standalone or embedded. this is taken care of by HWLOC_EMBEDDED.

    AC_MSG_CHECKING([for hwloc directory prefix])
    AC_MSG_RESULT(m4_ifval([$1], hwloc_config_prefix, [(none)]))

    # Note that private/config.h *MUST* be listed first so that it
    # becomes the "main" config header file.  Any AC-CONFIG-HEADERS
    # after that (hwloc/config.h) will only have selective #defines
    # replaced, not the entire file.
    AC_CONFIG_HEADERS(hwloc_config_prefix[include/private/autogen/config.h])
    AC_CONFIG_HEADERS(hwloc_config_prefix[include/hwloc/autogen/config.h])

    # What prefix are we using?
    AC_MSG_CHECKING([for hwloc symbol prefix])
    AS_IF([test "$hwloc_symbol_prefix_value" = ""],
          [AS_IF([test "$with_hwloc_symbol_prefix" = ""],
                 [hwloc_symbol_prefix_value=hwloc_],
                 [hwloc_symbol_prefix_value=$with_hwloc_symbol_prefix])])
    AC_DEFINE_UNQUOTED(HWLOC_SYM_PREFIX, [$hwloc_symbol_prefix_value],
                       [The hwloc symbol prefix])
    # Ensure to [] escape the whole next line so that we can get the
    # proper tr tokens
    [hwloc_symbol_prefix_value_caps="`echo $hwloc_symbol_prefix_value | tr '[:lower:]' '[:upper:]'`"]
    AC_DEFINE_UNQUOTED(HWLOC_SYM_PREFIX_CAPS, [$hwloc_symbol_prefix_value_caps],
                       [The hwloc symbol prefix in all caps])
    AC_MSG_RESULT([$hwloc_symbol_prefix_value])

    # Give an easy #define to know if we need to transform all the
    # hwloc names
    AH_TEMPLATE([HWLOC_SYM_TRANSFORM], [Whether we need to re-define all the hwloc public symbols or not])
    AS_IF([test "$hwloc_symbol_prefix_value" = "hwloc_"],
          [AC_DEFINE([HWLOC_SYM_TRANSFORM], [0])],
          [AC_DEFINE([HWLOC_SYM_TRANSFORM], [1])])

    # GCC specifics.
    if test "x$GCC" = "xyes"; then
        HWLOC_GCC_CFLAGS="-Wall -Wmissing-prototypes -Wundef"
        HWLOC_GCC_CFLAGS="$HWLOC_GCC_CFLAGS -Wpointer-arith -Wcast-align"
    fi

    # Enample system extensions for O_DIRECTORY, fdopen, fssl, etc.
    AH_VERBATIM([USE_HPUX_SYSTEM_EXTENSIONS],
[/* Enable extensions on HP-UX. */
#ifndef _HPUX_SOURCE
# undef _HPUX_SOURCE
#endif
])
    AC_DEFINE([_HPUX_SOURCE], [1], [Are we building for HP-UX?])
    
    AC_LANG_PUSH([C])
    
    # Check to see if we're producing a 32 or 64 bit executable by
    # checking the sizeof void*.  Note that AC CHECK_SIZEOF even works
    # when cross compiling (!), according to the AC 2.64 docs.  This
    # check is needed because on some systems, you can instruct the
    # compiler to specifically build 32 or 64 bit executables -- even
    # though the $target may indicate something different.
    AC_CHECK_SIZEOF([void *])

    #
    # List of components to be built, either statically or dynamically.
    # To be enlarged below.
    #
    hwloc_components="noos xml synthetic custom xml_nolibxml"

    #
    # Check OS support
    #
    AC_MSG_CHECKING([which OS support to include])
    case ${target} in
      powerpc64-bgq-linux*) # must be before Linux
	AC_DEFINE(HWLOC_BGQ_SYS, 1, [Define to 1 on BlueGene/Q])
	hwloc_bgq=yes
	AC_MSG_RESULT([bgq])
	hwloc_components="$hwloc_components bgq"
	;;
      *-*-linux*)
        AC_DEFINE(HWLOC_LINUX_SYS, 1, [Define to 1 on Linux])
        hwloc_linux=yes
        AC_MSG_RESULT([Linux])
        hwloc_components="$hwloc_components linux"
        ;;
      *-*-irix*)
        AC_DEFINE(HWLOC_IRIX_SYS, 1, [Define to 1 on Irix])
        hwloc_irix=yes
        AC_MSG_RESULT([IRIX])
        # no irix component yet
        ;;
      *-*-darwin*)
        AC_DEFINE(HWLOC_DARWIN_SYS, 1, [Define to 1 on Darwin])
        hwloc_darwin=yes
        AC_MSG_RESULT([Darwin])
        hwloc_components="$hwloc_components darwin"
        ;;
      *-*-solaris*)
        AC_DEFINE(HWLOC_SOLARIS_SYS, 1, [Define to 1 on Solaris])
        hwloc_solaris=yes
        AC_MSG_RESULT([Solaris])
        hwloc_components="$hwloc_components solaris"
        ;;
      *-*-aix*)
        AC_DEFINE(HWLOC_AIX_SYS, 1, [Define to 1 on AIX])
        hwloc_aix=yes
        AC_MSG_RESULT([AIX])
        hwloc_components="$hwloc_components aix"
        ;;
      *-*-osf*)
        AC_DEFINE(HWLOC_OSF_SYS, 1, [Define to 1 on OSF])
        hwloc_osf=yes
        AC_MSG_RESULT([OSF])
        hwloc_components="$hwloc_components osf"
        ;;
      *-*-hpux*)
        AC_DEFINE(HWLOC_HPUX_SYS, 1, [Define to 1 on HP-UX])
        hwloc_hpux=yes
        AC_MSG_RESULT([HP-UX])
        hwloc_components="$hwloc_components hpux"
        ;;
      *-*-mingw*|*-*-cygwin*)
        AC_DEFINE(HWLOC_WIN_SYS, 1, [Define to 1 on WINDOWS])
        hwloc_windows=yes
        AC_MSG_RESULT([Windows])
        hwloc_components="$hwloc_components windows"
        ;;
      *-*-*freebsd*)
        AC_DEFINE(HWLOC_FREEBSD_SYS, 1, [Define to 1 on *FREEBSD])
        hwloc_freebsd=yes
        AC_MSG_RESULT([FreeBSD])
        hwloc_components="$hwloc_components freebsd"
        ;;
      *-*-*netbsd*)
        AC_DEFINE(HWLOC_NETBSD_SYS, 1, [Define to 1 on *NETBSD])
        hwloc_netbsd=yes
        AC_MSG_RESULT([NetBSD])
        hwloc_components="$hwloc_components netbsd"
        ;;
      *)
        AC_MSG_RESULT([Unsupported! ($target)])
        AC_DEFINE(HWLOC_UNSUPPORTED_SYS, 1, [Define to 1 on unsupported systems])
        AC_MSG_WARN([***********************************************************])
        AC_MSG_WARN([*** hwloc does not support this system.])
        AC_MSG_WARN([*** hwloc will *attempt* to build (but it may not work).])
        AC_MSG_WARN([*** hwloc run-time results may be reduced to showing just one processor.])
        AC_MSG_WARN([*** You have been warned.])
        AC_MSG_WARN([*** Pausing to give you time to read this message...])
        AC_MSG_WARN([***********************************************************])
        sleep 10
        ;;
    esac

    #
    # Check CPU support
    #
    AC_MSG_CHECKING([which CPU support to include])
    case ${target} in
      i*86-*-*|x86_64-*-*|amd64-*-*)
        case ${ac_cv_sizeof_void_p} in
          4)
            AC_DEFINE(HWLOC_X86_32_ARCH, 1, [Define to 1 on x86_32])
            hwloc_x86_32=yes
	    HWLOC_MS_LIB_ARCH=X86
            AC_MSG_RESULT([x86_32])
            ;;
          8)
            AC_DEFINE(HWLOC_X86_64_ARCH, 1, [Define to 1 on x86_64])
            hwloc_x86_64=yes
	    HWLOC_MS_LIB_ARCH=X64
            AC_MSG_RESULT([x86_64])
            ;;
          *)
            AC_DEFINE(HWLOC_X86_64_ARCH, 1, [Define to 1 on x86_64])
            hwloc_x86_64=yes
	    HWLOC_MS_LIB_ARCH=X64
            AC_MSG_RESULT([unknown -- assuming x86_64])
            ;;
        esac
        ;;
      *)
        AC_MSG_RESULT([unknown])
        ;;
    esac
    AC_SUBST(HWLOC_MS_LIB_ARCH)
    
    AC_CHECK_SIZEOF([unsigned long])
    AC_DEFINE_UNQUOTED([HWLOC_SIZEOF_UNSIGNED_LONG], $ac_cv_sizeof_unsigned_long, [The size of `unsigned long', as computed by sizeof])
    AC_CHECK_SIZEOF([unsigned int])
    AC_DEFINE_UNQUOTED([HWLOC_SIZEOF_UNSIGNED_INT], $ac_cv_sizeof_unsigned_int, [The size of `unsigned int', as computed by sizeof])

    #
    # Check for compiler attributes and visibility
    #
    _HWLOC_C_COMPILER_VENDOR([hwloc_c_vendor])
    _HWLOC_CHECK_ATTRIBUTES
    _HWLOC_CHECK_VISIBILITY
    HWLOC_CFLAGS="$HWLOC_FLAGS $HWLOC_VISIBILITY_CFLAGS"
    AS_IF([test "$HWLOC_VISIBILITY_CFLAGS" != ""],
          [AC_MSG_WARN(["$HWLOC_VISIBILITY_CFLAGS" has been added to the hwloc CFLAGS])])

    # Make sure the compiler returns an error code when function arg
    # count is wrong, otherwise sched_setaffinity checks may fail.
    HWLOC_STRICT_ARGS_CFLAGS=
    hwloc_args_check=0
    AC_MSG_CHECKING([whether the C compiler rejects function calls with too many arguments])
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        extern int one_arg(int x);
        int foo(void) { return one_arg(1, 2); }
      ]])],
      [AC_MSG_RESULT([no])],
      [hwloc_args_check=1
       AC_MSG_RESULT([yes])])
    AC_MSG_CHECKING([whether the C compiler rejects function calls with too few arguments])
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        extern int two_arg(int x, int y);
        int foo(void) { return two_arg(3); }
      ]])],
      [AC_MSG_RESULT([no])],
      [hwloc_args_check=`expr $hwloc_args_check + 1`
       AC_MSG_RESULT([yes])])
    AS_IF([test "$hwloc_args_check" != "2"],[
         AC_MSG_WARN([Your C compiler does not consider incorrect argument counts to be a fatal error.])
        case "$hwloc_c_vendor" in
        ibm)
            HWLOC_STRICT_ARGS_CFLAGS="-qhalt=e"
            ;;
        intel)
            HWLOC_STRICT_ARGS_CFLAGS="-we140"
            ;;
        *)
            HWLOC_STRICT_ARGS_CFLAGS=FAIL
            AC_MSG_WARN([Please report this warning and configure using a different C compiler if possible.])
            ;;
        esac
        AS_IF([test "$HWLOC_STRICT_ARGS_CFLAGS" != "FAIL"],[
            AC_MSG_WARN([Configure will append '$HWLOC_STRICT_ARGS_CFLAGS' to the value of CFLAGS when needed.])
             AC_MSG_WARN([Alternatively you may configure with a different compiler.])
        ])
    ])

    #
    # Now detect support
    #

    AC_CHECK_HEADERS([unistd.h])
    AC_CHECK_HEADERS([dirent.h])
    AC_CHECK_HEADERS([strings.h])
    
    hwloc_strncasecmp=strncmp
    AC_CHECK_FUNCS([strncasecmp], [
      _HWLOC_CHECK_DECL([strncasecmp], [
        hwloc_strncasecmp=strncasecmp
      ])
    ])
    AC_DEFINE_UNQUOTED(hwloc_strncasecmp, $hwloc_strncasecmp, [Define this to either strncasecmp or strncmp])

    AC_CHECK_FUNCS([strftime])
    AC_CHECK_FUNCS([setlocale])
    
    AC_CHECK_HEADER([stdint.h], [
      AC_DEFINE([HWLOC_HAVE_STDINT_H], [1], [Define to 1 if you have the <stdint.h> header file.])
    ])
    AC_CHECK_HEADERS([sys/mman.h])
    
    old_CPPFLAGS="$CPPFLAGS"
    CPPFLAGS="$CPPFLAGS -D_WIN32_WINNT=0x0601"
    AC_CHECK_TYPES([KAFFINITY,
                    PROCESSOR_CACHE_TYPE,
                    CACHE_DESCRIPTOR,
                    LOGICAL_PROCESSOR_RELATIONSHIP,
                    RelationProcessorPackage,
                    SYSTEM_LOGICAL_PROCESSOR_INFORMATION,
                    GROUP_AFFINITY,
                    PROCESSOR_RELATIONSHIP,
                    NUMA_NODE_RELATIONSHIP,
                    CACHE_RELATIONSHIP,
                    PROCESSOR_GROUP_INFO,
                    GROUP_RELATIONSHIP,
                    SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX,
		    PSAPI_WORKING_SET_EX_BLOCK,
		    PSAPI_WORKING_SET_EX_INFORMATION],
                    [],[],[[#include <windows.h>]])
    CPPFLAGS="$old_CPPFLAGS"
    AC_CHECK_LIB([gdi32], [main],
                 [HWLOC_LIBS="-lgdi32 $HWLOC_LIBS"
                  AC_DEFINE([HAVE_LIBGDI32], 1, [Define to 1 if we have -lgdi32])])
    
    AC_CHECK_HEADER([windows.h], [
      AC_DEFINE([HWLOC_HAVE_WINDOWS_H], [1], [Define to 1 if you have the `windows.h' header.])
    ])
    
    AC_CHECK_HEADERS([sys/lgrp_user.h], [
      AC_CHECK_LIB([lgrp], [lgrp_latency_cookie],
                   [HWLOC_LIBS="-llgrp $HWLOC_LIBS"
                    AC_DEFINE([HAVE_LIBLGRP], 1, [Define to 1 if we have -llgrp])])
    ])
    AC_CHECK_HEADERS([kstat.h], [
      AC_CHECK_LIB([kstat], [main], 
                   [HWLOC_LIBS="-lkstat $HWLOC_LIBS"
                    AC_DEFINE([HAVE_LIBKSTAT], 1, [Define to 1 if we have -lkstat])])
    ])

    AC_CHECK_DECLS([fabsf], [
      AC_CHECK_LIB([m], [fabsf],
                   [HWLOC_LIBS="-lm $HWLOC_LIBS"])
    ], [], [[#include <math.h>]])

    AC_CHECK_HEADERS([picl.h], [
      AC_CHECK_LIB([picl], [picl_initialize],
                   [HWLOC_LIBS="-lpicl $HWLOC_LIBS"])])

    AC_CHECK_DECLS([_SC_NPROCESSORS_ONLN,
    		_SC_NPROCESSORS_CONF,
    		_SC_NPROC_ONLN,
    		_SC_NPROC_CONF,
    		_SC_PAGESIZE,
    		_SC_PAGE_SIZE,
    		_SC_LARGE_PAGESIZE],,[:],[[#include <unistd.h>]])
    
    AC_HAVE_HEADERS([mach/mach_host.h])
    AC_HAVE_HEADERS([mach/mach_init.h], [
      AC_CHECK_FUNCS([host_info])
    ])

    AC_CHECK_HEADERS([sys/param.h])
    AC_CHECK_HEADERS([sys/sysctl.h], [
      AC_CHECK_DECLS([CTL_HW, HW_NCPU],,,[[
      #if HAVE_SYS_PARAM_H
      #include <sys/param.h>
      #endif
      #include <sys/sysctl.h>
      ]])
    ],,[
      AC_INCLUDES_DEFAULT
      #if HAVE_SYS_PARAM_H
      #include <sys/param.h>
      #endif
    ])
    AC_CHECK_DECLS([strtoull], [], [], [AC_INCLUDES_DEFAULT])

    AC_CHECK_FUNCS([sysctl sysctlbyname])

    case ${target} in
      *-*-mingw*|*-*-cygwin*)
        hwloc_pid_t=HANDLE
        hwloc_thread_t=HANDLE
        ;;
      *)
        hwloc_pid_t=pid_t
        AC_CHECK_TYPES([pthread_t], [hwloc_thread_t=pthread_t], [:], [[#include <pthread.h>]])
        ;;
    esac
    AC_DEFINE_UNQUOTED(hwloc_pid_t, $hwloc_pid_t, [Define this to the process ID type])
    if test "x$hwloc_thread_t" != "x" ; then
      AC_DEFINE_UNQUOTED(hwloc_thread_t, $hwloc_thread_t, [Define this to the thread ID type])
    fi
    
    _HWLOC_CHECK_DECL([sched_setaffinity], [
      AC_DEFINE([HWLOC_HAVE_SCHED_SETAFFINITY], [1], [Define to 1 if glibc provides a prototype of sched_setaffinity()])
      AS_IF([test "$HWLOC_STRICT_ARGS_CFLAGS" = "FAIL"],[
        AC_MSG_WARN([Support for sched_setaffinity() requires a C compiler which])
        AC_MSG_WARN([considers incorrect argument counts to be a fatal error.])
        AC_MSG_ERROR([Cannot continue.])
      ])
      AC_MSG_CHECKING([for old prototype of sched_setaffinity])
      hwloc_save_CFLAGS=$CFLAGS
      CFLAGS="$CFLAGS $HWLOC_STRICT_ARGS_CFLAGS"
      AC_COMPILE_IFELSE([
          AC_LANG_PROGRAM([[
              #define _GNU_SOURCE
              #include <sched.h>
              static unsigned long mask;
              ]], [[ sched_setaffinity(0, (void*) &mask); ]])],
          [AC_DEFINE([HWLOC_HAVE_OLD_SCHED_SETAFFINITY], [1], [Define to 1 if glibc provides the old prototype (without length) of sched_setaffinity()])
           AC_MSG_RESULT([yes])],
          [AC_MSG_RESULT([no])])
      CFLAGS=$hwloc_save_CFLAGS
    ], , [[
#define _GNU_SOURCE
#include <sched.h>
]])
    
    AC_MSG_CHECKING([for working CPU_SET])
    AC_LINK_IFELSE([
      AC_LANG_PROGRAM([[
        #include <sched.h>
        cpu_set_t set;
        ]], [[ CPU_ZERO(&set); CPU_SET(0, &set);]])],
	[AC_DEFINE([HWLOC_HAVE_CPU_SET], [1], [Define to 1 if the CPU_SET macro works])
         AC_MSG_RESULT([yes])],
        [AC_MSG_RESULT([no])])
    
    AC_MSG_CHECKING([for working CPU_SET_S])
    AC_LINK_IFELSE([
      AC_LANG_PROGRAM([[
          #include <sched.h>
          cpu_set_t *set;
        ]], [[
          set = CPU_ALLOC(1024);
          CPU_ZERO_S(CPU_ALLOC_SIZE(1024), set);
          CPU_SET_S(CPU_ALLOC_SIZE(1024), 0, set);
          CPU_FREE(set);
        ]])],
        [AC_DEFINE([HWLOC_HAVE_CPU_SET_S], [1], [Define to 1 if the CPU_SET_S macro works])
         AC_MSG_RESULT([yes])],
        [AC_MSG_RESULT([no])])

    AC_MSG_CHECKING([for working _syscall3])
    AC_LINK_IFELSE([
      AC_LANG_PROGRAM([[
          #include <linux/unistd.h>
          #include <errno.h>
          #define __NR_hwloc_test 123
          _syscall3(int, hwloc_test, int, param1, int, param2, int, param3);
        ]], [[ hwloc_test(1, 2, 3); ]])],
        [AC_DEFINE([HWLOC_HAVE__SYSCALL3], [1], [Define to 1 if the _syscall3 macro works])
         AC_MSG_RESULT([yes])],
        [AC_MSG_RESULT([no])])

    # Check for kerrighed, but don't abort if not found.  It's illegal
    # to pass in an empty 3rd argument, but we trust the output of
    # pkg-config, so just give it a value that will always work:
    # printf.
    HWLOC_PKG_CHECK_MODULES([KERRIGHED], [kerrighed >= 2.0], [printf], [], [:])

    AC_PATH_PROGS([HWLOC_MS_LIB], [lib])
    AC_ARG_VAR([HWLOC_MS_LIB], [Path to Microsoft's Visual Studio `lib' tool])

    AC_PATH_PROG([BASH], [bash])
    
    AC_CHECK_FUNCS([ffs], [
      _HWLOC_CHECK_DECL([ffs],[
        AC_DEFINE([HWLOC_HAVE_DECL_FFS], [1], [Define to 1 if function `ffs' is declared by system headers])
      ])
      AC_DEFINE([HWLOC_HAVE_FFS], [1], [Define to 1 if you have the `ffs' function.])
      if ( $CC --version | grep gccfss ) >/dev/null 2>&1 ; then
        dnl May be broken due to
        dnl    https://forums.oracle.com/forums/thread.jspa?threadID=1997328
        dnl TODO: a more selective test, since bug may be version dependent.
        dnl We can't use AC_TRY_LINK because the failure does not appear until
        dnl run/load time and there is currently no precedent for AC_TRY_RUN
        dnl use in hwloc.  --PHH
        dnl For now, we're going with "all gccfss compilers are broken". 
        dnl Better to be safe and correct; it's not like this is
        dnl performance-critical code, after all.
        AC_DEFINE([HWLOC_HAVE_BROKEN_FFS], [1], 
                  [Define to 1 if your `ffs' function is known to be broken.])
      fi
    ])
    AC_CHECK_FUNCS([ffsl], [
      _HWLOC_CHECK_DECL([ffsl],[
        AC_DEFINE([HWLOC_HAVE_DECL_FFSL], [1], [Define to 1 if function `ffsl' is declared by system headers])
      ])
      AC_DEFINE([HWLOC_HAVE_FFSL], [1], [Define to 1 if you have the `ffsl' function.])
    ])
    
    AC_CHECK_FUNCS([fls], [
      _HWLOC_CHECK_DECL([fls],[
        AC_DEFINE([HWLOC_HAVE_DECL_FLS], [1], [Define to 1 if function `fls' is declared by system headers])
      ])
      AC_DEFINE([HWLOC_HAVE_FLS], [1], [Define to 1 if you have the `fls' function.])
    ])
    AC_CHECK_FUNCS([flsl], [
      _HWLOC_CHECK_DECL([flsl],[
        AC_DEFINE([HWLOC_HAVE_DECL_FLSL], [1], [Define to 1 if function `flsl' is declared by system headers])
      ])
      AC_DEFINE([HWLOC_HAVE_FLSL], [1], [Define to 1 if you have the `flsl' function.])
    ])
    
    AC_CHECK_FUNCS([clz], [
      _HWLOC_CHECK_DECL([clz],[
        AC_DEFINE([HWLOC_HAVE_DECL_CLZ], [1], [Define to 1 if function `clz' is declared by system headers])
      ])
      AC_DEFINE([HWLOC_HAVE_CLZ], [1], [Define to 1 if you have the `clz' function.])
    ])
    AC_CHECK_FUNCS([clzl], [
      _HWLOC_CHECK_DECL([clzl],[
        AC_DEFINE([HWLOC_HAVE_DECL_CLZL], [1], [Define to 1 if function `clzl' is declared by system headers])
      ])
      AC_DEFINE([HWLOC_HAVE_CLZL], [1], [Define to 1 if you have the `clzl' function.])
    ])
    
    AC_CHECK_FUNCS([openat], [hwloc_have_openat=yes])

    AC_CHECK_HEADERS([malloc.h])
    AC_CHECK_FUNCS([getpagesize memalign posix_memalign])

    AC_CHECK_HEADERS([sys/utsname.h])
    AC_CHECK_FUNCS([uname])

    AC_CHECK_HEADERS([pthread_np.h])
    AC_CHECK_DECLS([pthread_setaffinity_np],,[:],[[
      #include <pthread.h>
      #ifdef HAVE_PTHREAD_NP_H
      #  include <pthread_np.h>
      #endif
    ]])
    AC_CHECK_DECLS([pthread_getaffinity_np],,[:],[[
      #include <pthread.h>
      #ifdef HAVE_PTHREAD_NP_H
      #  include <pthread_np.h>
      #endif
    ]])
    AC_CHECK_FUNC([sched_setaffinity], [hwloc_have_sched_setaffinity=yes])
    AC_CHECK_HEADERS([sys/cpuset.h],,,[[#include <sys/param.h>]])
    AC_CHECK_FUNCS([cpuset_setaffinity])
    AC_SEARCH_LIBS([pthread_getthrds_np], [pthread],
      AC_DEFINE([HWLOC_HAVE_PTHREAD_GETTHRDS_NP], 1, `Define to 1 if you have pthread_getthrds_np')
    )
    AC_CHECK_FUNCS([cpuset_setid])

    # Linux libnuma support
    hwloc_linux_libnuma_happy=no
    if test "x$enable_libnuma" != "xno"; then
        hwloc_linux_libnuma_happy=yes
        AC_CHECK_HEADERS([numaif.h], [
            AC_CHECK_LIB([numa], [numa_available], [HWLOC_LINUX_LIBNUMA_LIBS="-lnuma"], [hwloc_linux_libnuma_happy=no])
        ], [hwloc_linux_libnuma_happy=no])
    fi
    AC_SUBST(HWLOC_LINUX_LIBNUMA_LIBS)
    # If we asked for Linux libnuma support but couldn't deliver, fail
    HWLOC_LIBS="$HWLOC_LIBS $HWLOC_LINUX_LIBNUMA_LIBS"
    AS_IF([test "$enable_libnuma" = "yes" -a "$hwloc_linux_libnuma_happy" = "no"],
          [AC_MSG_WARN([Specified --enable-libnuma switch, but could not])
           AC_MSG_WARN([find appropriate support])
           AC_MSG_ERROR([Cannot continue])])
    if test "x$hwloc_linux_libnuma_happy" = "xyes"; then
      tmp_save_LIBS="$LIBS"
      LIBS="$LIBS $HWLOC_LINUX_LIBNUMA_LIBS"

      AC_CHECK_LIB([numa], [set_mempolicy], [
	enable_set_mempolicy=yes
	AC_DEFINE([HWLOC_HAVE_SET_MEMPOLICY], [1], [Define to 1 if set_mempolicy is available.])
      ])
      AC_CHECK_LIB([numa], [mbind], [
	enable_mbind=yes
	AC_DEFINE([HWLOC_HAVE_MBIND], [1], [Define to 1 if mbind is available.])
      ])
      AC_CHECK_LIB([numa], [migrate_pages], [
	enable_migrate_pages=yes
	AC_DEFINE([HWLOC_HAVE_MIGRATE_PAGES], [1], [Define to 1 if migrate_pages is available.])
      ])

      LIBS="$tmp_save_LIBS"
    fi

    # PCI support
    hwloc_pci_happy=no
    if test "x$enable_pci" != xno -a "x$enable_libpci" != "xyes"; then
      hwloc_pci_happy=yes
      HWLOC_PKG_CHECK_MODULES([PCIACCESS], [pciaccess], [pci_slot_match_iterator_create], [:], [hwloc_pci_happy=no])
      if test x$hwloc_pci_happy = xyes; then hwloc_pci_lib=pciaccess; fi
    fi
    # PCI support with pciutils instead of pciaccess
    if test "x$enable_pci" != "xno" -a "x$hwloc_pci_lib" != "xpciaccess"; then
        hwloc_pci_happy=yes
        HWLOC_PKG_CHECK_MODULES([PCIUTILS], [libpci], [pci_cleanup], [:], [
          # manually check pciutils in case a old one without .pc is installed
          AC_CHECK_HEADERS([pci/pci.h], [
	    # try first without -lz, it's not always needed (RHEL5, Debian Etch)
	    AC_CHECK_LIB([pci], [pci_init], [
	      HWLOC_PCIUTILS_LIBS="-lpci"
	      ], [
              # try again with -lz because it's needed sometimes (FC7).
              # don't use AC_CHECK_LIB again because the cache would
              # return "no" without actually rechecking
              AC_MSG_CHECKING([for pci_init in -lpci with -lz])
              tmp_save_LIBS=$LIBS
              LIBS="-lpci -lz $LIBS"
              AC_LINK_IFELSE([AC_LANG_CALL([], [pci_init])],
                             [HWLOC_PCIUTILS_LIBS="-lpci -lz"
                              HWLOC_PCIUTILS_ADDITIONAL_LIBS="-lz"
                              AC_MSG_RESULT(yes)],
                             [hwloc_pci_happy=no
                              AC_MSG_RESULT(no)])
              LIBS=$tmp_save_LIBS])
            # Also check with pci_lookup_name, because that sometimes
            # requires -lresolv (RHEL5.6). don't use AC_CHECK_LIB twice
            # because the cache would return "no" without actually rechecking
	    AC_CHECK_LIB([pci], [pci_lookup_name], [],
                [AC_CHECK_LIB([resolv], [inet_ntoa], 
                    [AC_MSG_CHECKING([for pci_lookup_name in -lpci with -lresolv])
                     tmp_save_LIBS=$LIBS
                     LIBS="-lpci -lresolv $LIBS $HWLOC_PCIUTILS_ADDITIONAL_LIBS"
                     AC_LINK_IFELSE([AC_LANG_CALL([], [pci_lookup_name])],
                                    [HWLOC_PCIUTILS_LIBS="$HWLOC_PCIUTILS_LIBS -lresolv"
                                     HWLOC_PCIUTILS_ADDITIONAL_LIBS="$HWLOC_PCIUTILS_ADDITIONAL_LIBS -lresolv"
                                     AC_MSG_RESULT(yes)],
                                    [hwloc_pci_happy=no
                                     AC_MSG_RESULT(no)])
                     LIBS=$tmp_save_LIBS],
                    [hwloc_pci_happy=no])])
            ], [hwloc_pci_happy=no])
        ])
        if test x$hwloc_pci_happy = xyes; then
	  # pciutils could be used, but we don't want to force use it since it may GPL-taint hwloc
	  if test x$enable_libpci = xyes; then
	    hwloc_pci_lib=pciutils
	  else
	    # user didn't explicit request pciutils, disable PCI and warn the user
	    hwloc_pci_happy=no
	    hwloc_warn_may_use_libpci=yes
	  fi
	else
	  # pciutils not found, error out if it was requested
	  if test x$enable_libpci = xyes; then
	    AC_MSG_WARN([Specified --enable-libpci switch, but could not])
	    AC_MSG_WARN([find appropriate support])
	    AC_MSG_ERROR([Cannot continue])
	  fi
	fi
    fi
    AC_SUBST(HWLOC_PCIUTILS_LIBS)
    # If we asked for pci support but couldn't deliver, fail
    AS_IF([test "$enable_pci" = "yes" -a "$hwloc_pci_happy" = "no" -a "$hwloc_warn_may_use_libpci" != "yes"],
          [AC_MSG_WARN([Specified --enable-pci switch, but could not])
           AC_MSG_WARN([find appropriate support])
           AC_MSG_ERROR([Cannot continue])])
    # pciaccess specific enabling
    if test "x$hwloc_pci_lib" = "xpciaccess"; then
      HWLOC_PCIACCESS_REQUIRES=pciaccess
      AC_DEFINE([HWLOC_HAVE_LIBPCIACCESS], [1], [Define to 1 if you have the `libpciaccess' library.])
    fi
    # pciutils specific checks and enabling
    if test "x$hwloc_pci_lib" = "xpciutils"; then
      tmp_save_CFLAGS="$CFLAGS"
      CFLAGS="$CFLAGS $HWLOC_PCIUTILS_CFLAGS"
      tmp_save_LIBS="$LIBS"
      LIBS="$LIBS $HWLOC_PCIUTILS_LIBS"

      AC_CHECK_DECLS([PCI_LOOKUP_NO_NUMBERS],,[:],[[#include <pci/pci.h>]])
      AC_CHECK_DECLS([PCI_LOOKUP_NO_NUMBERS],,[:],[[#include <pci/pci.h>]])
      AC_CHECK_LIB([pci], [pci_find_cap], [enable_pci_caps=yes], [enable_pci_caps=no], [$HWLOC_PCIUTILS_ADDITIONAL_LIBS])
      if test "x$enable_pci_caps" = "xyes"; then
        AC_DEFINE([HWLOC_HAVE_PCI_FIND_CAP], [1], [Define to 1 if `libpci' has the `pci_find_cap' function.])
      fi

      AC_MSG_CHECKING(whether struct pci_dev has a device_class field)
      AC_TRY_COMPILE([#include <pci/pci.h>],
	[int f(struct pci_dev *dev) { return dev->device_class; }],
        [pcidev_device_class=yes], [pcidev_device_class=no])
      AC_MSG_RESULT([$pcidev_device_class])
      if test x$pcidev_device_class = xyes; then
        AC_DEFINE([HWLOC_HAVE_PCIDEV_DEVICE_CLASS], [1], [Define to 1 if `libpci' struct pci_dev has a `device_class' field.])
      fi

      AC_MSG_CHECKING(whether struct pci_dev has a domain field)
      AC_TRY_COMPILE([#include <pci/pci.h>],
	[int f(struct pci_dev *dev) { return dev->domain; }],
        [pcidev_domain=yes], [pcidev_domain=no])
      AC_MSG_RESULT([$pcidev_domain])
      if test x$pcidev_domain = xyes; then
        AC_DEFINE([HWLOC_HAVE_PCIDEV_DOMAIN], [1], [Define to 1 if `libpci' struct pci_dev has a `domain' field.])
      fi

      CFLAGS="$tmp_save_CFLAGS"
      LIBS="$tmp_save_LIBS"

      HWLOC_PCIUTILS_REQUIRES=libpci
      AC_DEFINE([HWLOC_HAVE_PCIUTILS], [1], [Define to 1 if you have the pciutils `libpci' library.])
    fi
    # final common PCI enabling
    if test "x$hwloc_pci_happy" = "xyes"; then
      hwloc_components="$hwloc_components pci"
      hwloc_pci_component_maybeplugin=1
    fi
    # don't add LIBS/CFLAGS/REQUIRES yet, depends on plugins

    # OpenCL support
    hwloc_opencl_happy=no
    if test "x$enable_opencl" != "xno"; then
        hwloc_opencl_happy=yes
        AC_CHECK_HEADERS([CL/cl_ext.h], [
	  AC_CHECK_LIB([OpenCL], [clGetDeviceIDs], [HWLOC_OPENCL_LIBS="-lOpenCL"], [hwloc_opencl_happy=no])
        ], [hwloc_opencl_happy=no])
    fi
    AC_SUBST(HWLOC_OPENCL_LIBS)
    # Check if required extensions are available
    if test "x$hwloc_opencl_happy" = "xyes"; then
      tmp_save_CFLAGS="$CFLAGS"
      CFLAGS="$CFLAGS $HWLOC_OPENCL_CFLAGS"
      tmp_save_LIBS="$LIBS"
      LIBS="$LIBS $HWLOC_OPENCL_LIBS"
      AC_CHECK_DECLS([CL_DEVICE_TOPOLOGY_AMD],[hwloc_opencl_amd_happy=yes],[:],[[#include <CL/cl_ext.h>]])
      CFLAGS="$tmp_save_CFLAGS"
      LIBS="$tmp_save_LIBS"
      # We can't do anything without CL_DEVICE_TOPOLOGY_AMD so far, so disable OpenCL entirely if not found
      test "x$hwloc_opencl_amd_happy" != "xyes" && hwloc_opencl_happy=no
    fi
    # If we asked for opencl support but couldn't deliver, fail
    AS_IF([test "$enable_opencl" = "yes" -a "$hwloc_opencl_happy" = "no"],
          [AC_MSG_WARN([Specified --enable-opencl switch, but could not])
           AC_MSG_WARN([find appropriate support])
           AC_MSG_ERROR([Cannot continue])])
    if test "x$hwloc_opencl_happy" = "xyes"; then
      AC_DEFINE([HWLOC_HAVE_OPENCL], [1], [Define to 1 if you have the `OpenCL' library.])
      AC_SUBST([HWLOC_HAVE_OPENCL], [1])
      hwloc_components="$hwloc_components opencl"
      hwloc_opencl_component_maybeplugin=1
    else
      AC_SUBST([HWLOC_HAVE_OPENCL], [0])
    fi
    # don't add LIBS/CFLAGS/REQUIRES yet, depends on plugins

    # CUDA support
    hwloc_have_cuda=no
    hwloc_have_cudart=no
    if test "x$enable_cuda" != "xno"; then
      AC_CHECK_HEADERS([cuda.h], [
        AC_MSG_CHECKING(if CUDA_VERSION >= 3020)
        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#include <cuda.h>
#ifndef CUDA_VERSION
#error CUDA_VERSION undefined
#elif CUDA_VERSION < 3020
#error CUDA_VERSION too old
#endif]], [[int i = 3;]])],
         [AC_MSG_RESULT(yes)
          AC_CHECK_LIB([cuda], [cuInit],
                       [AC_DEFINE([HAVE_CUDA], 1, [Define to 1 if we have -lcuda])
                        hwloc_have_cuda=yes])],
         [AC_MSG_RESULT(no)])])

      AC_CHECK_HEADERS([cuda_runtime_api.h], [
        AC_MSG_CHECKING(if CUDART_VERSION >= 3020)
        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#include <cuda_runtime_api.h>
#ifndef CUDART_VERSION
#error CUDART_VERSION undefined
#elif CUDART_VERSION < 3020
#error CUDART_VERSION too old
#endif]], [[int i = 3;]])],
         [AC_MSG_RESULT(yes)
          AC_CHECK_LIB([cudart], [cudaGetDeviceProperties], [
            HWLOC_CUDA_LIBS="-lcudart"
            AC_SUBST(HWLOC_CUDA_LIBS)
            hwloc_have_cudart=yes
            AC_DEFINE([HWLOC_HAVE_CUDART], [1], [Define to 1 if you have the `cudart' SDK.])
          ])
        ])
      ])

      AS_IF([test "$enable_cuda" = "yes" -a "$hwloc_have_cudart" = "no"],
            [AC_MSG_WARN([Specified --enable-cuda switch, but could not])
             AC_MSG_WARN([find appropriate support])
             AC_MSG_ERROR([Cannot continue])])

      if test "x$hwloc_have_cudart" = "xyes"; then
	hwloc_components="$hwloc_components cuda"
        hwloc_cuda_component_maybeplugin=1
      fi
    fi
    # don't add LIBS/CFLAGS yet, depends on plugins

    # NVML support
    hwloc_nvml_happy=no
    if test "x$enable_nvml" != "xno"; then
	hwloc_nvml_happy=yes
	AC_CHECK_HEADERS([nvml.h], [
	  AC_CHECK_LIB([nvidia-ml], [nvmlInit], [HWLOC_NVML_LIBS="-lnvidia-ml"], [hwloc_nvml_happy=no])
        ], [hwloc_nvml_happy=no])
    fi
    if test "x$hwloc_nvml_happy" = "xyes"; then
      tmp_save_CFLAGS="$CFLAGS"
      CFLAGS="$CFLAGS $HWLOC_NVML_CFLAGS"
      tmp_save_LIBS="$LIBS"
      LIBS="$LIBS $HWLOC_NVML_LIBS"
      AC_CHECK_DECLS([nvmlDeviceGetMaxPcieLinkGeneration],,[:],[[#include <nvml.h>]])
      CFLAGS="$tmp_save_CFLAGS"
      LIBS="$tmp_save_LIBS"
    fi
    AC_SUBST(HWLOC_NVML_LIBS)
    # If we asked for nvml support but couldn't deliver, fail
    AS_IF([test "$enable_nvml" = "yes" -a "$hwloc_nvml_happy" = "no"],
	  [AC_MSG_WARN([Specified --enable-nvml switch, but could not])
	   AC_MSG_WARN([find appropriate support])
	   AC_MSG_ERROR([Cannot continue])])
    if test "x$hwloc_nvml_happy" = "xyes"; then
      AC_DEFINE([HWLOC_HAVE_NVML], [1], [Define to 1 if you have the `NVML' library.])
      AC_SUBST([HWLOC_HAVE_NVML], [1])
      hwloc_components="$hwloc_components nvml"
      hwloc_nvml_component_maybeplugin=1
    else
      AC_SUBST([HWLOC_HAVE_NVML], [0])
    fi
    # don't add LIBS/CFLAGS/REQUIRES yet, depends on plugins

    # GL Support 
    hwloc_gl_happy=no
    if test "x$enable_gl" != "xno"; then
    	hwloc_gl_happy=yes								

        AC_CHECK_HEADERS([X11/Xlib.h], [
          AC_CHECK_LIB([X11], [XOpenDisplay], [:], [hwloc_gl_happy=no])
        ], [hwloc_gl_happy=no])
       
        AC_CHECK_HEADERS([NVCtrl/NVCtrl.h], [
          AC_CHECK_LIB([XNVCtrl], [XNVCTRLQueryTargetAttribute], [:], [hwloc_gl_happy=no], [-lXext])
        ], [hwloc_gl_happy=no])

        if test "x$hwloc_gl_happy" = "xyes"; then
            AC_DEFINE([HWLOC_HAVE_GL], [1], [Define to 1 if you have the GL module components.])
	    HWLOC_GL_LIBS="-lXNVCtrl -lXext -lX11"
	    AC_SUBST(HWLOC_GL_LIBS)
	    HWLOC_GL_REQUIRES="xext x11"
            hwloc_have_gl=yes
	    hwloc_components="$hwloc_components gl"
	    hwloc_gl_component_maybeplugin=1
	else
            AS_IF([test "$enable_gl" = "yes"], [
                AC_MSG_WARN([Specified --enable-gl switch, but could not])
                AC_MSG_WARN([find appropriate support])
                AC_MSG_ERROR([Cannot continue])
            ])
 	fi      
    fi
    # don't add LIBS/CFLAGS yet, depends on plugins
    
    # libxml2 support
    hwloc_libxml2_happy=
    if test "x$enable_libxml2" != "xno"; then
        HWLOC_PKG_CHECK_MODULES([LIBXML2], [libxml-2.0], [xmlNewDoc], 
                                [hwloc_libxml2_happy=yes], 
                                [hwloc_libxml2_happy=no])
    fi
    if test "x$hwloc_libxml2_happy" = "xyes"; then
        HWLOC_LIBXML2_REQUIRES="libxml-2.0"
        AC_DEFINE([HWLOC_HAVE_LIBXML2], [1], [Define to 1 if you have the `libxml2' library.])
        AC_SUBST([HWLOC_HAVE_LIBXML2], [1])

        hwloc_components="$hwloc_components xml_libxml"
        hwloc_xml_libxml_component_maybeplugin=1
    else
        AC_SUBST([HWLOC_HAVE_LIBXML2], [0])
	AS_IF([test "$enable_libxml2" = "yes"],
              [AC_MSG_WARN([--enable-libxml2 requested, but libxml2 was not found])
               AC_MSG_ERROR([Cannot continue])])
    fi
    # don't add LIBS/CFLAGS/REQUIRES yet, depends on plugins

    # Try to compile the cpuid inlines
    AC_MSG_CHECKING([for cpuid])
    old_CPPFLAGS="$CPPFLAGS"
    CPPFLAGS="$CPPFLAGS -I$HWLOC_top_srcdir/include"
    AC_LINK_IFELSE([AC_LANG_PROGRAM([[
        #include <stdio.h>
        #define __hwloc_inline
        #include <private/cpuid.h>
      ]], [[
        if (hwloc_have_cpuid()) {
          unsigned eax = 0, ebx, ecx = 0, edx;
          hwloc_cpuid(&eax, &ebx, &ecx, &edx);
          printf("highest cpuid %x\n", eax);
          return 0;
        }
      ]])],
      [AC_MSG_RESULT([yes])
       AC_DEFINE(HWLOC_HAVE_CPUID, 1, [Define to 1 if you have cpuid])
       hwloc_have_cpuid=yes],
      [AC_MSG_RESULT([no])])
    if test "x$hwloc_have_cpuid" = xyes; then
      hwloc_components="$hwloc_components x86"
    fi
    CPPFLAGS="$old_CPPFLAGS"

    # Components require pthread_mutex, see if it needs -lpthread
    hwloc_pthread_mutex_happy=no
    # Try without explicit -lpthread first
    AC_CHECK_FUNC([pthread_mutex_lock],
      [hwloc_pthread_mutex_happy=yes
       HWLOC_LIBS_PRIVATE="$HWLOC_LIBS_PRIVATE -lpthread"
      ],
      [AC_MSG_CHECKING([for pthread_mutex_lock with -lpthread])
       # Try again with explicit -lpthread, but don't use AC_CHECK_FUNC to avoid the cache
       tmp_save_LIBS=$LIBS
       LIBS="$LIBS -lpthread"
       AC_LINK_IFELSE([AC_LANG_CALL([], [pthread_mutex_lock])],
         [hwloc_pthread_mutex_happy=yes
          HWLOC_LIBS="$HWLOC_LIBS -lpthread"
         ])
       AC_MSG_RESULT([$hwloc_pthread_mutex_happy])
       LIBS="$tmp_save_LIBS"
      ])
    AS_IF([test "x$hwloc_pthread_mutex_happy" = "xyes"],
      [AC_DEFINE([HWLOC_HAVE_PTHREAD_MUTEX], 1, [Define to 1 if pthread mutexes are available])])

    AS_IF([test "x$hwloc_pthread_mutex_happy" != xyes -a "x$hwloc_windows" != xyes],
      [AC_MSG_WARN([pthread_mutex_lock not available, required for thread-safe initialization on non-Windows platforms.])
       AC_MSG_WARN([Please report this to the hwloc-devel mailing list.])
       AC_MSG_ERROR([Cannot continue])])

    #
    # Now enable registration of listed components
    #

    # Plugin support
    AC_MSG_CHECKING([if plugin support is enabled])
    # Plugins (even core support) are totally disabled by default
    AS_IF([test "x$enable_plugins" = "x"], [enable_plugins=no])
    AS_IF([test "x$enable_plugins" != "xno"], [hwloc_have_plugins=yes], [hwloc_have_plugins=no])
    AC_MSG_RESULT([$hwloc_have_plugins])
    AS_IF([test "x$hwloc_have_plugins" = "xyes"],
          [AC_DEFINE([HWLOC_HAVE_PLUGINS], 1, [Define to 1 if the hwloc library should support dynamically-loaded plugins])])

    # Some sanity checks about plugins
    # libltdl doesn't work on AIX as of 2.4.2
    AS_IF([test "x$enable_plugins" = "xyes" -a "x$hwloc_aix" = "xyes"],
      [AC_MSG_WARN([libltdl does not work on AIX, plugins support cannot be enabled.])
       AC_MSG_ERROR([Cannot continue])])
    # posix linkers don't work well with plugins and windows dll constraints
    AS_IF([test "x$enable_plugins" = "xyes" -a "x$hwloc_windows" = "xyes"],
      [AC_MSG_WARN([Plugins not supported on non-native Windows build, plugins support cannot be enabled.])
       AC_MSG_ERROR([Cannot continue])])

    # If we want plugins, look for ltdl.h and libltdl
    if test "x$hwloc_have_plugins" = xyes; then
      AC_CHECK_HEADER([ltdl.h], [],
	[AC_MSG_WARN([Plugin support requested, but could not find ltdl.h])
	 AC_MSG_ERROR([Cannot continue])])
      AC_CHECK_LIB([ltdl], [lt_dlopenext],
	[HWLOC_LIBS="$HWLOC_LIBS -lltdl"],
	[AC_MSG_WARN([Plugin support requested, but could not find libltdl])
	 AC_MSG_ERROR([Cannot continue])])
      # Add libltdl static-build dependencies to hwloc.pc
      HWLOC_CHECK_LTDL_DEPS
    fi

    # Static components output file
    hwloc_static_components_dir=${HWLOC_top_builddir}/src
    mkdir -p ${hwloc_static_components_dir}
    hwloc_static_components_file=${hwloc_static_components_dir}/static-components.h
    rm -f ${hwloc_static_components_file}

    # Make $enable_plugins easier to use (it contains either "yes" (all) or a list of <name>)
    HWLOC_PREPARE_FILTER_COMPONENTS([$enable_plugins])
    # Now we have some hwloc_<name>_component_wantplugin=1

    # See which core components want plugin and support it
    HWLOC_FILTER_COMPONENTS
    # Now we have some hwloc_<name>_component=plugin/static
    # and hwloc_static/plugin_components
    AC_MSG_CHECKING([components to build statically])
    AC_MSG_RESULT($hwloc_static_components)
    HWLOC_LIST_STATIC_COMPONENTS([$hwloc_static_components_file], [$hwloc_static_components])
    AC_MSG_CHECKING([components to build as plugins])
    AC_MSG_RESULT([$hwloc_plugin_components])

    AS_IF([test "$hwloc_pci_component" = "static"],
          [HWLOC_LIBS="$HWLOC_LIBS $HWLOC_PCIUTILS_LIBS $HWLOC_PCIACCESS_LIBS"
           HWLOC_CFLAGS="$HWLOC_CFLAGS $HWLOC_PCIUTILS_CFLAGS $HWLOC_PCIACCESS_CFLAGS"
           HWLOC_REQUIRES="$HWLOC_PCIUTILS_REQUIRES $HWLOC_PCIACCESS_REQUIRES $HWLOC_REQUIRES"])
    AS_IF([test "$hwloc_opencl_component" = "static"],
          [HWLOC_LIBS="$HWLOC_LIBS $HWLOC_OPENCL_LIBS"
           HWLOC_CFLAGS="$HWLOC_CFLAGS $HWLOC_OPENCL_CFLAGS"
           HWLOC_REQUIRES="$HWLOC_OPENCL_REQUIRES $HWLOC_REQUIRES"])
    AS_IF([test "$hwloc_cuda_component" = "static"],
          [HWLOC_LIBS="$HWLOC_LIBS $HWLOC_CUDA_LIBS"
           HWLOC_CFLAGS="$HWLOC_CFLAGS $HWLOC_CUDA_CFLAGS"
           HWLOC_REQUIRES="$HWLOC_CUDA_REQUIRES $HWLOC_REQUIRES"])
    AS_IF([test "$hwloc_nvml_component" = "static"],
          [HWLOC_LIBS="$HWLOC_LIBS $HWLOC_NVML_LIBS"
           HWLOC_CFLAGS="$HWLOC_CFLAGS $HWLOC_NVML_CFLAGS"
           HWLOC_REQUIRES="$HWLOC_NVML_REQUIRES $HWLOC_REQUIRES"])
    AS_IF([test "$hwloc_gl_component" = "static"],
          [HWLOC_LIBS="$HWLOC_LIBS $HWLOC_GL_LIBS"
           HWLOC_CFLAGS="$HWLOC_CFLAGS $HWLOC_GL_CFLAGS"
           HWLOC_REQUIRES="$HWLOC_GL_REQUIRES $HWLOC_REQUIRES"])
    AS_IF([test "$hwloc_xml_libxml_component" = "static"],
          [HWLOC_LIBS="$HWLOC_LIBS $HWLOC_LIBXML2_LIBS"
           HWLOC_CFLAGS="$HWLOC_CFLAGS $HWLOC_LIBXML2_CFLAGS"
           HWLOC_REQUIRES="$HWLOC_LIBXML2_REQUIRES $HWLOC_REQUIRES"])

    #
    # Setup HWLOC's C, CPP, and LD flags, and LIBS
    #
    AC_SUBST(HWLOC_REQUIRES)
    AC_SUBST(HWLOC_CFLAGS)
    HWLOC_CPPFLAGS='-I$(HWLOC_top_builddir)/include -I$(HWLOC_top_srcdir)/include'
    AC_SUBST(HWLOC_CPPFLAGS)
    AC_SUBST(HWLOC_LDFLAGS)
    AC_SUBST(HWLOC_LIBS)
    AC_SUBST(HWLOC_LIBS_PRIVATE)

    # Set these values explicitly for embedded builds.  Exporting
    # these values through *_EMBEDDED_* values gives us the freedom to
    # do something different someday if we ever need to.  There's no
    # need to fill these values in unless we're in embedded mode.
    # Indeed, if we're building in embedded mode, we want HWLOC_LIBS
    # to be empty so that nothing is linked into libhwloc_embedded.la
    # itself -- only the upper-layer will link in anything required.

    AS_IF([test "$hwloc_mode" = "embedded"],
          [HWLOC_EMBEDDED_CFLAGS=$HWLOC_CFLAGS
           HWLOC_EMBEDDED_CPPFLAGS=$HWLOC_CPPFLAGS
           HWLOC_EMBEDDED_LDADD='$(HWLOC_top_builddir)/src/libhwloc_embedded.la'
           HWLOC_EMBEDDED_LIBS=$HWLOC_LIBS
           HWLOC_LIBS=])
    AC_SUBST(HWLOC_EMBEDDED_CFLAGS)
    AC_SUBST(HWLOC_EMBEDDED_CPPFLAGS)
    AC_SUBST(HWLOC_EMBEDDED_LDADD)
    AC_SUBST(HWLOC_EMBEDDED_LIBS)

    # Always generate these files
    AC_CONFIG_FILES(
        hwloc_config_prefix[Makefile]
        hwloc_config_prefix[include/Makefile]
        hwloc_config_prefix[src/Makefile ]
    )

    # Cleanup
    AC_LANG_POP

    # Success
    $2
])
m4trace:opal/mca/hwloc/hwloc172/hwloc/config/hwloc.m4:1123: -1- AC_DEFUN([HWLOC_SET_SYMBOL_PREFIX], [
    hwloc_symbol_prefix_value=$1
])
m4trace:opal/mca/hwloc/hwloc172/hwloc/config/hwloc.m4:1131: -1- AC_DEFUN([HWLOC_DO_AM_CONDITIONALS], [
    AS_IF([test "$hwloc_did_am_conditionals" != "yes"],[
        AM_CONDITIONAL([HWLOC_BUILD_STANDALONE], [test "$hwloc_mode" = "standalone"])

        AM_CONDITIONAL([HWLOC_HAVE_GCC], [test "x$GCC" = "xyes"])
        AM_CONDITIONAL([HWLOC_HAVE_MS_LIB], [test "x$HWLOC_MS_LIB" != "x"])
        AM_CONDITIONAL([HWLOC_HAVE_OPENAT], [test "x$hwloc_have_openat" = "xyes"])
        AM_CONDITIONAL([HWLOC_HAVE_LINUX_LIBNUMA],
                       [test "x$hwloc_have_linux_libnuma" = "xyes"])
        AM_CONDITIONAL([HWLOC_HAVE_SCHED_SETAFFINITY],
                       [test "x$hwloc_have_sched_setaffinity" = "xyes"])
        AM_CONDITIONAL([HWLOC_HAVE_PTHREAD],
                       [test "x$hwloc_have_pthread" = "xyes"])
        AM_CONDITIONAL([HWLOC_HAVE_LIBIBVERBS], 
                       [test "x$hwloc_have_libibverbs" = "xyes"])
	AM_CONDITIONAL([HWLOC_HAVE_CUDA],
		       [test "x$hwloc_have_cuda" = "xyes"])
	AM_CONDITIONAL([HWLOC_HAVE_GL],
		       [test "x$hwloc_have_gl" = "xyes"])
	AM_CONDITIONAL([HWLOC_HAVE_MYRIEXPRESS],
		       [test "x$hwloc_have_myriexpress" = "xyes"])
	AM_CONDITIONAL([HWLOC_HAVE_CUDART],
		       [test "x$hwloc_have_cudart" = "xyes"])
        AM_CONDITIONAL([HWLOC_HAVE_LIBXML2], [test "$hwloc_libxml2_happy" = "yes"])
        AM_CONDITIONAL([HWLOC_HAVE_CAIRO], [test "$hwloc_cairo_happy" = "yes"])
        AM_CONDITIONAL([HWLOC_HAVE_PCI], [test "$hwloc_pci_happy" = "yes"])
        AM_CONDITIONAL([HWLOC_HAVE_OPENCL], [test "$hwloc_opencl_happy" = "yes"])
        AM_CONDITIONAL([HWLOC_HAVE_NVML], [test "$hwloc_nvml_happy" = "yes"])
        AM_CONDITIONAL([HWLOC_HAVE_SET_MEMPOLICY], [test "x$enable_set_mempolicy" != "xno"])
        AM_CONDITIONAL([HWLOC_HAVE_MBIND], [test "x$enable_mbind" != "xno"])
        AM_CONDITIONAL([HWLOC_HAVE_BUNZIPP], [test "x$BUNZIPP" != "xfalse"])

        AM_CONDITIONAL([HWLOC_BUILD_DOXYGEN],
                       [test "x$hwloc_generate_doxs" = "xyes"])
        AM_CONDITIONAL([HWLOC_BUILD_README], 
                       [test "x$hwloc_generate_readme" = "xyes" -a \( "x$hwloc_install_doxs" = "xyes" -o "x$hwloc_generate_doxs" = "xyes" \) ])
        AM_CONDITIONAL([HWLOC_INSTALL_DOXYGEN], 
                       [test "x$hwloc_install_doxs" = "xyes"])

        AM_CONDITIONAL([HWLOC_HAVE_LINUX], [test "x$hwloc_linux" = "xyes"])
        AM_CONDITIONAL([HWLOC_HAVE_BGQ], [test "x$hwloc_bgq" = "xyes"])
        AM_CONDITIONAL([HWLOC_HAVE_IRIX], [test "x$hwloc_irix" = "xyes"])
        AM_CONDITIONAL([HWLOC_HAVE_DARWIN], [test "x$hwloc_darwin" = "xyes"])
        AM_CONDITIONAL([HWLOC_HAVE_FREEBSD], [test "x$hwloc_freebsd" = "xyes"])
        AM_CONDITIONAL([HWLOC_HAVE_NETBSD], [test "x$hwloc_netbsd" = "xyes"])
        AM_CONDITIONAL([HWLOC_HAVE_SOLARIS], [test "x$hwloc_solaris" = "xyes"])
        AM_CONDITIONAL([HWLOC_HAVE_AIX], [test "x$hwloc_aix" = "xyes"])
        AM_CONDITIONAL([HWLOC_HAVE_OSF], [test "x$hwloc_osf" = "xyes"])
        AM_CONDITIONAL([HWLOC_HAVE_HPUX], [test "x$hwloc_hpux" = "xyes"])
        AM_CONDITIONAL([HWLOC_HAVE_WINDOWS], [test "x$hwloc_windows" = "xyes"])
        AM_CONDITIONAL([HWLOC_HAVE_MINGW32], [test "x$target_os" = "xmingw32"])

        AM_CONDITIONAL([HWLOC_HAVE_X86_32], [test "x$hwloc_x86_32" = "xyes"])
        AM_CONDITIONAL([HWLOC_HAVE_X86_64], [test "x$hwloc_x86_64" = "xyes"])
        AM_CONDITIONAL([HWLOC_HAVE_CPUID], [test "x$hwloc_have_cpuid" = "xyes"])

        AM_CONDITIONAL([HWLOC_HAVE_PLUGINS], [test "x$hwloc_have_plugins" = "xyes"])
        AM_CONDITIONAL([HWLOC_PCI_BUILD_STATIC], [test "x$hwloc_pci_component" = "xstatic"])
        AM_CONDITIONAL([HWLOC_OPENCL_BUILD_STATIC], [test "x$hwloc_opencl_component" = "xstatic"])
        AM_CONDITIONAL([HWLOC_CUDA_BUILD_STATIC], [test "x$hwloc_cuda_component" = "xstatic"])
        AM_CONDITIONAL([HWLOC_NVML_BUILD_STATIC], [test "x$hwloc_nvml_component" = "xstatic"])
        AM_CONDITIONAL([HWLOC_GL_BUILD_STATIC], [test "x$hwloc_gl_component" = "xstatic"])
        AM_CONDITIONAL([HWLOC_XML_LIBXML_BUILD_STATIC], [test "x$hwloc_xml_libxml_component" = "xstatic"])

        AM_CONDITIONAL([HWLOC_HAVE_CXX], [test "x$hwloc_have_cxx" = "xyes"])
    ])
    hwloc_did_am_conditionals=yes
])
m4trace:opal/mca/hwloc/hwloc172/hwloc/config/hwloc.m4:1202: -1- AC_DEFUN([_HWLOC_CHECK_DIFF_U], [
  AC_MSG_CHECKING([whether diff accepts -u])
  if diff -u /dev/null /dev/null 2> /dev/null
  then
    HWLOC_DIFF_U="-u"
  else
    HWLOC_DIFF_U=""
  fi
  AC_SUBST([HWLOC_DIFF_U])
  AC_MSG_RESULT([$HWLOC_DIFF_U])
])
m4trace:opal/mca/hwloc/hwloc172/hwloc/config/hwloc.m4:1214: -1- AC_DEFUN([_HWLOC_CHECK_DIFF_W], [
  AC_MSG_CHECKING([whether diff accepts -w])
  if diff -w /dev/null /dev/null 2> /dev/null
  then
    HWLOC_DIFF_W="-w"
  else
    HWLOC_DIFF_W=""
  fi
  AC_SUBST([HWLOC_DIFF_W])
  AC_MSG_RESULT([$HWLOC_DIFF_W])
])
m4trace:opal/mca/hwloc/hwloc172/hwloc/config/hwloc.m4:1232: -1- AC_DEFUN([_HWLOC_CHECK_DECL], [
  AC_MSG_CHECKING([whether function $1 is declared])
  AC_REQUIRE([AC_PROG_CC])
  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([AC_INCLUDES_DEFAULT([$4])],[$1(1,2,3,4,5,6,7,8,9,10);])],
    [AC_MSG_RESULT([no])
     $3],
    [AC_MSG_RESULT([yes])
     $2]
  )
])
m4trace:opal/mca/hwloc/hwloc172/hwloc/config/hwloc.m4:1249: -1- AC_DEFUN([_HWLOC_CHECK_DECLS], [
  HWLOC_CHECK_DECL([$1], [ac_have_decl=1], [ac_have_decl=0], [$4])
  AC_DEFINE_UNQUOTED(AS_TR_CPP([HAVE_DECL_$1]), [$ac_have_decl],
    [Define to 1 if you have the declaration of `$1', and to 0 if you don't])
])
m4trace:opal/mca/hwloc/hwloc172/hwloc/config/hwloc.m4:1260: -1- AC_DEFUN([HWLOC_CHECK_LTDL_DEPS], [
  # save variables that we'll modify below
  save_lt_cv_dlopen="$lt_cv_dlopen"
  save_lt_cv_dlopen_libs="$lt_cv_dlopen_libs"
  save_lt_cv_dlopen_self="$lt_cv_dlopen_self"
  ###########################################################
  # code stolen from LT_SYS_DLOPEN_SELF in libtool.m4
  case $host_os in
  beos*)
    lt_cv_dlopen="load_add_on"
    lt_cv_dlopen_libs=
    lt_cv_dlopen_self=yes
    ;;

  mingw* | pw32* | cegcc*)
    lt_cv_dlopen="LoadLibrary"
    lt_cv_dlopen_libs=
    ;;

  cygwin*)
    lt_cv_dlopen="dlopen"
    lt_cv_dlopen_libs=
    ;;

  darwin*)
  # if libdl is installed we need to link against it
    AC_CHECK_LIB([dl], [dlopen],
                [lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-ldl"],[
    lt_cv_dlopen="dyld"
    lt_cv_dlopen_libs=
    lt_cv_dlopen_self=yes
    ])
    ;;

  *)
    AC_CHECK_FUNC([shl_load],
          [lt_cv_dlopen="shl_load"],
      [AC_CHECK_LIB([dld], [shl_load],
            [lt_cv_dlopen="shl_load" lt_cv_dlopen_libs="-ldld"],
        [AC_CHECK_FUNC([dlopen],
              [lt_cv_dlopen="dlopen"],
          [AC_CHECK_LIB([dl], [dlopen],
                [lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-ldl"],
            [AC_CHECK_LIB([svld], [dlopen],
                  [lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-lsvld"],
              [AC_CHECK_LIB([dld], [dld_link],
                    [lt_cv_dlopen="dld_link" lt_cv_dlopen_libs="-ldld"])
              ])
            ])
          ])
        ])
      ])
    ;;
  esac
  # end of code stolen from LT_SYS_DLOPEN_SELF in libtool.m4
  ###########################################################

  HWLOC_LIBS_PRIVATE="$HWLOC_LIBS_PRIVATE $lt_cv_dlopen_libs"

  # restore modified variable in case the actual libtool code uses them
  lt_cv_dlopen="$save_lt_cv_dlopen"
  lt_cv_dlopen_libs="$save_lt_cv_dlopen_libs"
  lt_cv_dlopen_self="$save_lt_cv_dlopen_self"
])
m4trace:opal/mca/hwloc/hwloc172/configure.m4:28: -1- m4_include([opal/mca/hwloc/hwloc172/hwloc/config/hwloc_pkg.m4])
m4trace:opal/mca/hwloc/hwloc172/hwloc/config/hwloc_pkg.m4:42: -1- AC_DEFUN([HWLOC_PKG_PROG_PKG_CONFIG], [m4_pattern_forbid([^_?PKG_[A-Z_]+$])
m4_pattern_allow([^PKG_CONFIG(_PATH)?$])
AC_ARG_VAR([PKG_CONFIG], [path to pkg-config utility])dnl

if test "x$ac_cv_env_PKG_CONFIG_set" != "xset"; then
	AC_PATH_TOOL([PKG_CONFIG], [pkg-config])
fi
if test -n "$PKG_CONFIG"; then
	HWLOC_pkg_min_version=m4_default([$1], [0.9.0])
	AC_MSG_CHECKING([pkg-config is at least version $HWLOC_pkg_min_version])
	if $PKG_CONFIG --atleast-pkgconfig-version $HWLOC_pkg_min_version; then
		AC_MSG_RESULT([yes])
	else
		AC_MSG_RESULT([no])
		PKG_CONFIG=""
	fi
		
fi[]dnl
])
m4trace:opal/mca/hwloc/hwloc172/hwloc/config/hwloc_pkg.m4:73: -1- AC_DEFUN([HWLOC_PKG_CHECK_EXISTS], [AC_REQUIRE([HWLOC_PKG_PROG_PKG_CONFIG])dnl
if test -n "$PKG_CONFIG" && \
    AC_RUN_LOG([$PKG_CONFIG --exists --silence-errors "$1"]); then
    m4_ifval([$2], [$2], [:])
    m4_ifvaln([$3], [else
                     $3])dnl
fi])
m4trace:opal/mca/hwloc/hwloc172/hwloc/config/hwloc_pkg.m4:101: -1- AC_DEFUN([_HWLOC_PKG_SHORT_ERRORS_SUPPORTED], [AC_REQUIRE([HWLOC_PKG_PROG_PKG_CONFIG])
if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
        HWLOC_pkg_short_errors_supported=yes
else
        HWLOC_pkg_short_errors_supported=no
fi[]dnl
])
m4trace:opal/mca/hwloc/hwloc172/hwloc/config/hwloc_pkg.m4:121: -1- AC_DEFUN([HWLOC_PKG_CHECK_MODULES], [
    AC_REQUIRE([HWLOC_PKG_PROG_PKG_CONFIG])dnl
    AC_ARG_VAR([HWLOC_]$1[_CFLAGS], [C compiler flags for $1, overriding pkg-config])dnl
    AC_ARG_VAR([HWLOC_]$1[_LIBS], [linker flags for $1, overriding pkg-config])dnl

    HWLOC_pkg_failed=no
    AC_MSG_CHECKING([for $1])

    _HWLOC_PKG_CONFIG([HWLOC_][$1][_CFLAGS], [cflags], [$2])
    _HWLOC_PKG_CONFIG([HWLOC_][$1][_LIBS], [libs], [$2])

    m4_define([_HWLOC_PKG_TEXT], [Alternatively, you may set the environment variables HWLOC_[]$1[]_CFLAGS
and HWLOC_[]$1[]_LIBS to avoid the need to call pkg-config.
See the pkg-config man page for more details.])

    # Check for failure of pkg-config
    if test $HWLOC_pkg_failed = yes; then
        _HWLOC_PKG_SHORT_ERRORS_SUPPORTED
        if test $HWLOC_pkg_short_errors_supported = yes; then
            HWLOC_[]$1[]_PKG_ERRORS=`$PKG_CONFIG --short-errors --errors-to-stdout --print-errors "$2" 2>&1`
        else 
            HWLOC_[]$1[]_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "$2" 2>&1`
        fi
        # Put the nasty error message in config.log where it belongs
	echo "$HWLOC_[]$1[]_PKG_ERRORS" >&AS_MESSAGE_LOG_FD

	ifelse([$5], , [AC_MSG_ERROR(dnl
[Package requirements ($2) were not met:

$HWLOC_$1_PKG_ERRORS

Consider adjusting the PKG_CONFIG_PATH environment variable if you
installed software in a non-standard prefix.

_HWLOC_PKG_TEXT
])],
		[AC_MSG_RESULT([no])
                $5])
    elif test $HWLOC_pkg_failed = untried; then
        ifelse([$5], , [AC_MSG_FAILURE(dnl
[The pkg-config script could not be found or is too old.  Make sure it
is in your PATH or set the PKG_CONFIG environment variable to the full
path to pkg-config.

_HWLOC_PKG_TEXT

To get pkg-config, see <http://pkg-config.freedesktop.org/>.])],
		[AC_MSG_RESULT([cannot check without pkg-config])
		$5])
    else
        AC_MSG_RESULT([yes])

        # If we got good results from pkg-config, check that they
        # actually work (i.e., that we can link against the resulting
        # $LIBS).  The canonical example why we do this is if
        # pkg-config returns 64 bit libraries but ./configure was run
        # with CFLAGS=-m32 LDFLAGS=-m32.  pkg-config gave us valid
        # results, but we'll fail if we try to link.  So detect that
        # failure now.
        hwloc_cflags_save=$CFLAGS
        hwloc_libs_save=$LIBS
        CFLAGS="$CFLAGS $HWLOC_pkg_cv_HWLOC_[]$1[]_CFLAGS"
        LIBS="$LIBS $HWLOC_pkg_cv_HWLOC_[]$1[]_LIBS"
        AC_CHECK_FUNC([$3], [hwloc_result=yes], [hwloc_result=no])
        CFLAGS=$hwloc_cflags_save
        LIBS=$hwloc_libs_save

        AC_MSG_CHECKING([for final $1 support])
        AS_IF([test "$hwloc_result" = "yes"],
              [HWLOC_[]$1[]_CFLAGS=$HWLOC_pkg_cv_HWLOC_[]$1[]_CFLAGS
               HWLOC_[]$1[]_LIBS=$HWLOC_pkg_cv_HWLOC_[]$1[]_LIBS
               AC_MSG_RESULT([yes])            
               ifelse([$4], , :, [$4])],
              [AC_MSG_RESULT([no])
               ifelse([$5], , :, [$5])])
    fi[]dnl
])
m4trace:opal/mca/hwloc/hwloc172/configure.m4:29: -1- m4_include([opal/mca/hwloc/hwloc172/hwloc/config/hwloc_check_attributes.m4])
m4trace:opal/mca/hwloc/hwloc172/hwloc/config/hwloc_check_attributes.m4:60: -1- AC_DEFUN([_HWLOC_ATTRIBUTE_FAIL_SEARCH], [
    # Be safe for systems that have ancient Autoconf's (e.g., RHEL5)
    m4_ifdef([AC_PROG_GREP], 
             [AC_REQUIRE([AC_PROG_GREP])],
             [GREP=grep])

    if test -s conftest.err ; then
        for i in ignore skip ; do
            $GREP -iq $i conftest.err
            if test "$?" = "0" ; then
                hwloc_cv___attribute__[$1]=0
                break;
            fi
        done
    fi
])
m4trace:opal/mca/hwloc/hwloc172/hwloc/config/hwloc_check_attributes.m4:93: -1- AC_DEFUN([_HWLOC_CHECK_SPECIFIC_ATTRIBUTE], [
    AC_MSG_CHECKING([for __attribute__([$1])])
    AC_CACHE_VAL(hwloc_cv___attribute__[$1], [
        #
        # Try to compile using the C compiler
        #
        AC_TRY_COMPILE([$2],[],
                       [
                        #
                        # In case we did succeed: Fine, but was this due to the
                        # attribute being ignored/skipped? Grep for IgNoRe/skip in conftest.err
                        # and if found, reset the hwloc_cv__attribute__var=0
                        #
                        hwloc_cv___attribute__[$1]=1
                        _HWLOC_ATTRIBUTE_FAIL_SEARCH([$1])
                       ],
                       [hwloc_cv___attribute__[$1]=0])
        
        #
        # If the attribute is supported by both compilers,
        # try to recompile a *cross-check*, IFF defined.
        #
        if test '(' "$hwloc_cv___attribute__[$1]" = "1" -a "[$3]" != "" ')' ; then
            ac_c_werror_flag_safe=$ac_c_werror_flag
            ac_c_werror_flag="yes"
            CFLAGS_safe=$CFLAGS
            CFLAGS="$CFLAGS [$4]"

            AC_TRY_COMPILE([$3],
                [
                 int i=4711;
                 i=usage(&i);
                ],
                [hwloc_cv___attribute__[$1]=0],
                [
                 #
                 # In case we did NOT succeed: Fine, but was this due to the
                 # attribute being ignored? Grep for IgNoRe in conftest.err
                 # and if found, reset the hwloc_cv__attribute__var=0
                 #
                 hwloc_cv___attribute__[$1]=1
                 _HWLOC_ATTRIBUTE_FAIL_SEARCH([$1])
                ])

            ac_c_werror_flag=$ac_c_werror_flag_safe
            CFLAGS=$CFLAGS_safe
        fi
    ])

    if test "$hwloc_cv___attribute__[$1]" = "1" ; then
        AC_MSG_RESULT([yes])
    else
        AC_MSG_RESULT([no])
    fi
])
m4trace:opal/mca/hwloc/hwloc172/hwloc/config/hwloc_check_attributes.m4:174: -1- AC_DEFUN([_HWLOC_CHECK_ATTRIBUTES], [
  AC_MSG_CHECKING(for __attribute__)

  AC_CACHE_VAL(hwloc_cv___attribute__, [
    AC_TRY_COMPILE(
      [#include <stdlib.h>
       /* Check for the longest available __attribute__ (since gcc-2.3) */
       struct foo {
           char a;
           int x[2] __attribute__ ((__packed__));
        };
      ],
      [],
      [hwloc_cv___attribute__=1],
      [hwloc_cv___attribute__=0],
    )

    if test "$hwloc_cv___attribute__" = "1" ; then
        AC_TRY_COMPILE(
          [#include <stdlib.h>
           /* Check for the longest available __attribute__ (since gcc-2.3) */
           struct foo {
               char a;
               int x[2] __attribute__ ((__packed__));
            };
          ],
          [],
          [hwloc_cv___attribute__=1],
          [hwloc_cv___attribute__=0],
        )
    fi
    ])
  AC_DEFINE_UNQUOTED(HWLOC_HAVE_ATTRIBUTE, [$hwloc_cv___attribute__],
                     [Whether your compiler has __attribute__ or not])

#
# Now that we know the compiler support __attribute__ let's check which kind of
# attributed are supported.
#
  if test "$hwloc_cv___attribute__" = "0" ; then
    AC_MSG_RESULT([no])
    hwloc_cv___attribute__aligned=0
    hwloc_cv___attribute__always_inline=0
    hwloc_cv___attribute__cold=0
    hwloc_cv___attribute__const=0
    hwloc_cv___attribute__deprecated=0
    hwloc_cv___attribute__format=0
    hwloc_cv___attribute__hot=0
    hwloc_cv___attribute__malloc=0
    hwloc_cv___attribute__may_alias=0
    hwloc_cv___attribute__no_instrument_function=0
    hwloc_cv___attribute__nonnull=0
    hwloc_cv___attribute__noreturn=0
    hwloc_cv___attribute__packed=0
    hwloc_cv___attribute__pure=0
    hwloc_cv___attribute__sentinel=0
    hwloc_cv___attribute__unused=0
    hwloc_cv___attribute__warn_unused_result=0
    hwloc_cv___attribute__weak_alias=0
  else
    AC_MSG_RESULT([yes])

    _HWLOC_CHECK_SPECIFIC_ATTRIBUTE([aligned],
        [struct foo { char text[4]; }  __attribute__ ((__aligned__(8)));],
        [],
        [])

    #
    # Ignored by PGI-6.2.5; -- recognized by output-parser
    #
    _HWLOC_CHECK_SPECIFIC_ATTRIBUTE([always_inline],
        [int foo (int arg) __attribute__ ((__always_inline__));],
        [],
        [])

    _HWLOC_CHECK_SPECIFIC_ATTRIBUTE([cold],
        [
         int foo(int arg1, int arg2) __attribute__ ((__cold__));
         int foo(int arg1, int arg2) { return arg1 * arg2 + arg1; }
        ],
        [],
        [])

    _HWLOC_CHECK_SPECIFIC_ATTRIBUTE([const],
        [
         int foo(int arg1, int arg2) __attribute__ ((__const__));
         int foo(int arg1, int arg2) { return arg1 * arg2 + arg1; }
        ],
        [],
        [])


    _HWLOC_CHECK_SPECIFIC_ATTRIBUTE([deprecated],
        [
         int foo(int arg1, int arg2) __attribute__ ((__deprecated__));
         int foo(int arg1, int arg2) { return arg1 * arg2 + arg1; }
        ],
        [],
        [])


    HWLOC_ATTRIBUTE_CFLAGS=
    case "$hwloc_c_vendor" in
        gnu)
            HWLOC_ATTRIBUTE_CFLAGS="-Wall"
            ;;
        intel)
            # we want specifically the warning on format string conversion
            HWLOC_ATTRIBUTE_CFLAGS="-we181"
            ;;
    esac
    _HWLOC_CHECK_SPECIFIC_ATTRIBUTE([format],
        [
         int this_printf (void *my_object, const char *my_format, ...) __attribute__ ((__format__ (__printf__, 2, 3)));
        ],
        [
         static int usage (int * argument);
         extern int this_printf (int arg1, const char *my_format, ...) __attribute__ ((__format__ (__printf__, 2, 3)));

         static int usage (int * argument) {
             return this_printf (*argument, "%d", argument); /* This should produce a format warning */
         }
         /* The autoconf-generated main-function is int main(), which produces a warning by itself */
         int main(void);
        ],
        [$HWLOC_ATTRIBUTE_CFLAGS])

    _HWLOC_CHECK_SPECIFIC_ATTRIBUTE([hot],
        [
         int foo(int arg1, int arg2) __attribute__ ((__hot__));
         int foo(int arg1, int arg2) { return arg1 * arg2 + arg1; }
        ],
        [],
        [])

    _HWLOC_CHECK_SPECIFIC_ATTRIBUTE([malloc],
        [
#ifdef HAVE_STDLIB_H
#  include <stdlib.h>
#endif
         int * foo(int arg1) __attribute__ ((__malloc__));
         int * foo(int arg1) { return (int*) malloc(arg1); }
        ],
        [],
        [])


    #
    # Attribute may_alias: No suitable cross-check available, that works for non-supporting compilers
    # Ignored by intel-9.1.045 -- turn off with -wd1292
    # Ignored by PGI-6.2.5; ignore not detected due to missing cross-check
    #
    _HWLOC_CHECK_SPECIFIC_ATTRIBUTE([may_alias],
        [int * p_value __attribute__ ((__may_alias__));],
        [],
        [])


    _HWLOC_CHECK_SPECIFIC_ATTRIBUTE([no_instrument_function],
        [int * foo(int arg1) __attribute__ ((__no_instrument_function__));],
        [],
        [])


    #
    # Attribute nonnull:
    # Ignored by intel-compiler 9.1.045 -- recognized by cross-check
    # Ignored by PGI-6.2.5 (pgCC) -- recognized by cross-check
    #
    HWLOC_ATTRIBUTE_CFLAGS=
    case "$hwloc_c_vendor" in
        gnu)
            HWLOC_ATTRIBUTE_CFLAGS="-Wall"
            ;;
        intel)
            # we do not want to get ignored attributes warnings, but rather real warnings
            HWLOC_ATTRIBUTE_CFLAGS="-wd1292"
            ;;
    esac
    _HWLOC_CHECK_SPECIFIC_ATTRIBUTE([nonnull],
        [
         int square(int *arg) __attribute__ ((__nonnull__));
         int square(int *arg) { return *arg; }
        ],
        [
         static int usage(int * argument);
         int square(int * argument) __attribute__ ((__nonnull__));
         int square(int * argument) { return (*argument) * (*argument); }

         static int usage(int * argument) {
             return square( ((void*)0) );    /* This should produce an argument must be nonnull warning */
         }
         /* The autoconf-generated main-function is int main(), which produces a warning by itself */
         int main(void);
        ],
        [$HWLOC_ATTRIBUTE_CFLAGS])


    _HWLOC_CHECK_SPECIFIC_ATTRIBUTE([noreturn],
        [
#ifdef HAVE_UNISTD_H
#  include <unistd.h>
#endif
#ifdef HAVE_STDLIB_H
#  include <stdlib.h>
#endif
         void fatal(int arg1) __attribute__ ((__noreturn__));
         void fatal(int arg1) { exit(arg1); }
        ],
        [],
        [])

    _HWLOC_CHECK_SPECIFIC_ATTRIBUTE([packed],
        [
         struct foo {
             char a;
             int x[2] __attribute__ ((__packed__));
         };
        ],
        [],
        [])

    _HWLOC_CHECK_SPECIFIC_ATTRIBUTE([pure],
        [
         int square(int arg) __attribute__ ((__pure__));
         int square(int arg) { return arg * arg; }
        ],
        [],
        [])

    #
    # Attribute sentinel:
    # Ignored by the intel-9.1.045 -- recognized by cross-check
    #                intel-10.0beta works fine
    # Ignored by PGI-6.2.5 (pgCC) -- recognized by output-parser and cross-check
    # Ignored by pathcc-2.2.1 -- recognized by cross-check (through grep ignore)
    #
    HWLOC_ATTRIBUTE_CFLAGS=
    case "$hwloc_c_vendor" in
        gnu)
            HWLOC_ATTRIBUTE_CFLAGS="-Wall"
            ;;
        intel)
            # we do not want to get ignored attributes warnings
            HWLOC_ATTRIBUTE_CFLAGS="-wd1292"
            ;;
    esac
    _HWLOC_CHECK_SPECIFIC_ATTRIBUTE([sentinel],
        [
         int my_execlp(const char * file, const char *arg, ...) __attribute__ ((__sentinel__));
        ],
        [
         static int usage(int * argument);
         int my_execlp(const char * file, const char *arg, ...) __attribute__ ((__sentinel__));

         static int usage(int * argument) {
             void * last_arg_should_be_null = argument;
             return my_execlp ("lala", "/home/there", last_arg_should_be_null);   /* This should produce a warning */
         }
         /* The autoconf-generated main-function is int main(), which produces a warning by itself */
         int main(void);
        ],
        [$HWLOC_ATTRIBUTE_CFLAGS])

    _HWLOC_CHECK_SPECIFIC_ATTRIBUTE([unused],
        [
         int square(int arg1 __attribute__ ((__unused__)), int arg2);
         int square(int arg1, int arg2) { return arg2; }
        ],
        [],
        [])


    #
    # Attribute warn_unused_result:
    # Ignored by the intel-compiler 9.1.045 -- recognized by cross-check
    # Ignored by pathcc-2.2.1 -- recognized by cross-check (through grep ignore)
    #
    HWLOC_ATTRIBUTE_CFLAGS=
    case "$hwloc_c_vendor" in
        gnu)
            HWLOC_ATTRIBUTE_CFLAGS="-Wall"
            ;;
        intel)
            # we do not want to get ignored attributes warnings
            HWLOC_ATTRIBUTE_CFLAGS="-wd1292"
            ;;
    esac
    _HWLOC_CHECK_SPECIFIC_ATTRIBUTE([warn_unused_result],
        [
         int foo(int arg) __attribute__ ((__warn_unused_result__));
         int foo(int arg) { return arg + 3; }
        ],
        [
         static int usage(int * argument);
         int foo(int arg) __attribute__ ((__warn_unused_result__));

         int foo(int arg) { return arg + 3; }
         static int usage(int * argument) {
           foo (*argument);        /* Should produce an unused result warning */
           return 0;
         }

         /* The autoconf-generated main-function is int main(), which produces a warning by itself */
         int main(void);
        ],
        [$HWLOC_ATTRIBUTE_CFLAGS])


    _HWLOC_CHECK_SPECIFIC_ATTRIBUTE([weak_alias],
        [
         int foo(int arg);
         int foo(int arg) { return arg + 3; }
         int foo2(int arg) __attribute__ ((__weak__, __alias__("foo")));
        ],
        [],
        [])

  fi

  # Now that all the values are set, define them

  AC_DEFINE_UNQUOTED(HWLOC_HAVE_ATTRIBUTE_ALIGNED, [$hwloc_cv___attribute__aligned],
                     [Whether your compiler has __attribute__ aligned or not])
  AC_DEFINE_UNQUOTED(HWLOC_HAVE_ATTRIBUTE_ALWAYS_INLINE, [$hwloc_cv___attribute__always_inline],
                     [Whether your compiler has __attribute__ always_inline or not])
  AC_DEFINE_UNQUOTED(HWLOC_HAVE_ATTRIBUTE_COLD, [$hwloc_cv___attribute__cold],
                     [Whether your compiler has __attribute__ cold or not])
  AC_DEFINE_UNQUOTED(HWLOC_HAVE_ATTRIBUTE_CONST, [$hwloc_cv___attribute__const],
                     [Whether your compiler has __attribute__ const or not])
  AC_DEFINE_UNQUOTED(HWLOC_HAVE_ATTRIBUTE_DEPRECATED, [$hwloc_cv___attribute__deprecated],
                     [Whether your compiler has __attribute__ deprecated or not])
  AC_DEFINE_UNQUOTED(HWLOC_HAVE_ATTRIBUTE_FORMAT, [$hwloc_cv___attribute__format],
                     [Whether your compiler has __attribute__ format or not])
  AC_DEFINE_UNQUOTED(HWLOC_HAVE_ATTRIBUTE_HOT, [$hwloc_cv___attribute__hot],
                     [Whether your compiler has __attribute__ hot or not])
  AC_DEFINE_UNQUOTED(HWLOC_HAVE_ATTRIBUTE_MALLOC, [$hwloc_cv___attribute__malloc],
                     [Whether your compiler has __attribute__ malloc or not])
  AC_DEFINE_UNQUOTED(HWLOC_HAVE_ATTRIBUTE_MAY_ALIAS, [$hwloc_cv___attribute__may_alias],
                     [Whether your compiler has __attribute__ may_alias or not])
  AC_DEFINE_UNQUOTED(HWLOC_HAVE_ATTRIBUTE_NO_INSTRUMENT_FUNCTION, [$hwloc_cv___attribute__no_instrument_function],
                     [Whether your compiler has __attribute__ no_instrument_function or not])
  AC_DEFINE_UNQUOTED(HWLOC_HAVE_ATTRIBUTE_NONNULL, [$hwloc_cv___attribute__nonnull],
                     [Whether your compiler has __attribute__ nonnull or not])
  AC_DEFINE_UNQUOTED(HWLOC_HAVE_ATTRIBUTE_NORETURN, [$hwloc_cv___attribute__noreturn],
                     [Whether your compiler has __attribute__ noreturn or not])
  AC_DEFINE_UNQUOTED(HWLOC_HAVE_ATTRIBUTE_PACKED, [$hwloc_cv___attribute__packed],
                     [Whether your compiler has __attribute__ packed or not])
  AC_DEFINE_UNQUOTED(HWLOC_HAVE_ATTRIBUTE_PURE, [$hwloc_cv___attribute__pure],
                     [Whether your compiler has __attribute__ pure or not])
  AC_DEFINE_UNQUOTED(HWLOC_HAVE_ATTRIBUTE_SENTINEL, [$hwloc_cv___attribute__sentinel],
                     [Whether your compiler has __attribute__ sentinel or not])
  AC_DEFINE_UNQUOTED(HWLOC_HAVE_ATTRIBUTE_UNUSED, [$hwloc_cv___attribute__unused],
                     [Whether your compiler has __attribute__ unused or not])
  AC_DEFINE_UNQUOTED(HWLOC_HAVE_ATTRIBUTE_WARN_UNUSED_RESULT, [$hwloc_cv___attribute__warn_unused_result],
                     [Whether your compiler has __attribute__ warn unused result or not])
  AC_DEFINE_UNQUOTED(HWLOC_HAVE_ATTRIBUTE_WEAK_ALIAS, [$hwloc_cv___attribute__weak_alias],
                     [Whether your compiler has __attribute__ weak alias or not])
])
m4trace:opal/mca/hwloc/hwloc172/configure.m4:30: -1- m4_include([opal/mca/hwloc/hwloc172/hwloc/config/hwloc_check_visibility.m4])
m4trace:opal/mca/hwloc/hwloc172/hwloc/config/hwloc_check_visibility.m4:57: -1- AC_DEFUN([_HWLOC_CHECK_VISIBILITY], [
    # Be safe for systems that have ancient Autoconf's (e.g., RHEL5)
    m4_ifdef([AC_PROG_GREP], 
             [AC_REQUIRE([AC_PROG_GREP])],
             [GREP=grep])

    # Check if the compiler has support for visibility, like some
    # versions of gcc, icc, Sun Studio cc.
    AC_ARG_ENABLE(visibility, 
        AC_HELP_STRING([--enable-visibility],
            [enable visibility feature of certain compilers/linkers (default: enabled on platforms that support it)]))

    case ${target} in
        *-*-aix*|*-*-mingw*|*-*-cygwin*|*-*-hpux*)
            enable_visibility=no
            ;;
    esac

    hwloc_visibility_define=0
    hwloc_msg="whether to enable symbol visibility"
    if test "$enable_visibility" = "no"; then
        AC_MSG_CHECKING([$hwloc_msg])
        AC_MSG_RESULT([no (disabled)]) 
    else
        CFLAGS_orig=$CFLAGS

        hwloc_add=
        case "$hwloc_c_vendor" in
        sun)
            # Check using Sun Studio -xldscope=hidden flag
            hwloc_add=-xldscope=hidden
            CFLAGS="$CFLAGS_orig $hwloc_add -errwarn=%all"
            ;;

        *)
            # Check using -fvisibility=hidden
            hwloc_add=-fvisibility=hidden
            CFLAGS="$CFLAGS_orig $hwloc_add -Werror"
            ;;
        esac

        AC_MSG_CHECKING([if $CC supports $hwloc_add])
        AC_LINK_IFELSE([AC_LANG_PROGRAM([[
            #include <stdio.h>
            __attribute__((visibility("default"))) int foo;
            ]],[[fprintf(stderr, "Hello, world\n");]])],
            [AS_IF([test -s conftest.err],
                   [$GREP -iq visibility conftest.err
                    # If we find "visibility" in the stderr, then
                    # assume it doesn't work
                    AS_IF([test "$?" = "0"], [hwloc_add=])])
            ], [hwloc_add=])
        AS_IF([test "$hwloc_add" = ""],
              [AC_MSG_RESULT([no])],
              [AC_MSG_RESULT([yes])])

        CFLAGS=$CFLAGS_orig
        HWLOC_VISIBILITY_CFLAGS=$hwloc_add

        if test "$hwloc_add" != "" ; then
            hwloc_visibility_define=1
            AC_MSG_CHECKING([$hwloc_msg])
            AC_MSG_RESULT([yes (via $hwloc_add)]) 
        elif test "$enable_visibility" = "yes"; then
            AC_MSG_ERROR([Symbol visibility support requested but compiler does not seem to support it.  Aborting])
        else 
            AC_MSG_CHECKING([$hwloc_msg])
            AC_MSG_RESULT([no (unsupported)]) 
        fi
        unset hwloc_add 
    fi

    AC_DEFINE_UNQUOTED([HWLOC_C_HAVE_VISIBILITY], [$hwloc_visibility_define],
            [Whether C compiler supports symbol visibility or not])
])
m4trace:opal/mca/hwloc/hwloc172/configure.m4:31: -1- m4_include([opal/mca/hwloc/hwloc172/hwloc/config/hwloc_check_vendor.m4])
m4trace:opal/mca/hwloc/hwloc172/hwloc/config/hwloc_check_vendor.m4:34: -1- AC_DEFUN([_HWLOC_C_COMPILER_VENDOR], [
    AC_REQUIRE([AC_PROG_CC])

    AC_CACHE_CHECK([for the C compiler vendor],
        [hwloc_cv_c_compiler_vendor],
        [AC_LANG_PUSH(C)
         _HWLOC_CHECK_COMPILER_VENDOR([hwloc_cv_c_compiler_vendor])
         AC_LANG_POP(C)])

    $1="$hwloc_cv_c_compiler_vendor"
])
m4trace:opal/mca/hwloc/hwloc172/hwloc/config/hwloc_check_vendor.m4:56: -1- AC_DEFUN([HWLOC_IFDEF_IFELSE], [
    AC_COMPILE_IFELSE([AC_LANG_DEFINES_PROVIDED
#ifndef $1
#error "symbol $1 not defined"
choke me
#endif], [$2], [$3])])
m4trace:opal/mca/hwloc/hwloc172/hwloc/config/hwloc_check_vendor.m4:69: -1- AC_DEFUN([HWLOC_IF_IFELSE], [
    AC_COMPILE_IFELSE([AC_LANG_DEFINES_PROVIDED
#if !( $1 )
#error "condition $1 not met"
choke me
#endif], [$2], [$3])])
m4trace:opal/mca/hwloc/hwloc172/hwloc/config/hwloc_check_vendor.m4:85: -1- AC_DEFUN([_HWLOC_CHECK_COMPILER_VENDOR], [
    hwloc_check_compiler_vendor_result="unknown"

    # GNU is probably the most common, so check that one as soon as
    # possible.  Intel pretends to be GNU, so need to check Intel
    # before checking for GNU.

    # Intel
    AS_IF([test "$hwloc_check_compiler_vendor_result" = "unknown"],
          [HWLOC_IF_IFELSE([defined(__INTEL_COMPILER) || defined(__ICC)], 
               [hwloc_check_compiler_vendor_result="intel"])])

    # GNU
    AS_IF([test "$hwloc_check_compiler_vendor_result" = "unknown"],
          [HWLOC_IFDEF_IFELSE([__GNUC__], 
               [hwloc_check_compiler_vendor_result="gnu"])])

    # Borland Turbo C
    AS_IF([test "$hwloc_check_compiler_vendor_result" = "unknown"],
          [HWLOC_IFDEF_IFELSE([__TURBOC__], 
               [hwloc_check_compiler_vendor_result="borland"])])

    # Borland C++
    AS_IF([test "$hwloc_check_compiler_vendor_result" = "unknown"],
          [HWLOC_IFDEF_IFELSE([__BORLANDC__], 
               [hwloc_check_compiler_vendor_result="borland"])])

    # Comeau C++
    AS_IF([test "$hwloc_check_compiler_vendor_result" = "unknown"],
          [HWLOC_IFDEF_IFELSE([__COMO__], 
               [hwloc_check_compiler_vendor_result="comeau"])])

    # Compaq C/C++
    AS_IF([test "$hwloc_check_compiler_vendor_result" = "unknown"],
          [HWLOC_IF_IFELSE([defined(__DECC) || defined(VAXC) || defined(__VAXC)],
               [hwloc_check_compiler_vendor_result="compaq"],
               [HWLOC_IF_IFELSE([defined(__osf__) && defined(__LANGUAGE_C__)],
                    [hwloc_check_compiler_vendor_result="compaq"],
                    [HWLOC_IFDEF_IFELSE([__DECCXX],
                         [hwloc_check_compiler_vendor_result="compaq"])])])])

    # Cray C/C++
    AS_IF([test "$hwloc_check_compiler_vendor_result" = "unknown"],
          [HWLOC_IFDEF_IFELSE([_CRAYC], 
               [hwloc_check_compiler_vendor_result="cray"])])

    # Diab C/C++
    AS_IF([test "$hwloc_check_compiler_vendor_result" = "unknown"],
          [HWLOC_IFDEF_IFELSE([__DCC__], 
               [hwloc_check_compiler_vendor_result="diab"])])

    # Digital Mars
    AS_IF([test "$hwloc_check_compiler_vendor_result" = "unknown"],
          [HWLOC_IF_IFELSE([defined(__DMC__) || defined(__SC__) || defined(__ZTC__)],
               [hwloc_check_compiler_vendor_result="digital mars"])])

    # HP ANSI C / aC++
    AS_IF([test "$hwloc_check_compiler_vendor_result" = "unknown"],
          [HWLOC_IF_IFELSE([defined(__HP_cc) || defined(__HP_aCC)],
               [hwloc_check_compiler_vendor_result="hp"])])

    # IBM XL C/C++
    AS_IF([test "$hwloc_check_compiler_vendor_result" = "unknown"],
          [HWLOC_IF_IFELSE([defined(__xlC__) || defined(__IBMC__) || defined(__IBMCPP__)],
               [hwloc_check_compiler_vendor_result="ibm"],
               [HWLOC_IF_IFELSE([defined(_AIX) && !defined(__GNUC__)],
                    [hwloc_check_compiler_vendor_result="ibm"])])])

    # KAI C++ (rest in peace)
    AS_IF([test "$hwloc_check_compiler_vendor_result" = "unknown"],
          [HWLOC_IFDEF_IFELSE([__KCC],
               [hwloc_check_compiler_vendor_result="kai"])])

    # LCC
    AS_IF([test "$hwloc_check_compiler_vendor_result" = "unknown"],
          [HWLOC_IFDEF_IFELSE([__LCC__],
               [hwloc_check_compiler_vendor_result="lcc"])])

    # MetaWare High C/C++
    AS_IF([test "$hwloc_check_compiler_vendor_result" = "unknown"],
          [HWLOC_IFDEF_IFELSE([__HIGHC__],
               [hwloc_check_compiler_vendor_result="metaware high"])])

    # Metrowerks Codewarrior
    AS_IF([test "$hwloc_check_compiler_vendor_result" = "unknown"],
          [HWLOC_IFDEF_IFELSE([__MWERKS__],
               [hwloc_check_compiler_vendor_result="metrowerks"])])

    # MIPSpro (SGI)
    AS_IF([test "$hwloc_check_compiler_vendor_result" = "unknown"],
          [HWLOC_IF_IFELSE([defined(sgi) || defined(__sgi)], 
               [hwloc_check_compiler_vendor_result="sgi"])])

    # MPW C++
    AS_IF([test "$hwloc_check_compiler_vendor_result" = "unknown"],
          [HWLOC_IF_IFELSE([defined(__MRC__) || defined(MPW_C) || defined(MPW_CPLUS)], 
               [hwloc_check_compiler_vendor_result="mpw"])])

    # Microsoft
    AS_IF([test "$hwloc_check_compiler_vendor_result" = "unknown"],
          [# Always use C compiler when checking for Microsoft, as 
           # Visual C++ doesn't recognize .cc as a C++ file.
           AC_LANG_PUSH(C)
           HWLOC_IF_IFELSE([defined(_MSC_VER) || defined(__MSC_VER)], 
               [hwloc_check_compiler_vendor_result="microsoft"])
           AC_LANG_POP(C)])

    # Norcroft C
    AS_IF([test "$hwloc_check_compiler_vendor_result" = "unknown"],
          [HWLOC_IFDEF_IFELSE([__CC_NORCROFT],
               [hwloc_check_compiler_vendor_result="norcroft"])])

    # Pelles C
    AS_IF([test "$hwloc_check_compiler_vendor_result" = "unknown"],
          [HWLOC_IFDEF_IFELSE([__POCC__],
               [hwloc_check_compiler_vendor_result="pelles"])])

    # Portland Group
    AS_IF([test "$hwloc_check_compiler_vendor_result" = "unknown"],
          [HWLOC_IFDEF_IFELSE([__PGI], 
               [hwloc_check_compiler_vendor_result="portland group"])])

    # SAS/C
    AS_IF([test "$hwloc_check_compiler_vendor_result" = "unknown"],
          [HWLOC_IF_IFELSE([defined(SASC) || defined(__SASC) || defined(__SASC__)],
               [hwloc_check_compiler_vendor_result="sas"])])

    # Sun Workshop C/C++
    AS_IF([test "$hwloc_check_compiler_vendor_result" = "unknown"],
          [HWLOC_IF_IFELSE([defined(__SUNPRO_C) || defined(__SUNPRO_CC)],
               [hwloc_check_compiler_vendor_result="sun"])])

    # TenDRA C/C++
    AS_IF([test "$hwloc_check_compiler_vendor_result" = "unknown"],
          [HWLOC_IFDEF_IFELSE([__TenDRA__],
               [hwloc_check_compiler_vendor_result="tendra"])])

    # Tiny C
    AS_IF([test "$hwloc_check_compiler_vendor_result" = "unknown"],
          [HWLOC_IFDEF_IFELSE([__TINYC__],
               [hwloc_check_compiler_vendor_result="tiny"])])

    # USL C
    AS_IF([test "$hwloc_check_compiler_vendor_result" = "unknown"],
          [HWLOC_IFDEF_IFELSE([__USLC__],
               [hwloc_check_compiler_vendor_result="usl"])])

    # Watcom C++
    AS_IF([test "$hwloc_check_compiler_vendor_result" = "unknown"],
          [HWLOC_IFDEF_IFELSE([__WATCOMC__],
               [hwloc_check_compiler_vendor_result="watcom"])])

    $1="$hwloc_check_compiler_vendor_result"
    unset hwloc_check_compiler_vendor_result
])
m4trace:opal/mca/hwloc/hwloc172/configure.m4:32: -1- m4_include([opal/mca/hwloc/hwloc172/hwloc/config/hwloc_components.m4])
m4trace:opal/mca/hwloc/hwloc172/hwloc/config/hwloc_components.m4:11: -1- AC_DEFUN([HWLOC_PREPARE_FILTER_COMPONENTS], [
  for name in `echo [$1] | sed -e 's/,/ /g'` ; do
    str="hwloc_${name}_component_wantplugin=1"
    eval $str
  done
])
m4trace:opal/mca/hwloc/hwloc172/hwloc/config/hwloc_components.m4:27: -1- AC_DEFUN([HWLOC_FILTER_COMPONENTS], [
for name in $hwloc_components ; do
  str="maybeplugin=\$hwloc_${name}_component_maybeplugin"
  eval $str
  str="wantplugin=\$hwloc_${name}_component_wantplugin"
  eval $str
  if test x$hwloc_have_plugins = xyes && test x$maybeplugin = x1 && test x$wantplugin = x1 -o x$enable_plugins = xyes; then
    hwloc_plugin_components="$hwloc_plugin_components $name"
    str="hwloc_${name}_component=plugin"
  else
    hwloc_static_components="$hwloc_static_components $name"
    str="hwloc_${name}_component=static"
  fi
  eval $str
done
])
m4trace:opal/mca/hwloc/hwloc172/hwloc/config/hwloc_components.m4:52: -1- AC_DEFUN([HWLOC_LIST_STATIC_COMPONENTS], [
for comp in [$2]; do
  echo "HWLOC_DECLSPEC extern const struct hwloc_component hwloc_${comp}_component;" >>[$1]
done
cat <<EOF >>[$1]
static const struct hwloc_component * hwloc_static_components[[]] = {
EOF
for comp in [$2]; do
  echo "  &hwloc_${comp}_component," >>[$1]
done
cat <<EOF >>[$1]
  NULL
};
EOF
])
m4trace:opal/mca/hwloc/hwloc172/configure.m4:36: -1- AC_DEFUN([MCA_opal_hwloc_hwloc172_POST_CONFIG], [
    OPAL_VAR_SCOPE_PUSH([opal_hwloc_hwloc172_basedir])

    # If we won, then do all the rest of the setup
    AS_IF([test "$1" = "1"], 
          [
           # Set this variable so that the framework m4 knows what
           # file to include in opal/mca/hwloc/hwloc.h
           opal_hwloc_hwloc172_basedir=opal/mca/hwloc/hwloc172
           opal_hwloc_base_include="$opal_hwloc_hwloc172_basedir/hwloc172.h"

           # Add some stuff to CPPFLAGS so that the rest of the source
           # tree can be built
           file=$opal_hwloc_hwloc172_basedir/hwloc
           CPPFLAGS="$CPPFLAGS -I$OMPI_TOP_SRCDIR/$file/include"
           AS_IF([test "$OMPI_TOP_BUILDDIR" != "$OMPI_TOP_SRCDIR"],
                 [CPPFLAGS="$CPPFLAGS -I$OMPI_TOP_BUILDDIR/$file/include"])
           unset file
          ])
    OPAL_VAR_SCOPE_POP

    # This must be run unconditionally
    HWLOC_DO_AM_CONDITIONALS
])
m4trace:opal/mca/hwloc/hwloc172/configure.m4:64: -1- AC_DEFUN([MCA_opal_hwloc_hwloc172_CONFIG], [
    # Hwloc needs to know if we have Verbs support
    AC_REQUIRE([OPAL_CHECK_VERBS_DIR])

    AC_CONFIG_FILES([opal/mca/hwloc/hwloc172/Makefile])

    OPAL_VAR_SCOPE_PUSH([HWLOC_VERSION opal_hwloc_hwloc172_save_CPPFLAGS opal_hwloc_hwloc172_save_LDFLAGS opal_hwloc_hwloc172_save_LIBS opal_hwloc_hwloc172_save_cairo opal_hwloc_hwloc172_save_xml opal_hwloc_hwloc172_basedir opal_hwloc_hwloc172_file opal_hwloc_hwloc172_save_cflags CPPFLAGS_save])

    # default to this component not providing support
    opal_hwloc_hwloc172_basedir=opal/mca/hwloc/hwloc172
    opal_hwloc_hwloc172_support=no

    if test "$with_hwloc" = "internal" -o "$with_hwloc" = "" -o "$with_hwloc" = "yes"; then
        opal_hwloc_hwloc172_save_CPPFLAGS=$CPPFLAGS
        opal_hwloc_hwloc172_save_LDFLAGS=$LDFLAGS
        opal_hwloc_hwloc172_save_LIBS=$LIBS

        # Run the hwloc configuration - set the prefix to minimize
        # the chance that someone will use the internal symbols
        HWLOC_SET_SYMBOL_PREFIX([opal_hwloc172_])

        # save XML or graphical options
        opal_hwloc_hwloc172_save_cairo=$enable_cairo
        opal_hwloc_hwloc172_save_xml=$enable_xml

        # never enable hwloc's graphical option
        enable_cairo=no

        # Override -- disable hwloc's libxml2 support, but enable the
        # native hwloc XML support
        enable_libxml2=no
        enable_xml=yes

        # hwloc checks for compiler visibility, and its needs to do
        # this without "picky" flags.
        opal_hwloc_hwloc172_save_cflags=$CFLAGS
        CFLAGS=$OMPI_CFLAGS_BEFORE_PICKY
        HWLOC_SETUP_CORE([opal/mca/hwloc/hwloc172/hwloc], 
                  [AC_MSG_CHECKING([whether hwloc configure succeeded])
                   AC_MSG_RESULT([yes])
                   HWLOC_VERSION="internal v`$srcdir/$opal_hwloc_hwloc172_basedir/hwloc/config/hwloc_get_version.sh $srcdir/$opal_hwloc_hwloc172_basedir/hwloc/VERSION`"

                   # Build flags for our Makefile.am
                   opal_hwloc_hwloc172_LDFLAGS='$(HWLOC_EMBEDDED_LDFLAGS)'
                   opal_hwloc_hwloc172_LIBS='$(top_ompi_builddir)/'"$opal_hwloc_hwloc172_basedir"'/hwloc/src/libhwloc_embedded.la $(HWLOC_EMBEDDED_LIBS)'
                   opal_hwloc_hwloc172_support=yes

                   AC_DEFINE_UNQUOTED([HWLOC_HWLOC172_HWLOC_VERSION], 
                       ["$HWLOC_VERSION"], 
                       [Version of hwloc])

                   # Do we have verbs support?
                   CPPFLAGS_save=$CPPFLAGS
                   AS_IF([test "$opal_want_verbs" = "yes"],
                         [CPPFLAGS="-I$opal_verbs_dir/include $CPPFLAGS"])
                   AC_CHECK_HEADERS([infiniband/verbs.h])
                   CPPFLAGS=$CPPFLAGS_save
                  ],
                  [AC_MSG_CHECKING([whether hwloc configure succeeded])
                   AC_MSG_RESULT([no])
                   opal_hwloc_hwloc172_support=no])
        CFLAGS=$opal_hwloc_hwloc172_save_cflags

        # Restore some env variables, if necessary
        AS_IF([test -n "$opal_hwloc_hwloc172_save_cairo"],
              [enable_cairo=$opal_hwloc_hwloc172_save_cairo])
        AS_IF([test -n "$opal_hwloc_hwloc172_save_xml"],
              [enable_xml=$opal_hwloc_hwloc172_save_xml])
       
        CPPFLAGS=$opal_hwloc_hwloc172_save_CPPFLAGS
        LDFLAGS=$opal_hwloc_hwloc172_save_LDFLAGS
        LIBS=$opal_hwloc_hwloc172_save_LIBS

        AC_SUBST([opal_hwloc_hwloc172_CFLAGS])
        AC_SUBST([opal_hwloc_hwloc172_CPPFLAGS])
        AC_SUBST([opal_hwloc_hwloc172_LDFLAGS])
        AC_SUBST([opal_hwloc_hwloc172_LIBS])

        # Finally, add some flags to the wrapper compiler so that our
        # headers can be found.
        hwloc_hwloc172_WRAPPER_EXTRA_LDFLAGS="$HWLOC_EMBEDDED_LDFLAGS"
        hwloc_hwloc172_WRAPPER_EXTRA_LIBS="$HWLOC_EMBEDDED_LIBS"
        hwloc_hwloc172_WRAPPER_EXTRA_CPPFLAGS='-I${includedir}/openmpi/'"$opal_hwloc_hwloc172_basedir/hwloc/include"
    fi

    # Done!
    AS_IF([test "$opal_hwloc_hwloc172_support" = "yes"],
          [$1],
          [$2])

    OPAL_VAR_SCOPE_POP
])
m4trace:config/autogen_found_items.m4:326: -1- m4_include([opal/mca/if/posix_ipv4/configure.m4])
m4trace:opal/mca/if/posix_ipv4/configure.m4:11: -1- AC_DEFUN([MCA_opal_if_posix_ipv4_COMPILE_MODE], [
    AC_MSG_CHECKING([for MCA component $2:$3 compile mode])
    $4="static"
    AC_MSG_RESULT([$$4])
])
m4trace:opal/mca/if/posix_ipv4/configure.m4:20: -1- AC_DEFUN([MCA_opal_if_posix_ipv4_CONFIG], [
    AC_CONFIG_FILES([opal/mca/if/posix_ipv4/Makefile])

    OPAL_VAR_SCOPE_PUSH([opal_if_posix_ipv4_happy])
    opal_if_posix_ipv4_happy=no

    AC_REQUIRE([OPAL_CHECK_OS_FLAVORS])

    # If we found struct sockaddr and we're NOT on most of the BSDs,
    # we're happy.  I.e., if posix but not:
    #if defined(__NetBSD__) || defined(__FreeBSD__) || \
    #    defined(__OpenBSD__) || defined(__DragonFly__)
    AC_MSG_CHECKING([struct sockaddr])
    AS_IF([test "$opal_found_sockaddr" = "yes"],
          [AC_MSG_RESULT([yes (cached)])
           AC_MSG_CHECKING([not NetBSD, FreeBSD, OpenBSD, or DragonFly])
           AS_IF([test "$opal_found_netbsd" = "no" -a "$opal_found_freebsd" = "no" -a "$opal_found_openbsd" = "no" -a "$opal_found_dragonfly" = "no"],
                 [AC_MSG_RESULT([yes])
                  opal_if_posix_ipv4_happy=yes],
                 [AC_MSG_RESULT([no])]
                )],
          [AC_MSG_RESULT([no (cached)])]
         )

    AS_IF([test "$opal_if_posix_ipv4_happy" = "yes"],
          [AC_CHECK_MEMBERS([struct ifreq.ifr_hwaddr], [], [],
                           [[#include <net/if.h>]])
           AC_CHECK_MEMBERS([struct ifreq.ifr_mtu], [], [],
                           [[#include <net/if.h>]])
          ])

    AS_IF([test "$opal_if_posix_ipv4_happy" = "yes"], [$1], [$2]);
])
m4trace:config/autogen_found_items.m4:327: -1- m4_include([opal/mca/if/bsdx_ipv6/configure.m4])
m4trace:opal/mca/if/bsdx_ipv6/configure.m4:11: -1- AC_DEFUN([MCA_opal_if_bsdx_ipv6_COMPILE_MODE], [
    AC_MSG_CHECKING([for MCA component $2:$3 compile mode])
    $4="static"
    AC_MSG_RESULT([$$4])
])
m4trace:opal/mca/if/bsdx_ipv6/configure.m4:20: -1- AC_DEFUN([MCA_opal_if_bsdx_ipv6_CONFIG], [
    AC_CONFIG_FILES([opal/mca/if/bsdx_ipv6/Makefile])

    AC_REQUIRE([OPAL_CHECK_OS_FLAVORS])

    # If we found struct sockaddr and we're on any of the BSDs, we're
    # happy.  I.e., this:
    #if defined( __NetBSD__) || defined(__OpenBSD__) || defined(__FreeBSD__) || \
    #             defined(__386BSD__) || defined(__bsdi__) || defined(__APPLE__) 
    AC_MSG_CHECKING([struct sockaddr])
    AS_IF([test "$opal_found_sockaddr" = "yes"],
          [AC_MSG_RESULT([yes (cached)])
           AC_MSG_CHECKING([some flavor of BSD])
           AS_IF([test "$opal_found_netbsd" = "yes" -o "$opal_found_freebsd" = "yes" -o "$opal_found_openbsd" = "yes" -o "$opal_found_386bsd" = "yes" -o "$opal_found_bsdi" = "yes" -o "$opal_found_apple" = "yes"],
                 [AC_MSG_RESULT([yes])
                  $1],
                 [AC_MSG_RESULT([no])
                  $2])],
          [AC_MSG_RESULT([no (cached)])
           $2])
])
m4trace:config/autogen_found_items.m4:328: -1- m4_include([opal/mca/if/linux_ipv6/configure.m4])
m4trace:opal/mca/if/linux_ipv6/configure.m4:11: -1- AC_DEFUN([MCA_opal_if_linux_ipv6_COMPILE_MODE], [
    AC_MSG_CHECKING([for MCA component $2:$3 compile mode])
    $4="static"
    AC_MSG_RESULT([$$4])
])
m4trace:opal/mca/if/linux_ipv6/configure.m4:20: -1- AC_DEFUN([MCA_opal_if_linux_ipv6_CONFIG], [
    AC_CONFIG_FILES([opal/mca/if/linux_ipv6/Makefile])

    AC_REQUIRE([OPAL_CHECK_OS_FLAVORS])

    AC_MSG_CHECKING([if we are on Linux with TCP])
    # If we have struct sockaddr and we're on Linux, then we're
    # happy.
    AS_IF([test "$opal_found_sockaddr" = "yes" -a "$opal_found_linux" = "yes"],
          [AC_MSG_RESULT([yes])
           $1],
          [AC_MSG_RESULT([no])
           $2])
])
m4trace:config/autogen_found_items.m4:329: -1- m4_include([opal/mca/if/solaris_ipv6/configure.m4])
m4trace:opal/mca/if/solaris_ipv6/configure.m4:11: -1- AC_DEFUN([MCA_opal_if_solaris_ipv6_COMPILE_MODE], [
    AC_MSG_CHECKING([for MCA component $2:$3 compile mode])
    $4="static"
    AC_MSG_RESULT([$$4])
])
m4trace:opal/mca/if/solaris_ipv6/configure.m4:20: -1- AC_DEFUN([MCA_opal_if_solaris_ipv6_CONFIG], [
    AC_CONFIG_FILES([opal/mca/if/solaris_ipv6/Makefile])

    AC_REQUIRE([OPAL_CHECK_OS_FLAVORS])

    # check to see if we are on a solaris machine
    AS_IF([test "$opal_found_sun" = "yes"], [$1], [$2])
])
m4trace:config/autogen_found_items.m4:330: -1- m4_include([opal/mca/if/bsdx_ipv4/configure.m4])
m4trace:opal/mca/if/bsdx_ipv4/configure.m4:11: -1- AC_DEFUN([MCA_opal_if_bsdx_ipv4_COMPILE_MODE], [
    AC_MSG_CHECKING([for MCA component $2:$3 compile mode])
    $4="static"
    AC_MSG_RESULT([$$4])
])
m4trace:opal/mca/if/bsdx_ipv4/configure.m4:20: -1- AC_DEFUN([MCA_opal_if_bsdx_ipv4_CONFIG], [
    AC_CONFIG_FILES([opal/mca/if/bsdx_ipv4/Makefile])

    AC_REQUIRE([OPAL_CHECK_OS_FLAVORS])

    # If we found struct sockaddr and we're on any of the BSDs, we're
    # happy.  I.e., this:
    #if defined(__NetBSD__) || defined(__FreeBSD__) || \
    #    defined(__OpenBSD__) || defined(__DragonFly__)
    AC_MSG_CHECKING([struct sockaddr])
    AS_IF([test "$opal_found_sockaddr" = "yes"],
          [AC_MSG_RESULT([yes (cached)])
           AC_MSG_CHECKING([NetBSD, FreeBSD, OpenBSD, or DragonFly])
           AS_IF([test "$opal_found_netbsd" = "yes" -o "$opal_found_freebsd" = "yes" -o "$opal_found_openbsd" = "yes" -o "$opal_found_dragonfly" = "yes"],
                 [AC_MSG_RESULT([yes])
                  $1],
                 [AC_MSG_RESULT([no])
                  $2])],
          [AC_MSG_RESULT([no (cached)])
           $2])
])
m4trace:config/autogen_found_items.m4:331: -1- m4_include([opal/mca/installdirs/config/configure.m4])
m4trace:opal/mca/installdirs/config/configure.m4:13: -1- AC_DEFUN([MCA_opal_installdirs_config_PRIORITY], [0])
m4trace:opal/mca/installdirs/config/configure.m4:15: -1- AC_DEFUN([MCA_opal_installdirs_config_COMPILE_MODE], [
    AC_MSG_CHECKING([for MCA component $2:$3 compile mode])
    $4="static"
    AC_MSG_RESULT([$$4])
])
m4trace:opal/mca/installdirs/config/configure.m4:25: -1- AC_DEFUN([MCA_opal_installdirs_config_CONFIG], [
    AC_CONFIG_FILES([opal/mca/installdirs/config/Makefile
                     opal/mca/installdirs/config/install_dirs.h])
])
m4trace:config/autogen_found_items.m4:332: -1- m4_include([opal/mca/installdirs/env/configure.m4])
m4trace:opal/mca/installdirs/env/configure.m4:13: -1- AC_DEFUN([MCA_opal_installdirs_env_PRIORITY], [10])
m4trace:opal/mca/installdirs/env/configure.m4:15: -1- AC_DEFUN([MCA_opal_installdirs_env_COMPILE_MODE], [
    AC_MSG_CHECKING([for MCA component $2:$3 compile mode])
    $4="static"
    AC_MSG_RESULT([$$4])
])
m4trace:opal/mca/installdirs/env/configure.m4:24: -1- AC_DEFUN([MCA_opal_installdirs_env_CONFIG], [
    AC_CONFIG_FILES([opal/mca/installdirs/env/Makefile])
])
m4trace:config/autogen_found_items.m4:333: -1- m4_include([opal/mca/memchecker/valgrind/configure.m4])
m4trace:opal/mca/memchecker/valgrind/configure.m4:13: -1- AC_DEFUN([MCA_opal_memchecker_valgrind_PRIORITY], [10])
m4trace:opal/mca/memchecker/valgrind/configure.m4:15: -1- AC_DEFUN([MCA_opal_memchecker_valgrind_COMPILE_MODE], [
    AC_MSG_CHECKING([for MCA component $2:$3 compile mode])
    $4="static"
    AC_MSG_RESULT([$$4])
])
m4trace:opal/mca/memchecker/valgrind/configure.m4:24: -1- AC_DEFUN([MCA_opal_memchecker_valgrind_CONFIG], [
    AC_CONFIG_FILES([opal/mca/memchecker/valgrind/Makefile])

    OPAL_VAR_SCOPE_PUSH([opal_memchecker_valgrind_save_CPPFLAGS opal_memchecker_valgrind_happy opal_memchecker_valgrind_CPPFLAGS])

    AC_ARG_WITH([valgrind],
        [AC_HELP_STRING([--with-valgrind(=DIR)],
            [Directory where the valgrind software is installed])])
    OMPI_CHECK_WITHDIR([valgrind], [$with_valgrind], [include/valgrind/valgrind.h])

    opal_memchecker_valgrind_CPPFLAGS=
    opal_memchecker_valgrind_save_CPPFLAGS="$CPPFLAGS"
    opal_memchecker_valgrind_happy=no
    AS_IF([test "$with_valgrind" != "no"],
          [AS_IF([test ! -z "$with_valgrind" -a "$with_valgrind" != "yes"],
                 [opal_memchecker_valgrind_CPPFLAGS="-I$with_valgrind/include"
                  # We need this -I to stay in CPPFLAGS when we're done
                  CPPFLAGS="$CPPFLAGS -I$with_valgrind/include"
                  opal_memchecker_valgrind_save_CPPFLAGS=$CPPFLAGS])
           AC_CHECK_HEADERS([valgrind/valgrind.h], 
                 [AC_MSG_CHECKING([for VALGRIND_CHECK_MEM_IS_ADDRESSABLE])
                  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#include "valgrind/memcheck.h"
]],
                     [[char buffer = 0xff;
                       VALGRIND_CHECK_MEM_IS_ADDRESSABLE(&buffer, sizeof(buffer));]])],
                     [AC_MSG_RESULT([yes])
                      opal_memchecker_valgrind_happy=yes],
                     [AC_MSG_RESULT([no])
                      AC_MSG_WARN([Need Valgrind version 3.2.0 or later. Can not build component.])]
                     [AC_MSG_RESULT([cross-compiling; assume yes...?])
                      AC_MSG_WARN([OMPI will fail to compile if you do not have Valgrind version 3.2.0 or later])
                      opal_memchecker_valgrind_happy=yes]),
                 ],
                 [AC_MSG_WARN([valgrind.h not found])
                  AC_MSG_WARN([Cannot compile this component])])])
    CPPFLAGS="$opal_memchecker_valgrind_save_CPPFLAGS"

    # If we specifically requested this component and can't build it, error
    AS_IF([test "$with_valgrind" != "no" -a "$with_valgrind" != "" -a "$opal_memchecker_valgrind_happy" != "yes"],
          [AC_MSG_ERROR([Cannot continue])])

    AS_IF([test "$opal_memchecker_valgrind_happy" = "yes"],
          [$1],[$2])

    AC_SUBST([opal_memchecker_valgrind_CPPFLAGS])

    OPAL_VAR_SCOPE_POP
])
m4trace:config/autogen_found_items.m4:334: -1- m4_include([opal/mca/memory/linux/configure.m4])
m4trace:opal/mca/memory/linux/configure.m4:20: -1- AC_DEFUN([MCA_opal_memory_linux_PRIORITY], [40])
m4trace:opal/mca/memory/linux/configure.m4:22: -1- AC_DEFUN([MCA_opal_memory_linux_COMPILE_MODE], [
    AC_MSG_CHECKING([for MCA component $2:$3 compile mode])
    $4="static"
    AC_MSG_RESULT([$$4])
])
m4trace:opal/mca/memory/linux/configure.m4:32: -1- AC_DEFUN([MCA_opal_memory_linux_CONFIG], [
    AC_CONFIG_FILES([opal/mca/memory/linux/Makefile])

    OPAL_VAR_SCOPE_PUSH([memory_linux_ptmalloc2_happy memory_linux_ummu_happy memory_linux_requested icc_major_ver icc_minor_ver memory_linux_mmap memory_linux_munmap memory_linux_LIBS_SAVE])

    # Only allow this component to build on Linux-based systems

    AC_MSG_CHECKING([operating system])
    case $host in
    *linux*)
        AC_MSG_RESULT([$host -- supported])
        memory_linux_ptmalloc2_happy=yes
        memory_linux_ummu_happy=yes
        ;;
    *)
        AC_MSG_RESULT([$host -- unsupported])
        memory_linux_ptmalloc2_happy=no
        memory_linux_ummu_happy=no
        ;;
    esac

    AS_IF([test "$with_memory_manager" = "linux"],
          [memory_linux_ptmalloc2_happy=yes
           memory_linux_ummu_happy=yes
           memory_linux_requested=1],
          [memory_linux_requested=0
           AS_IF([test "$with_memory_manager" = "" -o "$with_memory_manager" = "yes"],
                 [memory_linux_ptmalloc2_happy=yes
                  memory_linux_ummu_happy=yes],
                 [memory_linux_ptmalloc2_happy=no
                  memory_linux_ummu_happy=no])])

    ######################################################################
    # ptmalloc2
    ######################################################################

    # Per ticket #227, Intel 9.0 v20051201 on ia64 with optimization
    # of -O2 or higher will bork linux in strange in mysterious ways.
    # Doh!  So if the compiler vendor is intel and we're on an ia64
    # box, run "icc --version" and snarf the version string.  If it's
    # 9.0 and the version is <= 20051201, then disable ptmalloc2.
    # Executive decision: ignore optimization levels (even though -O1
    # and -O0 seem to work).  The upgrade to 9.1 is free, so that's a
    # better path than trying to make a much more complicated test
    # here.

    AS_IF([test "$memory_linux_ptmalloc2_happy" = yes],
          [case $host in
           ia64-*)
                AS_IF([test "$ompi_c_vendor" = "intel"],
                      [# check for v9.0 <= 20051201
                       icc_major_ver="`$CC --version | head -n 1 | awk '{ print [$]3 }'`"
                       icc_minor_ver="`$CC --version | head -n 1 | awk '{ print [$]4 }'`"
                       AS_IF([test "$icc_major_ver" = "9.0" -a "`expr $icc_minor_ver \<= 20051201`" = "1"],
                             [memory_linux_ptmalloc2_happy=no
                              AC_MSG_WARN([*** Detected Intel C compiler v9.0 <= 20051201 on ia64])
                              AC_MSG_WARN([*** This compiler/platform combination has known problems with ptmalloc2])
                              AC_MSG_WARN([*** Disabling ptmalloc2])])])
                ;;
           esac])

    AS_IF([test "$memory_linux_ptmalloc2_happy" = yes],
          [# check for malloc.h
           AC_CHECK_HEADER([malloc.h],
                           [memory_linux_ptmalloc2_happy=yes],
                           [memory_linux_ptmalloc2_happy=no])])

    AS_IF([test "$memory_linux_ptmalloc2_happy" = yes],
          [# check for init hook symbol
           AC_CHECK_DECL([__malloc_initialize_hook],
                         [memory_linux_ptmalloc2_happy=yes],
                         [memory_linux_ptmalloc2_happy=no],
                         [AC_INCLUDES_DEFAULT
                          #include <malloc.h>])])

    #
    # See if we have sbrk prototyped
    #
    AS_IF([test "$memory_linux_ptmalloc2_happy" = yes], 
          [AC_CHECK_DECLS([sbrk])])

    #
    # Figure out how we're going to call mmap/munmap for real
    #
    AS_IF([test "$memory_linux_ptmalloc2_happy" = yes],
          [memory_linux_mmap=0
           memory_linux_munmap=1

           # it's nearly impossible to call mmap from syscall(), so
           # only go this route if we can't get at munmap any other 
           # way.
           AC_CHECK_HEADER([syscall.h], 
               [AC_CHECK_FUNCS([syscall], [], [memory_linux_munmap=0])])

           # Always look for __munmap and __mmap
           AC_CHECK_FUNCS([__munmap], [memory_linux_mmap=1])
           AC_CHECK_FUNCS([__mmap])

           # only allow dlsym (and therefore add -ldl) if we
           # really need to
           AS_IF([test "$memory_linux_mmap" = "0"],
                 [memory_linux_LIBS_SAVE="$LIBS"
                  AC_CHECK_LIB([dl],
                               [dlsym],
                               [LIBS="$LIBS -ldl"
                                memory_linux_LIBS="-ldl"
                                memory_linux_mmap=1])
                  AC_CHECK_FUNCS([dlsym])
                  LIBS="$memory_linux_LIBS_SAVE"])

           AS_IF([test "$memory_linux_mmap" = "0" -a "$memory_linux_munmap" = "0"],
                 [memory_linux_ptmalloc2_happy=no])])

    # If all is good, save the extra libs for the wrapper
    AS_IF([test "$memory_linux_ptmalloc2_happy" = yes],
          [value=1],
          [value=0])
    AC_DEFINE_UNQUOTED([MEMORY_LINUX_PTMALLOC2], [$value],
                       [Whether ptmalloc2 is supported on this system or not])
    AM_CONDITIONAL([MEMORY_LINUX_PTMALLOC2], 
                   [test "$memory_linux_ptmalloc2_happy" = yes])

    ######################################################################
    # ummunotify
    ######################################################################

    # Check for the relevant header
    AS_IF([test "$memory_linux_ummu_happy" = yes],
          [# check for linux/ummunotify.h
           AC_CHECK_HEADER([linux/ummunotify.h],
                           [memory_linux_ummu_happy=yes],
                           [memory_linux_ummu_happy=no])])

    # <stropts.h> has the Linux declaration for ioctl
    AC_CHECK_HEADERS([stropts.h])

    # If all is good, set the header file that we want the rest of the
    # code base to use
    AS_IF([test "$memory_linux_ummu_happy" = yes],
          [memory_base_include="linux/public.h"
           value=1], 
          [value=0])
    AC_DEFINE_UNQUOTED([MEMORY_LINUX_UMMUNOTIFY], [$value],
                       [Whether ummunotify is supported on this system or not])
    AM_CONDITIONAL([MEMORY_LINUX_UMMUNOTIFY], 
                   [test "$memory_linux_ummu_happy" = yes])

    ######################################################################
    # post processing
    ######################################################################

    AS_IF([test "$memory_malloc_hooks_requested" = 1 -a \
                "$memory_linux_ptmalloc2_happy" = no -a \
                "$memory_linux_ummu_happy" = no],
          [AC_MSG_ERROR([linux memory management requested but neither ptmalloc2 nor ummunotify are available.  Aborting.])])
    AC_SUBST([memory_linux_LIBS])

    AS_IF([test "$memory_linux_ptmalloc2_happy" = yes -o \
                "$memory_linux_ummu_happy" = yes],
          [memory_base_found=1
           $1], 
          [memory_base_found=0
           memory_base_include=
           $2])

    OPAL_VAR_SCOPE_POP
])
m4trace:config/autogen_found_items.m4:335: -1- m4_include([opal/mca/memory/malloc_solaris/configure.m4])
m4trace:opal/mca/memory/malloc_solaris/configure.m4:21: -1- AC_DEFUN([MCA_opal_memory_malloc_solaris_PRIORITY], [0])
m4trace:opal/mca/memory/malloc_solaris/configure.m4:23: -1- AC_DEFUN([MCA_opal_memory_malloc_solaris_COMPILE_MODE], [
    AC_MSG_CHECKING([for MCA component $2:$3 compile mode])
    $4="static"
    AC_MSG_RESULT([$$4])
])
m4trace:opal/mca/memory/malloc_solaris/configure.m4:32: -1- AC_DEFUN([MCA_opal_memory_malloc_solaris_CONFIG], [
    AC_CONFIG_FILES([opal/mca/memory/malloc_solaris/Makefile])

    OPAL_VAR_SCOPE_PUSH([memory_malloc_solaris_happy memory_malloc_solaris_should_use memory_malloc_solaris_munmap memory_alloc_solaris_legacy])

    AC_MSG_CHECKING([for Solaris])

    case "$host" in
    *solaris*)

        AC_MSG_RESULT([yes])

        AS_IF([test "$with_memory_manager" = "malloc_solaris"],
              [memory_malloc_solaris_happy="yes"
                memory_malloc_solaris_should_use=1],
              [memory_malloc_solaris_should_use=0
                AS_IF([test "$with_memory_manager" = ""],
                      [memory_malloc_solaris_happy="yes"],
                      [memory_malloc_solaris_happy="no"])])

        AS_IF([test "$memory_malloc_solaris_happy" = "yes"],
              [AC_CHECK_HEADER([malloc.h], [], 
              [memory_malloc_solaris_happy="no"])])

        AS_IF([test "$memory_malloc_solaris_happy" = "yes"],
              [memory_malloc_solaris_munmap=0

              AC_CHECK_HEADER([sys/syscall.h], 
                              [AC_CHECK_FUNCS([syscall], 
                                              [memory_malloc_solaris_munmap=1])])

              AC_CHECK_FUNCS([__munmap], [memory_malloc_solaris_munmap=1])

              # only allow dlsym (and therefore add -ldl) if we
              # really need to
              AS_IF([test "$memory_malloc_solaris_munmap" = "0"],
                    [memory_malloc_solaris_LIBS_SAVE="$LIBS"
                      AC_CHECK_LIB([dl],
                                   [dlsym],
                                   [memory_malloc_solaris_LIBS="-ldl"
                                     memory_malloc_solaris_munmap=1])
                      AC_CHECK_FUNCS([dlsym])
                      LIBS="$memory_malloc_solaris_LIBS_SAVE"])

              AS_IF([test "$memory_malloc_solaris_munmap" = "0"],
                    [memory_malloc_solaris_happy="no"])])

        # There is a difference in the munmap prototypes for different 
        # Solaris versions.  So determine whether we are to use Legacy
        # S10 or later prototypes.
        memory_alloc_solaris_legacy=0
        AS_IF([test "$memory_malloc_solaris_happy" = "yes"],
              [AC_MSG_CHECKING([for Solaris Legacy MUNMAP])
               AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/mman.h>]],
                                                  [[char *addr;
                                                    extern int munmap(caddr_t addr, size_t len);]])],
                                 [memory_alloc_solaris_legacy=1
                                  AC_MSG_RESULT([yes])],
                                 [AC_MSG_RESULT([no])])
               AC_DEFINE_UNQUOTED([USE_SOLARIS_LEGACY_MUNMAP_PROTOTYPE],
                                  [$memory_alloc_solaris_legacy],
                                  [Whether to use the legacy Solaris munmap prototype or not])
               ])

        AS_IF([test "$memory_malloc_solaris_happy" = "no" -a \
                "$memory_malloc_solaris_should_use" = "1"],
              [AC_MSG_ERROR([malloc_solaris memory management requested but not available.  Aborting.])])

        AC_SUBST(memory_malloc_solaris_LIBS)

    ;;
    *)
        AC_MSG_RESULT([no])
        AS_IF([test "$with_memory_manager" = "malloc_solaris"],
              [memory_malloc_solaris_happy="no"
                memory_malloc_solaris_should_use=0])
    ;;
    esac 

    AS_IF([test "$memory_malloc_solaris_happy" = "yes"],
          [memory_base_found=1
           $1], [$2])

    OPAL_VAR_SCOPE_POP
])
m4trace:config/autogen_found_items.m4:336: -1- m4_include([opal/mca/pstat/linux/configure.m4])
m4trace:opal/mca/pstat/linux/configure.m4:20: -1- AC_DEFUN([MCA_opal_pstat_linux_PRIORITY], [60])
m4trace:opal/mca/pstat/linux/configure.m4:25: -1- AC_DEFUN([MCA_opal_pstat_linux_CONFIG], [
    AC_CONFIG_FILES([opal/mca/pstat/linux/Makefile])

   case "${host}" in
   i?86-*linux*|x86_64*linux*|ia64-*linux*|powerpc-*linux*|powerpc64-*linux*|sparc*-*linux*)
              AS_IF([test -r "/proc/cpuinfo"],
                     [pstat_linux_happy="yes"],
                     [pstat_linux_happy="no"])
        ;;
   *)
        pstat_linux_happy="no"
        ;;
   esac

   AS_IF([test "$pstat_linux_happy" = "yes"], 
         [AC_CHECK_DECLS([HZ],
            [], [pstat_linux_happy="no"], [AC_INCLUDES_DEFAULT
#include <sys/param.h>
])])

   AS_IF([test "$pstat_linux_happy" = "yes"], 
         [$1], 
         [$2])
])
m4trace:config/autogen_found_items.m4:337: -1- m4_include([opal/mca/pstat/test/configure.m4])
m4trace:opal/mca/pstat/test/configure.m4:20: -1- AC_DEFUN([MCA_opal_pstat_test_PRIORITY], [10])
m4trace:opal/mca/pstat/test/configure.m4:25: -1- AC_DEFUN([MCA_opal_pstat_test_CONFIG], [
    AC_CONFIG_FILES([opal/mca/pstat/test/Makefile])

    pstat_test_happy="yes"
    AS_IF([test "$pstat_test_happy" = "yes"], 
          [$1], 
          [$2])
])
m4trace:config/autogen_found_items.m4:338: -1- m4_include([opal/mca/sec/keystone/configure.m4])
m4trace:opal/mca/sec/keystone/configure.m4:13: -1- AC_DEFUN([MCA_opal_sec_keystone_CONFIG], [
    AC_CONFIG_FILES([opal/mca/sec/keystone/Makefile])

    AC_ARG_WITH([keystone],
                [AC_HELP_STRING([--with-keystone],
                                [Build keystone support (default: no)])],
	                        [], with_keystone=no)

    # do not build if support not requested
    AC_MSG_CHECKING([want keystone security])
    AS_IF([test "$with_keystone" != "no"],
          [AC_MSG_RESULT([yes])
           AS_IF([test ! -z "$with_keystone" -a "$with_keystone" != "yes"],
                 [opal_check_keystone_dir="$with_keystone"])
           OMPI_CHECK_PACKAGE([sec_keystone],
                              [curl/curl.h],
                              [curl],
                              [curl_easy_init],
                              [],
                              [],
                              [],
                              [$1],
                              [AC_MSG_WARN([KEYSTONE SUPPORT REQUESTED])
                               AC_MSG_WARN([BUT REQUIRED CURL LIBRARY OR HEADER NOT FOUND])
                               AC_MSG_ERROR([CANNOT CONTINUE])
                               $2])],
          [AC_MSG_RESULT([no])
           $2])

    AC_SUBST(sec_keystone_CPPFLAGS)
    AC_SUBST(sec_keystone_LDFLAGS)
    AC_SUBST(sec_keystone_LIBS)
])
m4trace:config/autogen_found_items.m4:339: -1- m4_include([opal/mca/shmem/posix/configure.m4])
m4trace:opal/mca/shmem/posix/configure.m4:26: -1- AC_DEFUN([MCA_opal_shmem_posix_CONFIG], [
    AC_CONFIG_FILES([opal/mca/shmem/posix/Makefile])

    # do we have the posix shm stuff?
    AC_MSG_CHECKING([if want POSIX shared memory support])
    AC_ARG_ENABLE(posix-shmem,
        AC_HELP_STRING([--disable-posix-shmem],
                       [disable posix shared memory support (default: enabled)]))
    AS_IF([test "$enable_posix_shmem" = "no"],
          [AC_MSG_RESULT([no])
           shmem_posix_sm_build_posix=0],
          [AC_MSG_RESULT([yes])
           OPAL_SEARCH_LIBS_COMPONENT([shmem_posix], [shm_open], [rt],
                  [shmem_posix_sm_build_posix=1],
                  [shmem_posix_sm_build_posix=0])])
    AS_IF([test "$enable_posix_shmem" = "yes" -a "$shmem_posix_sm_build_posix" = "0"],
          [AC_MSG_WARN([POSIX shared memory support requested but not found])
           AC_MSG_ERROR([Cannot continue])])

    AS_IF([test "$shmem_posix_sm_build_posix" = "1"], [$1], [$2])

    AC_DEFINE_UNQUOTED([OPAL_SHMEM_POSIX],
                       [$shmem_posix_sm_build_posix],
                       [Whether we have shared memory support for POSIX or not])
])
m4trace:config/autogen_found_items.m4:340: -1- m4_include([opal/mca/shmem/sysv/configure.m4])
m4trace:opal/mca/shmem/sysv/configure.m4:26: -1- AC_DEFUN([MCA_opal_shmem_sysv_CONFIG], [
    AC_CONFIG_FILES([opal/mca/shmem/sysv/Makefile])

    # do we have the sysv shm stuff?
    AC_MSG_CHECKING([if want SYSV shared memory support])
    AC_ARG_ENABLE(sysv-shmem,
        AC_HELP_STRING([--disable-sysv-shmem],
                       [disable sysv shared memory support (default: enabled)]))
    AS_IF([test "$enable_sysv_shmem" = "no"],
          [AC_MSG_RESULT([no])
           shmem_sysv_sm_build_sysv=0],
          [AC_MSG_RESULT([yes])
          AC_CHECK_FUNC(shmget,
                  [shmem_sysv_sm_build_sysv=1],
                  [shmem_sysv_sm_build_sysv=0])])
    AS_IF([test "$enable_sysv_shmem" = "yes" -a "$shmem_sysv_sm_build_sysv" = "0"],
          [AC_MSG_WARN([SYSV shared memory support requested but not found])
           AC_MSG_ERROR([Cannot continue])])

    AS_IF([test "$shmem_sysv_sm_build_sysv" = "1"], [$1], [$2])

    AC_DEFINE_UNQUOTED([OPAL_SHMEM_SYSV],
                       [$shmem_sysv_sm_build_sysv],
                       [Whether we have shared memory support for SYSV or not])
])
m4trace:config/autogen_found_items.m4:341: -1- m4_include([opal/mca/shmem/mmap/configure.m4])
m4trace:opal/mca/shmem/mmap/configure.m4:26: -1- AC_DEFUN([MCA_opal_shmem_mmap_CONFIG], [
    AC_CONFIG_FILES([opal/mca/shmem/mmap/Makefile])

    # do we have the mmap shm stuff?
    AC_MSG_CHECKING([if want mmap shared memory support])
    AC_ARG_ENABLE(mmap-shmem,
        AC_HELP_STRING([--disable-mmap-shmem],
                       [disable mmap shared memory support (default: enabled)]))
    AS_IF([test "$enable_mmap_shmem" = "no"],
          [AC_MSG_RESULT([no])
           shmem_mmap_sm_build_mmap=0],
          [AC_MSG_RESULT([yes])
           AC_SEARCH_LIBS([mmap], [c],
                  [shmem_mmap_sm_build_mmap=1],
                  [shmem_mmap_sm_build_mmap=0])])
    AS_IF([test "$enable_mmap_shmem" = "yes" -a "$shmem_mmap_sm_build_mmap" = "0"],
          [AC_MSG_WARN([mmap shared memory support requested but not found])
           AC_MSG_ERROR([Cannot continue])])

    AS_IF([test "$shmem_mmap_sm_build_mmap" = "1"], [$1], [$2])

    AC_DEFINE_UNQUOTED([OPAL_SHMEM_MMAP],
                       [$shmem_mmap_sm_build_mmap],
                       [Whether we have shared memory support for mmap or not])
])
m4trace:config/autogen_found_items.m4:342: -1- m4_include([opal/mca/timer/solaris/configure.m4])
m4trace:opal/mca/timer/solaris/configure.m4:20: -1- AC_DEFUN([MCA_opal_timer_solaris_PRIORITY], [30])
m4trace:opal/mca/timer/solaris/configure.m4:22: -1- AC_DEFUN([MCA_opal_timer_solaris_COMPILE_MODE], [
    AC_MSG_CHECKING([for MCA component $2:$3 compile mode])
    $4="static"
    AC_MSG_RESULT([$$4])
])
m4trace:opal/mca/timer/solaris/configure.m4:28: -1- AC_DEFUN([MCA_opal_timer_solaris_POST_CONFIG], [
    AS_IF([test "$1" = "1"], [timer_base_include="solaris/timer_solaris.h"])
])
m4trace:opal/mca/timer/solaris/configure.m4:35: -1- AC_DEFUN([MCA_opal_timer_solaris_CONFIG], [
    AC_CONFIG_FILES([opal/mca/timer/solaris/Makefile])

    AS_IF([test "$with_timer" = "solaris"],
          [timer_solaris_happy="yes"
           timer_solaris_should_use=1],
          [timer_solaris_should_use=0
           AS_IF([test "$with_timer" = ""],
                 [timer_solaris_happy="yes"],
                 [timer_solaris_happy="no"])])

    AS_IF([test "$timer_solaris_happy" = "yes"],
          [AC_CHECK_FUNC([gethrtime], 
                         [timer_solaris_happy="yes"],
                         [timer_solaris_happy="no"])])

   AS_IF([test "$timer_solaris_happy" = "no" -a \
               "$timer_solaris_should_use" = "1"],
         [AC_MSG_ERROR([Solaris timer requested but not available.  Aborting.])])

    AS_IF([test "$timer_solaris_happy" = "yes"], 
          [$1], 
          [$2])
])
m4trace:config/autogen_found_items.m4:343: -1- m4_include([opal/mca/timer/darwin/configure.m4])
m4trace:opal/mca/timer/darwin/configure.m4:20: -1- AC_DEFUN([MCA_opal_timer_darwin_PRIORITY], [30])
m4trace:opal/mca/timer/darwin/configure.m4:22: -1- AC_DEFUN([MCA_opal_timer_darwin_COMPILE_MODE], [
    AC_MSG_CHECKING([for MCA component $2:$3 compile mode])
    $4="static"
    AC_MSG_RESULT([$$4])
])
m4trace:opal/mca/timer/darwin/configure.m4:28: -1- AC_DEFUN([MCA_opal_timer_darwin_POST_CONFIG], [
    AS_IF([test "$1" = "1"], [timer_base_include="darwin/timer_darwin.h"])
])
m4trace:opal/mca/timer/darwin/configure.m4:35: -1- AC_DEFUN([MCA_opal_timer_darwin_CONFIG], [
    AC_CONFIG_FILES([opal/mca/timer/darwin/Makefile])

    AS_IF([test "$with_timer" = "darwin"],
          [timer_darwin_happy="yes"
           timer_darwin_should_use=1],
          [timer_darwin_should_use=0
           AS_IF([test "$with_timer" = ""],
                 [timer_darwin_happy="yes"],
                 [timer_darwin_happy="no"])])

    AS_IF([test "$timer_darwin_happy" = "yes"],
          [AC_CHECK_HEADERS([mach/mach_time.h])
           AC_CHECK_FUNC([mach_absolute_time], 
                         [timer_darwin_happy="yes"],
                         [timer_darwin_happy="no"])])

   AS_IF([test "$timer_darwin_happy" = "no" -a \
               "$timer_darwin_should_use" = "1"],
         [AC_MSG_ERROR([Darwin timer requested but not available.  Aborting.])])

    AS_IF([test "$timer_darwin_happy" = "yes"], 
          [$1], 
          [$2])
])
m4trace:config/autogen_found_items.m4:344: -1- m4_include([opal/mca/timer/aix/configure.m4])
m4trace:opal/mca/timer/aix/configure.m4:21: -1- AC_DEFUN([MCA_opal_timer_aix_PRIORITY], [30])
m4trace:opal/mca/timer/aix/configure.m4:23: -1- AC_DEFUN([MCA_opal_timer_aix_COMPILE_MODE], [
    AC_MSG_CHECKING([for MCA component $2:$3 compile mode])
    $4="static"
    AC_MSG_RESULT([$$4])
])
m4trace:opal/mca/timer/aix/configure.m4:29: -1- AC_DEFUN([MCA_opal_timer_aix_POST_CONFIG], [
    AS_IF([test "$1" = "1"], [timer_base_include="aix/timer_aix.h"])
])
m4trace:opal/mca/timer/aix/configure.m4:37: -1- AC_DEFUN([MCA_opal_timer_aix_CONFIG], [
    AC_CONFIG_FILES([opal/mca/timer/aix/Makefile])

    AS_IF([test "$with_timer" = "aix"],
          [timer_aix_happy="yes"
           timer_aix_should_use=1],
          [timer_aix_should_use=0
           AS_IF([test "$with_timer" = ""],
                 [timer_aix_happy="yes"],
                 [timer_aix_happy="no"])])

    AS_IF([test "$timer_aix_happy" = "yes"],
          [AC_CHECK_FUNC([time_base_to_time], 
                         [timer_aix_happy="yes"],
                         [timer_aix_happy="no"])])

    # look to see if -lpmapi is available
    timer_aix_LIBS=
    timer_aix_LIBS_SAVE="$LIBS"
    AS_IF([test "$timer_aix_happy" = "yes"],
          [AC_CHECK_LIB([pmapi],
                        [pm_cycles],
                        [LIBS="$LIBS -lpmapi"
                         timer_aix_LIBS="-lpmapi"],
                        [timer_aix_LIBS=""])])

    # get us a HAVE_PM_CYCLES #define
    AS_IF([test "$timer_aix_happy" = "yes"],
          [AC_CHECK_FUNCS([pm_cycles])
           AC_CHECK_HEADERS([pmapi.h])])
   LIBS="$timer_aix_LIBS_SAVE"

    AS_IF([test "$timer_aix_happy" = "no" -a \
                "$timer_aix_should_use" = "1"],
          [AC_MSG_ERROR([AIX timer requested but not available.  Aborting.])])

    AC_SUBST(timer_aix_LIBS)

    AS_IF([test "$timer_aix_happy" = "yes"], 
          [$1], 
          [$2])
])
m4trace:config/autogen_found_items.m4:345: -1- m4_include([opal/mca/timer/linux/configure.m4])
m4trace:opal/mca/timer/linux/configure.m4:20: -1- AC_DEFUN([MCA_opal_timer_linux_PRIORITY], [30])
m4trace:opal/mca/timer/linux/configure.m4:22: -1- AC_DEFUN([MCA_opal_timer_linux_COMPILE_MODE], [
    AC_MSG_CHECKING([for MCA component $2:$3 compile mode])
    $4="static"
    AC_MSG_RESULT([$$4])
])
m4trace:opal/mca/timer/linux/configure.m4:28: -1- AC_DEFUN([MCA_opal_timer_linux_POST_CONFIG], [
    AS_IF([test "$1" = "1"], [timer_base_include="linux/timer_linux.h"])
])
m4trace:opal/mca/timer/linux/configure.m4:35: -1- AC_DEFUN([MCA_opal_timer_linux_CONFIG], [
    AC_CONFIG_FILES([opal/mca/timer/linux/Makefile])

    AS_IF([test "$with_timer" = "linux"],
          [timer_linux_happy="yes"
           timer_linux_should_use=1],
          [timer_linux_should_use=0
           AS_IF([test "$with_timer" = ""],
                 [timer_linux_happy="yes"],
                 [timer_linux_happy="no"])])

   case "${host}" in
   i?86-*linux*|x86_64*linux*|ia64-*linux*|powerpc-*linux*|powerpc64-*linux*|sparc*-*linux*)
        AS_IF([test "$timer_linux_happy" = "yes"],
              [AS_IF([test -r "/proc/cpuinfo"],
                     [timer_linux_happy="yes"],
                     [timer_linux_happy="no"])])
        ;;
   *)
        timer_linux_happy="no"
        ;;
   esac

   AS_IF([test "$timer_linux_happy" = "no" -a \
               "$timer_linux_should_use" = "1"],
         [AC_MSG_ERROR([Linux timer requested but not available.  Aborting.])])

    AS_IF([test "$timer_linux_happy" = "yes"], 
          [$1], 
          [$2])
])
m4trace:config/autogen_found_items.m4:346: -1- m4_include([opal/mca/timer/altix/configure.m4])
m4trace:opal/mca/timer/altix/configure.m4:20: -1- AC_DEFUN([MCA_opal_timer_altix_PRIORITY], [100])
m4trace:opal/mca/timer/altix/configure.m4:22: -1- AC_DEFUN([MCA_opal_timer_altix_COMPILE_MODE], [
    AC_MSG_CHECKING([for MCA component $2:$3 compile mode])
    $4="static"
    AC_MSG_RESULT([$$4])
])
m4trace:opal/mca/timer/altix/configure.m4:28: -1- AC_DEFUN([MCA_opal_timer_altix_POST_CONFIG], [
    AS_IF([test "$1" = "1"], [timer_base_include="altix/timer_altix.h"])
])
m4trace:opal/mca/timer/altix/configure.m4:35: -1- AC_DEFUN([MCA_opal_timer_altix_CONFIG], [
    AC_CONFIG_FILES([opal/mca/timer/altix/Makefile])

    AS_IF([test "$with_timer" = "altix"],
          [timer_altix_happy="yes"
           timer_altix_should_use=1],
          [timer_altix_should_use=0
           AS_IF([test "$with_timer" = ""],
                 [timer_altix_happy="yes"],
                 [timer_altix_happy="no"])])

    AS_IF([test "$timer_altix_happy" = "yes"],
          [AC_CHECK_HEADER([sn/mmtimer.h],
			   [timer_altix_happy="yes"],
			   [timer_altix_happy="no"])])

    AS_IF([test "$timer_altix_happy" = "yes"],
          [AC_CHECK_HEADERS([sys/ioctl.h sys/mman.h])])

    AS_IF([test "$timer_altix_happy" = "yes"],
          [AC_CACHE_CHECK([if MM timer can be opened],
           	          [ompi_cv_mm_timer_mmap],
                          [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <sys/ioctl.h>
#include <sys/mman.h>
#include <sn/mmtimer.h>
], [
    int fd;
    fd = open(MMTIMER_FULLNAME, O_RDONLY);
    if (-1 ==fd) return 1;])],
                                             [ompi_cv_mm_timer_mmap="yes"],
			                     [ompi_cv_mm_timer_mmap="no"])])
           AS_IF([test "$ompi_cv_mm_timer_mmap" = "yes"],
	         [timer_altix_happy="yes"],
                 [timer_altix_happy="no"])])

    AS_IF([test "$timer_altix_happy" = "no" -a \
                "$timer_altix_should_use" = "1"],
          [AC_MSG_ERROR([Altix timer requested but not available.  Aborting.])])

    AS_IF([test "$timer_altix_happy" = "yes"], 
          [$1], 
          [$2])
])
m4trace:config/autogen_found_items.m4:347: -1- m4_include([opal/mca/timer/catamount/configure.m4])
m4trace:opal/mca/timer/catamount/configure.m4:20: -1- AC_DEFUN([MCA_opal_timer_catamount_PRIORITY], [100])
m4trace:opal/mca/timer/catamount/configure.m4:22: -1- AC_DEFUN([MCA_opal_timer_catamount_COMPILE_MODE], [
    AC_MSG_CHECKING([for MCA component $2:$3 compile mode])
    $4="static"
    AC_MSG_RESULT([$$4])
])
m4trace:opal/mca/timer/catamount/configure.m4:28: -1- AC_DEFUN([MCA_opal_timer_catamount_POST_CONFIG], [
    AS_IF([test "$1" = "1"], [timer_base_include="catamount/timer_catamount.h"])
])
m4trace:opal/mca/timer/catamount/configure.m4:35: -1- AC_DEFUN([MCA_opal_timer_catamount_CONFIG], [
    AC_CONFIG_FILES([opal/mca/timer/catamount/Makefile])

    AS_IF([test "$with_timer" = "catamount"],
          [timer_catamount_happy="yes"
           timer_catamount_should_use=1],
          [timer_catamount_should_use=0
           AS_IF([test "$with_timer" = ""],
                 [timer_catamount_happy="yes"],
                 [timer_catamount_happy="no"])])

   AS_IF([test "$timer_catamount_happy" = "yes"],
         [AC_CHECK_HEADERS([catamount/dclock.h], [],
                           [timer_catamount_happy=no])])

   AS_IF([test "$timer_catamount_happy" = "yes"],
         [AC_CACHE_CHECK([for __cpu_mhz],
            [ompi_cv_have___cpu_mhz],
            [AC_LINK_IFELSE([AC_LANG_PROGRAM([
#include <catamount/dclock.h>
                               ],[
unsigned int a = __cpu_mhz;
                               ])],
               [ompi_cv_have___cpu_mhz=yes],
               [ompi_cv_have___cpu_mhz=no])])
          AS_IF([test "$ompi_cv_have___cpu_mhz" = "no"],
                [timer_catamount_happy="no"])])           

   AS_IF([test "$timer_catamount_happy" = "no" -a \
               "$timer_catamount_should_use" = "1"],
         [AC_MSG_ERROR([Catamount timer requested but not available.  Aborting.])])

    AS_IF([test "$timer_catamount_happy" = "yes"], 
          [$1], 
          [$2])
])
m4trace:config/autogen_found_items.m4:348: -1- m4_include([orte/mca/ess/pmi/configure.m4])
m4trace:orte/mca/ess/pmi/configure.m4:15: -1- AC_DEFUN([MCA_orte_ess_pmi_CONFIG], [
    AC_CONFIG_FILES([orte/mca/ess/pmi/Makefile])

    # see if PMI support requested
    OPAL_CHECK_PMI([ess_pmi], [ess_pmi_good=1], [ess_pmi_good=0])
         
    # Evaluate succeed / fail
    AS_IF([test "$ess_pmi_good" = "1"],
          [$1],
          [$2])

    # set build flags to use in makefile
    AC_SUBST([ess_pmi_CPPFLAGS])
    AC_SUBST([ess_pmi_LDFLAGS])
    AC_SUBST([ess_pmi_LIBS])

])
m4trace:config/autogen_found_items.m4:349: -1- m4_include([orte/mca/ess/tm/configure.m4])
m4trace:orte/mca/ess/tm/configure.m4:25: -1- AC_DEFUN([MCA_orte_ess_tm_CONFIG], [
    AC_CONFIG_FILES([orte/mca/ess/tm/Makefile])

    ORTE_CHECK_TM([ess_tm], [ess_tm_good=1], [ess_tm_good=0])
         
    # if check worked, set wrapper flags if so.  
    # Evaluate succeed / fail
    AS_IF([test "$ess_tm_good" = "1"],
          [$1],
          [$2])

    # set build flags to use in makefile
    AC_SUBST([ess_tm_CPPFLAGS])
    AC_SUBST([ess_tm_LDFLAGS])
    AC_SUBST([ess_tm_LIBS])
])
m4trace:config/autogen_found_items.m4:350: -1- m4_include([orte/mca/ess/lsf/configure.m4])
m4trace:orte/mca/ess/lsf/configure.m4:25: -1- AC_DEFUN([MCA_orte_ess_lsf_CONFIG], [
    AC_CONFIG_FILES([orte/mca/ess/lsf/Makefile])

    ORTE_CHECK_LSF([ess_lsf], [ess_lsf_good=1], [ess_lsf_good=0])
         
    # if check worked, set wrapper flags if so.  
    # Evaluate succeed / fail
    AS_IF([test "$ess_lsf_good" = "1"],
          [$1],
          [$2])

    # set build flags to use in makefile
    AC_SUBST([ess_lsf_CPPFLAGS])
    AC_SUBST([ess_lsf_LDFLAGS])
    AC_SUBST([ess_lsf_LIBS])
])
m4trace:config/autogen_found_items.m4:351: -1- m4_include([orte/mca/ess/slurm/configure.m4])
m4trace:orte/mca/ess/slurm/configure.m4:25: -1- AC_DEFUN([MCA_orte_ess_slurm_CONFIG], [
    AC_CONFIG_FILES([orte/mca/ess/slurm/Makefile])

    ORTE_CHECK_SLURM([ess_slurm], [ess_slurm_good=1], [ess_slurm_good=0])
         
    # if check worked, set wrapper flags if so.  
    # Evaluate succeed / fail
    AS_IF([test "$ess_slurm_good" = "1"],
          [$1],
          [$2])

    # set build flags to use in makefile
    AC_SUBST([ess_slurm_CPPFLAGS])
    AC_SUBST([ess_slurm_LDFLAGS])
    AC_SUBST([ess_slurm_LIBS])
])
m4trace:config/autogen_found_items.m4:352: -1- m4_include([orte/mca/ess/alps/configure.m4])
m4trace:orte/mca/ess/alps/configure.m4:25: -1- AC_DEFUN([MCA_orte_ess_alps_CONFIG], [
    AC_CONFIG_FILES([orte/mca/ess/alps/Makefile])

    AC_CHECK_HEADERS([catamount/cnos_mpi_os.h],
        [orte_mca_ess_alps_have_cnos=1],
        [AC_CHECK_HEADERS([cnos_mpi_os.h],
            [orte_mca_ess_alps_have_cnos=1],
            [orte_mca_ess_alps_have_cnos=0],
            [AC_INCLUDES_DEFAULT])],
        [AC_INCLUDES_DEFAULT])

    dnl one last check to make certain that we have all the right CNOS stuff to
    dnl continue with CNOS support
    AS_IF([test "$orte_mca_ess_alps_have_cnos" = "1"],
        [AC_CHECK_FUNC([cnos_get_rank],
            [orte_mca_ess_alps_have_cnos=1],
            [orte_mca_ess_alps_have_cnos=0])])

    dnl was ess alps requested?
    ORTE_CHECK_ALPS([ess_alps],
        [orte_mca_ess_alps_happy="yes"],
        [orte_mca_ess_alps_happy="no"])

    AS_IF([test "$orte_mca_ess_alps_happy" = "yes" -a "$orte_mca_ess_alps_have_cnos" = 1],
          [$1],
          [$2])
])
m4trace:config/autogen_found_items.m4:353: -1- m4_include([orte/mca/grpcomm/pmi/configure.m4])
m4trace:orte/mca/grpcomm/pmi/configure.m4:15: -1- AC_DEFUN([MCA_orte_grpcomm_pmi_CONFIG], [
    AC_CONFIG_FILES([orte/mca/grpcomm/pmi/Makefile])
         
    OPAL_CHECK_PMI([grpcomm_pmi], [grpcomm_pmi_good=1], [grpcomm_pmi_good=0])
         
    # Evaluate succeed / fail
    AS_IF([test "$grpcomm_pmi_good" = 1],
          [$1],
          [$2])

    # set build flags to use in makefile
    AC_SUBST([grpcomm_pmi_CPPFLAGS])
    AC_SUBST([grpcomm_pmi_LDFLAGS])
    AC_SUBST([grpcomm_pmi_LIBS])

])
m4trace:config/autogen_found_items.m4:354: -1- m4_include([orte/mca/odls/default/configure.m4])
m4trace:orte/mca/odls/default/configure.m4:25: -1- AC_DEFUN([MCA_orte_odls_default_CONFIG], [
    AC_CONFIG_FILES([orte/mca/odls/default/Makefile])

    AC_CHECK_FUNC([fork], [odls_default_happy="yes"], [odls_default_happy="no"])

    AS_IF([test "$odls_default_happy" = "yes"], [$1], [$2])

])
m4trace:config/autogen_found_items.m4:355: -1- m4_include([orte/mca/oob/tcp/configure.m4])
m4trace:orte/mca/oob/tcp/configure.m4:25: -1- AC_DEFUN([MCA_orte_oob_tcp_CONFIG], [
    AC_CONFIG_FILES([orte/mca/oob/tcp/Makefile])

    # check for sockaddr_in (a good sign we have TCP)
    AC_CHECK_TYPES([struct sockaddr_in], 
                   [oob_tcp_happy="yes"],
                   [oob_tcp_happy="no"], 
                   [AC_INCLUDES_DEFAULT
#ifdef HAVE_NETINET_IN_H
#include <netinet/in.h>
#endif])

    AS_IF([test "$oob_tcp_happy" = "yes"], [$1], [$2])
])
m4trace:config/autogen_found_items.m4:356: -1- m4_include([orte/mca/plm/isolated/configure.m4])
m4trace:orte/mca/plm/isolated/configure.m4:26: -1- AC_DEFUN([MCA_orte_plm_isolated_CONFIG], [
    AC_CONFIG_FILES([orte/mca/plm/isolated/Makefile])

    AC_CHECK_FUNC([fork], [plm_isolated_happy="yes"], [plm_isolated_happy="no"])

    AS_IF([test "$plm_isolated_happy" = "yes"], [$1], [$2])
])
m4trace:config/autogen_found_items.m4:357: -1- m4_include([orte/mca/plm/tm/configure.m4])
m4trace:orte/mca/plm/tm/configure.m4:25: -1- AC_DEFUN([MCA_orte_plm_tm_CONFIG], [
    AC_CONFIG_FILES([orte/mca/plm/tm/Makefile])

    ORTE_CHECK_TM([plm_tm], [plm_tm_good=1], [plm_tm_good=0])
         
    # if check worked, set wrapper flags if so.  
    # Evaluate succeed / fail
    AS_IF([test "$plm_tm_good" = "1"],
          [$1],
          [$2])

    # set build flags to use in makefile
    AC_SUBST([plm_tm_CPPFLAGS])
    AC_SUBST([plm_tm_LDFLAGS])
    AC_SUBST([plm_tm_LIBS])
])
m4trace:config/autogen_found_items.m4:358: -1- m4_include([orte/mca/plm/rsh/configure.m4])
m4trace:orte/mca/plm/rsh/configure.m4:25: -1- AC_DEFUN([MCA_orte_plm_rsh_CONFIG], [
    AC_CONFIG_FILES([orte/mca/plm/rsh/Makefile])

    AC_CHECK_FUNC([fork], [plm_rsh_happy="yes"], [plm_rsh_happy="no"])

    AS_IF([test "$plm_rsh_happy" = "yes"], [$1], [$2])
])
m4trace:config/autogen_found_items.m4:359: -1- m4_include([orte/mca/plm/lsf/configure.m4])
m4trace:orte/mca/plm/lsf/configure.m4:25: -1- AC_DEFUN([MCA_orte_plm_lsf_CONFIG], [
    AC_CONFIG_FILES([orte/mca/plm/lsf/Makefile])

    ORTE_CHECK_LSF([plm_lsf], [plm_lsf_good=1], [plm_lsf_good=0])
         
    # if check worked, set wrapper flags if so.  
    # Evaluate succeed / fail
    AS_IF([test "$plm_lsf_good" = "1"],
          [$1],
          [$2])

    # set build flags to use in makefile
    AC_SUBST([plm_lsf_CPPFLAGS])
    AC_SUBST([plm_lsf_LDFLAGS])
    AC_SUBST([plm_lsf_LIBS])
])
m4trace:config/autogen_found_items.m4:360: -1- m4_include([orte/mca/plm/slurm/configure.m4])
m4trace:orte/mca/plm/slurm/configure.m4:25: -1- AC_DEFUN([MCA_orte_plm_slurm_CONFIG], [
    AC_CONFIG_FILES([orte/mca/plm/slurm/Makefile])

    ORTE_CHECK_SLURM([plm_slurm], [plm_slurm_good=1], [plm_slurm_good=0])
         
    # if check worked, set wrapper flags if so.  
    # Evaluate succeed / fail
    AS_IF([test "$plm_slurm_good" = "1"],
          [$1],
          [$2])

    # set build flags to use in makefile
    AC_SUBST([plm_slurm_CPPFLAGS])
    AC_SUBST([plm_slurm_LDFLAGS])
    AC_SUBST([plm_slurm_LIBS])
])
m4trace:config/autogen_found_items.m4:361: -1- m4_include([orte/mca/plm/alps/configure.m4])
m4trace:orte/mca/plm/alps/configure.m4:25: -1- AC_DEFUN([MCA_orte_plm_alps_CONFIG], [
    AC_CONFIG_FILES([orte/mca/plm/alps/Makefile])

	ORTE_CHECK_ALPS([plm_alps], [plm_alps_happy="yes"], [plm_alps_happy="no"])

    AS_IF([test "$plm_alps_happy" = "yes"], [$1], [$2])
])
m4trace:config/autogen_found_items.m4:362: -1- m4_include([orte/mca/ras/gridengine/configure.m4])
m4trace:orte/mca/ras/gridengine/configure.m4:27: -1- AC_DEFUN([MCA_orte_ras_gridengine_CONFIG], [
    AC_CONFIG_FILES([orte/mca/ras/gridengine/Makefile])

    ORTE_CHECK_GRIDENGINE([ras_gridengine], [ras_gridengine_happy="yes"], [ras_gridengine_happy="no"])

    AS_IF([test "$ras_gridengine_happy" = "yes"], [$1], [$2])
])
m4trace:config/autogen_found_items.m4:363: -1- m4_include([orte/mca/ras/tm/configure.m4])
m4trace:orte/mca/ras/tm/configure.m4:25: -1- AC_DEFUN([MCA_orte_ras_tm_CONFIG], [
    AC_CONFIG_FILES([orte/mca/ras/tm/Makefile])

    ORTE_CHECK_TM([ras_tm], [ras_tm_good=1], [ras_tm_good=0])

    # if check worked, set wrapper flags if so.  
    # Evaluate succeed / fail
    AS_IF([test "$ras_tm_good" = "1"],
          [$1],
          [$2])

    # set build flags to use in makefile
    AC_SUBST([ras_tm_CPPFLAGS])
    AC_SUBST([ras_tm_LDFLAGS])
    AC_SUBST([ras_tm_LIBS])
])
m4trace:config/autogen_found_items.m4:364: -1- m4_include([orte/mca/ras/lsf/configure.m4])
m4trace:orte/mca/ras/lsf/configure.m4:25: -1- AC_DEFUN([MCA_orte_ras_lsf_CONFIG], [
    AC_CONFIG_FILES([orte/mca/ras/lsf/Makefile])

    ORTE_CHECK_LSF([ras_lsf], [ras_lsf_good=1], [ras_lsf_good=0])

    # if check worked, set wrapper flags if so.  
    # Evaluate succeed / fail
    AS_IF([test "$ras_lsf_good" = "1"],
          [$1],
          [$2])

    # set build flags to use in makefile
    AC_SUBST([ras_lsf_CPPFLAGS])
    AC_SUBST([ras_lsf_LDFLAGS])
    AC_SUBST([ras_lsf_LIBS])
])
m4trace:config/autogen_found_items.m4:365: -1- m4_include([orte/mca/ras/loadleveler/configure.m4])
m4trace:orte/mca/ras/loadleveler/configure.m4:25: -1- AC_DEFUN([MCA_orte_ras_loadleveler_CONFIG], [
    AC_CONFIG_FILES([orte/mca/ras/loadleveler/Makefile])

    ORTE_CHECK_LOADLEVELER([ras_loadleveler], [ras_loadleveler_good=1], [ras_loadleveler_good=0])

    # if check worked, set wrapper flags if so.  
    # Evaluate succeed / fail
    AS_IF([test "$ras_loadleveler_good" = "1"],
          [$1],
          [$2])

    # set build flags to use in makefile
    AC_SUBST([ras_loadleveler_CPPFLAGS])
    AC_SUBST([ras_loadleveler_LDFLAGS])
    AC_SUBST([ras_loadleveler_LIBS])
])
m4trace:config/autogen_found_items.m4:366: -1- m4_include([orte/mca/ras/slurm/configure.m4])
m4trace:orte/mca/ras/slurm/configure.m4:25: -1- AC_DEFUN([MCA_orte_ras_slurm_CONFIG], [
    AC_CONFIG_FILES([orte/mca/ras/slurm/Makefile])

    ORTE_CHECK_SLURM([ras_slurm], [ras_slurm_good=1], [ras_slurm_good=0])
         
    # if check worked, set wrapper flags if so.  
    # Evaluate succeed / fail
    AS_IF([test "$ras_slurm_good" = "1"],
          [$1],
          [$2])

    # set build flags to use in makefile
    AC_SUBST([ras_slurm_CPPFLAGS])
    AC_SUBST([ras_slurm_LDFLAGS])
    AC_SUBST([ras_slurm_LIBS])
])
m4trace:config/autogen_found_items.m4:367: -1- m4_include([orte/mca/ras/alps/configure.m4])
m4trace:orte/mca/ras/alps/configure.m4:26: -1- AC_DEFUN([MCA_orte_ras_alps_CONFIG], [
    AC_CONFIG_FILES([orte/mca/ras/alps/Makefile])

    ORTE_CHECK_ALPS([ras_alps], [ras_alps_happy="yes"], [ras_alps_happy="no"])

    # check for alps/apInfo.h
    # save current CPPFLAGS
    MCA_orte_ras_save_CPPFLAGS="$CPPFLAGS"

    # add flags obtained from ORTE_CHECK_ALPS
    CPPFLAGS="$CPPFLAGS $ras_alps_CPPFLAGS"

    AC_CHECK_HEADERS([alps/apInfo.h], [], [ras_alps_happy="no"])

    # restore CPPFLAGS
    CPPFLAGS="$MCA_orte_ras_save_CPPFLAGS"

    AC_SUBST([ras_alps_CPPFLAGS])

    AS_IF([test "$ras_alps_happy" = "yes"], [$1], [$2])
])
m4trace:config/autogen_found_items.m4:368: -1- m4_include([orte/mca/rmaps/mindist/configure.m4])
m4trace:orte/mca/rmaps/mindist/configure.m4:13: -1- AC_DEFUN([MCA_orte_rmaps_mindist_CONFIG], [
    AC_CONFIG_FILES([orte/mca/rmaps/mindist/Makefile])

    AS_IF([test "$OPAL_HAVE_HWLOC" = 1],
          [$1],
          [$2])
])
m4trace:config/autogen_found_items.m4:369: -1- m4_include([orte/mca/rmaps/rank_file/configure.m4])
m4trace:orte/mca/rmaps/rank_file/configure.m4:13: -1- AC_DEFUN([MCA_orte_rmaps_rank_file_CONFIG], [
    AC_CONFIG_FILES([orte/mca/rmaps/rank_file/Makefile])

    AS_IF([test "$OPAL_HAVE_HWLOC" = 1],
          [$1],
          [$2])
])
m4trace:config/autogen_found_items.m4:370: -1- m4_include([orte/mca/rmaps/lama/configure.m4])
m4trace:orte/mca/rmaps/lama/configure.m4:13: -1- AC_DEFUN([MCA_orte_rmaps_lama_CONFIG], [
    AC_CONFIG_FILES([orte/mca/rmaps/lama/Makefile])

    AS_IF([test "$OPAL_HAVE_HWLOC" = 1],
          [$1],
          [$2])
])
m4trace:config/autogen_found_items.m4:371: -1- m4_include([orte/mca/rml/ftrm/configure.m4])
m4trace:orte/mca/rml/ftrm/configure.m4:21: -1- AC_DEFUN([MCA_orte_rml_ftrm_CONFIG], [
    AC_CONFIG_FILES([orte/mca/rml/ftrm/Makefile])

    # If we don't want FT, don't compile this component
    AS_IF([test "$opal_want_ft_cr" = "1"],
        [$1],
        [$2])
])
m4trace:config/autogen_found_items.m4:372: -1- m4_include([orte/mca/sensor/resusage/configure.m4])
m4trace:orte/mca/sensor/resusage/configure.m4:15: -1- AC_DEFUN([MCA_orte_sensor_resusage_CONFIG], [
    AC_CONFIG_FILES([orte/mca/sensor/resusage/Makefile])

    # if we don't want sensors, don't compile
    # this component
    AS_IF([test "$orte_want_sensors" = "1"],
        [$1], [$2])
])
m4trace:config/autogen_found_items.m4:373: -1- m4_include([orte/mca/sensor/file/configure.m4])
m4trace:orte/mca/sensor/file/configure.m4:15: -1- AC_DEFUN([MCA_orte_sensor_file_CONFIG], [
    AC_CONFIG_FILES([orte/mca/sensor/file/Makefile])

    # if we don't want sensors, don't compile
    # this component
    AS_IF([test "$orte_want_sensors" = "1"],
        [$1], [$2])
])
m4trace:config/autogen_found_items.m4:374: -1- m4_include([orte/mca/sensor/ft_tester/configure.m4])
m4trace:orte/mca/sensor/ft_tester/configure.m4:15: -1- AC_DEFUN([MCA_orte_sensor_ft_tester_CONFIG], [
    AC_CONFIG_FILES([orte/mca/sensor/ft_tester/Makefile])

    # if we don't want sensors, don't compile
    # this component
    AS_IF([test "$orte_want_sensors" = "1"],
        [$1], [$2])
])
m4trace:config/autogen_found_items.m4:375: -1- m4_include([orte/mca/sensor/heartbeat/configure.m4])
m4trace:orte/mca/sensor/heartbeat/configure.m4:15: -1- AC_DEFUN([MCA_orte_sensor_heartbeat_CONFIG], [
    AC_CONFIG_FILES([orte/mca/sensor/heartbeat/Makefile])

    # if we don't want sensors, don't compile
    # this component
    AS_IF([test "$orte_want_sensors" = "1"],
        [$1], [$2])
])
m4trace:config/autogen_found_items.m4:376: -1- m4_include([orte/mca/snapc/full/configure.m4])
m4trace:orte/mca/snapc/full/configure.m4:23: -1- AC_DEFUN([MCA_orte_snapc_full_CONFIG], [
    AC_CONFIG_FILES([orte/mca/snapc/full/Makefile])

    # If we don't want FT, don't compile this component
    AS_IF([test "$opal_want_ft_cr" = "1"],
        [$1],
        [$2])
])
m4trace:config/autogen_found_items.m4:377: -1- m4_include([orte/mca/sstore/central/configure.m4])
m4trace:orte/mca/sstore/central/configure.m4:17: -1- AC_DEFUN([MCA_orte_sstore_central_CONFIG], [
    AC_CONFIG_FILES([orte/mca/sstore/central/Makefile])

    # If we don't want FT, don't compile this component
    AS_IF([test "$opal_want_ft_cr" = "1"],
        [$1],
        [$2])
])
m4trace:config/autogen_found_items.m4:378: -1- m4_include([orte/mca/sstore/stage/configure.m4])
m4trace:orte/mca/sstore/stage/configure.m4:17: -1- AC_DEFUN([MCA_orte_sstore_stage_CONFIG], [
    AC_CONFIG_FILES([orte/mca/sstore/stage/Makefile])

    # If we don't want FT, don't compile this component
    AS_IF([test "$opal_want_ft_cr" = "1"],
        [$1],
        [$2])
])
m4trace:config/autogen_found_items.m4:379: -1- m4_include([ompi/mca/fbtl/configure.m4])
m4trace:ompi/mca/fbtl/configure.m4:14: -1- AC_DEFUN([MCA_ompi_fbtl_CONFIG], [
    # An AC-ARG-ENABLE for mpi-io was set in ompi/mca/io/configure.m4.
    # If it's no, we shouldn't bother building anything in fcoll.
    AS_IF([test "$enable_mpi_io" != "no"],
          [want_mpi_io=1],
          [want_mpi_io=0])
    MCA_CONFIGURE_FRAMEWORK([$1], [$2], [$want_mpi_io])
])
m4trace:config/autogen_found_items.m4:380: -1- m4_include([ompi/mca/fcoll/configure.m4])
m4trace:ompi/mca/fcoll/configure.m4:14: -1- AC_DEFUN([MCA_ompi_fcoll_CONFIG], [
    # An AC-ARG-ENABLE for mpi-io was set in ompi/mca/io/configure.m4.
    # If it's no, we shouldn't bother building anything in fcoll.
    AS_IF([test "$enable_mpi_io" != "no"],
          [want_mpi_io=1],
          [want_mpi_io=0])
    MCA_CONFIGURE_FRAMEWORK([$1], [$2], [$want_mpi_io])
])
m4trace:config/autogen_found_items.m4:381: -1- m4_include([ompi/mca/fs/configure.m4])
m4trace:ompi/mca/fs/configure.m4:14: -1- AC_DEFUN([MCA_ompi_fs_CONFIG], [
    # An AC-ARG-ENABLE for mpi-io was set in ompi/mca/io/configure.m4.
    # If it's no, we shouldn't bother building anything in fcoll.
    AS_IF([test "$enable_mpi_io" != "no"],
          [want_mpi_io=1],
          [want_mpi_io=0])
    MCA_CONFIGURE_FRAMEWORK([$1], [$2], [$want_mpi_io])
])
m4trace:config/autogen_found_items.m4:382: -1- m4_include([ompi/mca/io/configure.m4])
m4trace:ompi/mca/io/configure.m4:15: -1- AC_DEFUN([MCA_ompi_io_CONFIG], [
    AC_ARG_ENABLE([mpi-io],
        [AC_HELP_STRING([--disable-mpi-io],
            [Disable built-in support for MPI-2 I/O, likely because
             an externally-provided MPI I/O package will be used.
             Default is to use the internal component system and
             its specially modified version of ROMIO])])

    OMPI_MPIF_IO_CONSTANTS_INCLUDE=
    OMPI_MPIF_IO_HANDLES_INCLUDE=
    AS_IF([test "$enable_mpi_io" != "no"],
          [define_mpi_io=1
           OMPI_MPIF_IO_CONSTANTS_INCLUDE="include \"mpif-io-constants.h\""
           OMPI_MPIF_IO_HANDLES_INCLUDE="include \"mpif-io-handles.h\""],
          [define_mpi_io=0])
    AC_SUBST(OMPI_MPIF_IO_CONSTANTS_INCLUDE)
    AC_SUBST(OMPI_MPIF_IO_HANDLES_INCLUDE)

    MCA_CONFIGURE_FRAMEWORK([$1], [$2], [$define_mpi_io])

    OMPI_PROVIDE_MPI_FILE_INTERFACE=$define_mpi_io
    AC_SUBST(OMPI_PROVIDE_MPI_FILE_INTERFACE)
    AC_DEFINE_UNQUOTED([OMPI_PROVIDE_MPI_FILE_INTERFACE], [$define_mpi_io],
                       [Whether OMPI should provide MPI File interface])
    AM_CONDITIONAL([OMPI_PROVIDE_MPI_FILE_INTERFACE], [test "$define_mpi_io" = "1"])

])
m4trace:config/autogen_found_items.m4:383: -1- m4_include([ompi/mca/rte/configure.m4])
m4trace:ompi/mca/rte/configure.m4:22: -1- AC_DEFUN([MCA_ompi_rte_CONFIG], [
    ompi_rte_base_include=

    # configure all the components
    MCA_CONFIGURE_FRAMEWORK($1, $2, 1)

    AS_IF([test "$ompi_rte_base_include" = ""],
          [AC_MSG_ERROR([Did not find a suitable rte component])])

    AC_DEFINE_UNQUOTED([MCA_rte_IMPLEMENTATION_HEADER],
                       ["ompi/mca/rte/$ompi_rte_base_include"],
                       [Header to include for rte implementation])
])
m4trace:config/autogen_found_items.m4:384: -1- m4_include([ompi/mca/sharedfp/configure.m4])
m4trace:ompi/mca/sharedfp/configure.m4:14: -1- AC_DEFUN([MCA_ompi_sharedfp_CONFIG], [
    # An AC-ARG-ENABLE for mpi-io was set in ompi/mca/io/configure.m4.
    # If it's no, we shouldn't bother building anything in fcoll.
    AS_IF([test "$enable_mpi_io" != "no"],
          [want_mpi_io=1],
          [want_mpi_io=0])
    MCA_CONFIGURE_FRAMEWORK([$1], [$2], [$want_mpi_io])
])
m4trace:config/autogen_found_items.m4:385: -1- m4_include([ompi/mca/common/ugni/configure.m4])
m4trace:ompi/mca/common/ugni/configure.m4:39: -1- AC_DEFUN([MCA_ompi_common_ugni_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/common/ugni/Makefile])

    OMPI_CHECK_UGNI([common_ugni],
        [common_ugni_happy="yes"],
        [common_ugni_happy="no"])

    AS_IF([test "$common_ugni_happy" = "yes"],
        [$1],
        [$2])

    # substitute in the things needed to build ugni
    AC_SUBST([common_ugni_CPPFLAGS])
    AC_SUBST([common_ugni_LDFLAGS])
    AC_SUBST([common_ugni_LIBS])
])
m4trace:config/autogen_found_items.m4:386: -1- m4_include([ompi/mca/common/sm/configure.m4])
m4trace:ompi/mca/common/sm/configure.m4:26: -1- AC_DEFUN([MCA_ompi_common_sm_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/common/sm/Makefile])
    $1
])
m4trace:config/autogen_found_items.m4:387: -1- m4_include([ompi/mca/common/verbs/configure.m4])
m4trace:ompi/mca/common/verbs/configure.m4:26: -1- AC_DEFUN([MCA_ompi_common_verbs_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/common/verbs/Makefile])
    common_verbs_happy="no"
    OMPI_CHECK_OPENFABRICS([common_verbs],
                           [common_verbs_happy="yes"])

    AS_IF([test "$common_verbs_happy" = "yes"],
          [$1],
          [$2])

    # substitute in the things needed to build openib
    AC_SUBST([common_verbs_CFLAGS])
    AC_SUBST([common_verbs_CPPFLAGS])
    AC_SUBST([common_verbs_LDFLAGS])
    AC_SUBST([common_verbs_LIBS])
])
m4trace:config/autogen_found_items.m4:388: -1- m4_include([ompi/mca/common/cuda/configure.m4])
m4trace:ompi/mca/common/cuda/configure.m4:17: -1- AC_DEFUN([MCA_ompi_common_cuda_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/common/cuda/Makefile])

    # make sure that CUDA-aware checks have been done
    AC_REQUIRE([OPAL_CHECK_CUDA])

    AS_IF([test "x$CUDA_SUPPORT" = "x1"],
          [$1],
          [$2])

    # Copy over the includes needed to build CUDA
    common_cuda_CPPFLAGS=$opal_datatype_cuda_CPPFLAGS
    AC_SUBST([common_cuda_CPPFLAGS])

])
m4trace:config/autogen_found_items.m4:389: -1- m4_include([ompi/mca/common/mx/configure.m4])
m4trace:ompi/mca/common/mx/configure.m4:25: -1- AC_DEFUN([MCA_ompi_common_mx_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/common/mx/Makefile])

    OMPI_CHECK_MX([common_mx],
                     [common_mx_happy="yes"],
                     [common_mx_happy="no"])

    AS_IF([test "$common_mx_happy" = "yes"],
          [$1],
          [$2])

    # substitute in the things needed to build mx
    AC_SUBST([common_mx_CFLAGS])
    AC_SUBST([common_mx_CPPFLAGS])
    AC_SUBST([common_mx_LDFLAGS])
    AC_SUBST([common_mx_LIBS])
])
m4trace:config/autogen_found_items.m4:390: -1- m4_include([ompi/mca/bml/r2/configure.m4])
m4trace:ompi/mca/bml/r2/configure.m4:15: -1- AC_DEFUN([MCA_ompi_bml_r2_POST_CONFIG], [
    AS_IF([test "$1" = "1"], [OMPI_REQUIRE_ENDPOINT_TAG([BML])])
])
m4trace:ompi/mca/bml/r2/configure.m4:23: -1- AC_DEFUN([MCA_ompi_bml_r2_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/bml/r2/Makefile])
    [$1]
])
m4trace:config/autogen_found_items.m4:391: -1- m4_include([ompi/mca/btl/ugni/configure.m4])
m4trace:ompi/mca/btl/ugni/configure.m4:39: -1- AC_DEFUN([MCA_ompi_btl_ugni_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/btl/ugni/Makefile])

    OMPI_CHECK_UGNI([btl_ugni],
                     [btl_ugni_happy="yes"],
                     [btl_ugni_happy="no"])

    AS_IF([test "$btl_ugni_happy" = "yes"],
          [btl_ugni_WRAPPER_EXTRA_LDFLAGS="$btl_ugni_LDFLAGS"
           btl_ugni_WRAPPER_EXTRA_LIBS="$btl_ugni_LIBS"
           $1],
          [$2])

    # substitute in the things needed to build ugni
    AC_SUBST([btl_ugni_CPPFLAGS])
    AC_SUBST([btl_ugni_LDFLAGS])
    AC_SUBST([btl_ugni_LIBS])
])
m4trace:config/autogen_found_items.m4:392: -1- m4_include([ompi/mca/btl/tcp/configure.m4])
m4trace:ompi/mca/btl/tcp/configure.m4:23: -1- AC_DEFUN([MCA_ompi_btl_tcp_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/btl/tcp/Makefile])

    # check for sockaddr_in (a good sign we have TCP)
    AC_CHECK_TYPES([struct sockaddr_in], 
                   [$1],
                   [$2], 
                   [AC_INCLUDES_DEFAULT
#ifdef HAVE_NETINET_IN_H
#include <netinet/in.h>
#endif])
])
m4trace:config/autogen_found_items.m4:393: -1- m4_include([ompi/mca/btl/openib/configure.m4])
m4trace:ompi/mca/btl/openib/configure.m4:26: -1- AC_DEFUN([MCA_ompi_btl_openib_POST_CONFIG], [
    AM_CONDITIONAL([MCA_btl_openib_have_xrc], [test $1 -eq 1 -a "x$btl_openib_have_xrc" = "x1"])
    AM_CONDITIONAL([MCA_btl_openib_have_rdmacm], [test $1 -eq 1 -a "x$btl_openib_have_rdmacm" = "x1"])
    AM_CONDITIONAL([MCA_btl_openib_have_dynamic_sl], [test $1 -eq 1 -a "x$btl_openib_have_opensm_devel" = "x1"])
    AM_CONDITIONAL([MCA_btl_openib_have_udcm], [test $1 -eq 1 -a "x$btl_openib_have_udcm" = "x1"])
])
m4trace:ompi/mca/btl/openib/configure.m4:37: -1- AC_DEFUN([MCA_ompi_btl_openib_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/btl/openib/Makefile])

    OPAL_VAR_SCOPE_PUSH([cpcs have_threads LDFLAGS_save LIBS_save])
    cpcs="oob"

    OMPI_CHECK_OPENFABRICS([btl_openib],
                     [btl_openib_happy="yes"
                      OMPI_CHECK_OPENFABRICS_CM([btl_openib])],
                     [btl_openib_happy="no"])

    AS_IF([test "$btl_openib_happy" = "yes"],
          [btl_openib_WRAPPER_EXTRA_LDFLAGS="$btl_openib_LDFLAGS"
           btl_openib_WRAPPER_EXTRA_LIBS="$btl_openib_LIBS"

           # With the new openib flags, look for ibv_fork_init
           LDFLAGS_save="$LDFLAGS"
           LIBS_save="$LIBS"
           LDFLAGS="$LDFLAGS $btl_openib_LDFLAGS"
           LIBS="$LIBS $btl_openib_LIBS"
           AC_CHECK_FUNCS([ibv_fork_init])
           LDFLAGS="$LDFLAGS_save"
           LIBS="$LIBS_save"
           $1],
          [$2])

    AC_MSG_CHECKING([for thread support (needed for rdmacm/udcm)])
    have_threads=`echo $THREAD_TYPE | awk '{ print [$]1 }'`
    if test "x$have_threads" = "x"; then
        have_threads=none
    fi
    AC_MSG_RESULT([$have_threads])

    AS_IF([test "$btl_openib_happy" = "yes"],
          [if test "x$btl_openib_have_xrc" = "x1"; then
              cpcs="$cpcs xoob"
          fi
          if test "x$btl_openib_have_rdmacm" = "x1" -a \
                  "$have_threads" != "none"; then
              cpcs="$cpcs rdmacm"
          fi
          if test "x$btl_openib_have_udcm" = "x1" -a \
                  "$have_threads" != "none"; then
              cpcs="$cpcs udcm"
          fi
          AC_MSG_CHECKING([which openib btl cpcs will be built])
          AC_MSG_RESULT([$cpcs])])

    # Enable openib device failover.  It is disabled by default.
    AC_MSG_CHECKING([whether openib failover is enabled])
    AC_ARG_ENABLE([btl-openib-failover],
       [AC_HELP_STRING([--enable-btl-openib-failover],
           [enable openib BTL failover (default: disabled)])])
    if test "$enable_btl_openib_failover" = "yes"; then
        AC_MSG_RESULT([yes])
        btl_openib_failover_enabled=1
    else
        AC_MSG_RESULT([no])
        btl_openib_failover_enabled=0
    fi
    AC_DEFINE_UNQUOTED([BTL_OPENIB_FAILOVER_ENABLED], [$btl_openib_failover_enabled],
                       [enable openib BTL failover])
    AM_CONDITIONAL([MCA_btl_openib_enable_failover], [test "x$btl_openib_failover_enabled" = "x1"])


    # Check for __malloc_hook availability
    AC_ARG_ENABLE(btl-openib-malloc-alignment,
    	AC_HELP_STRING([--enable-btl-openib-malloc-alignment], [Enable support for allocated memory alignment. Default: enabled if supported, disabled otherwise.]))

    btl_openib_malloc_hooks_enabled=0
    AS_IF([test "$enable_btl_openib_malloc_alignment" != "no"],
        [AC_CHECK_HEADER([malloc.h],
             [AC_CHECK_FUNC([__malloc_hook],
                  [AC_CHECK_FUNC([__realloc_hook],
                       [AC_CHECK_FUNC([__free_hook],
                            [btl_openib_malloc_hooks_enabled=1])])])])])

    AS_IF([test "$enable_btl_openib_malloc_alignment" = "yes" -a "$btl_openib_malloc_hooks_enabled" = "0"],
          [AC_MSG_ERROR([openib malloc alignment is requested but __malloc_hook is not available])])
    AC_MSG_CHECKING([whether the openib BTL will use malloc hooks])
    AS_IF([test "$btl_openib_malloc_hooks_enabled" = "0"],
          [AC_MSG_RESULT([no])],
          [AC_MSG_RESULT([yes])])

    AC_DEFINE_UNQUOTED(BTL_OPENIB_MALLOC_HOOKS_ENABLED, [$btl_openib_malloc_hooks_enabled],
                       [Whether the openib BTL malloc hooks are enabled]) 

    # make sure that CUDA-aware checks have been done
    AC_REQUIRE([OPAL_CHECK_CUDA])
   
    # substitute in the things needed to build openib
    AC_SUBST([btl_openib_CFLAGS])
    AC_SUBST([btl_openib_CPPFLAGS])
    AC_SUBST([btl_openib_LDFLAGS])
    AC_SUBST([btl_openib_LIBS])

    OPAL_VAR_SCOPE_POP
])
m4trace:config/autogen_found_items.m4:394: -1- m4_include([ompi/mca/btl/scif/configure.m4])
m4trace:ompi/mca/btl/scif/configure.m4:12: -1- AC_DEFUN([MCA_ompi_btl_scif_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/btl/scif/Makefile])

    AC_ARG_WITH([scif], [AC_HELP_STRING([--with-scif(=DIR)]),
		[Build with SCIF, searching for headers in DIR])])
    OMPI_CHECK_WITHDIR([scif], [$with_scif], [include/scif.h])

    btl_scif_happy="no"

    if test "$with_scif" != "no" ; then
	if test -n "$with_scif" -a "$with_scif" != "yes" ; then
	    ompi_check_scif_dir=$with_scif
	fi

	OMPI_CHECK_PACKAGE([btl_scif], [scif.h], [scif], [scif_open], [],
	                   [$ompi_check_scif_dir], [], [btl_scif_happy="yes"], [])

	if test "$btl_scif_happy" != "yes" -a -n "$with_scif" ; then
	    AC_MSG_ERROR([SCIF support requested but not found.  Aborting])
	fi
    fi

    AS_IF([test "$btl_scif_happy" = "yes"], [$1], [$2])

    # substitute in the things needed to build scif
    AC_SUBST([btl_scif_CPPFLAGS])
    AC_SUBST([btl_scif_LDFLAGS])
    AC_SUBST([btl_scif_LIBS])
])
m4trace:config/autogen_found_items.m4:395: -1- m4_include([ompi/mca/btl/sm/configure.m4])
m4trace:ompi/mca/btl/sm/configure.m4:20: -1- AC_DEFUN([OMPI_CHECK_KNEM], [
    OPAL_VAR_SCOPE_PUSH([ompi_check_knem_happy ompi_check_knem_$1_save_CPPFLAGS ompi_check_knem_dir])
    AC_ARG_WITH([knem],
        [AC_HELP_STRING([--with-knem(=DIR)],
             [Build knem Linux kernel module support, searching for headers in DIR])])

    OMPI_CHECK_WITHDIR([knem], [$with_knem], [include/knem_io.h])
    ompi_check_knem_$1_save_CPPFLAGS="$CPPFLAGS"

    AS_IF([test "$with_knem" != "no"],
          [AS_IF([test ! -z "$with_knem" -a "$with_knem" != "yes"],
                 [ompi_check_knem_dir="$with_knem"])

           _OMPI_CHECK_PACKAGE_HEADER([$1],
                              [knem_io.h],
                              [$ompi_check_knem_dir],
                              [ompi_check_knem_happy="yes"],
                              [ompi_check_knem_happy="no"])],
          [ompi_check_knem_happy="no"])

    CPPFLAGS="$CPPFLAGS $$1_CPPFLAGS"

    # need at least version 0x0000000b
    AS_IF([test "$ompi_check_knem_happy" = "yes"],
          [AC_CACHE_CHECK([for knem ABI version 0xb or later],
                          [ompi_cv_knem_version_ok],
                          [AC_PREPROC_IFELSE(
                            [AC_LANG_PROGRAM([
#include <knem_io.h>
                             ],[
#if KNEM_ABI_VERSION < 0xc
#error "Version less than 0xc"
#endif
                             ])],
                            [ompi_cv_knem_version_ok=yes],
                            [ompi_cv_knem_version_ok=no])])])

    CPPFLAGS="$ompi_check_knem_$1_save_CPPFLAGS"

    AS_IF([test "$ompi_check_knem_happy" = "yes" -a "$ompi_cv_knem_version_ok" = "yes"],
          [$2],
          [AS_IF([test ! -z "$with_knem" -a "$with_knem" != "no"],
                 [AC_MSG_ERROR([KNEM support requested but not found.  Aborting])])
           $3])
    OPAL_VAR_SCOPE_POP
])
m4trace:ompi/mca/btl/sm/configure.m4:70: -1- AC_DEFUN([MCA_ompi_btl_sm_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/btl/sm/Makefile])

    OPAL_VAR_SCOPE_PUSH([btl_sm_cma_happy])
    OMPI_CHECK_CMA([btl_sm], [btl_sm_cma_happy=1], [btl_sm_cma_happy=0])

    AC_DEFINE_UNQUOTED([OMPI_BTL_SM_HAVE_CMA],
        [$btl_sm_cma_happy],
        [If CMA support can be enabled])

    OPAL_VAR_SCOPE_POP

    OPAL_VAR_SCOPE_PUSH([btl_sm_knem_happy])
    OMPI_CHECK_KNEM([btl_sm],
        [btl_sm_knem_happy=1],
        [btl_sm_knem_happy=0])

    AC_DEFINE_UNQUOTED([OMPI_BTL_SM_HAVE_KNEM],
        [$btl_sm_knem_happy],
        [If knem support can be enabled])
    [$1]
    # substitute in the things needed to build KNEM
    AC_SUBST([btl_sm_CPPFLAGS])
    OPAL_VAR_SCOPE_POP
])
m4trace:config/autogen_found_items.m4:396: -1- m4_include([ompi/mca/btl/vader/configure.m4])
m4trace:ompi/mca/btl/vader/configure.m4:22: -1- AC_DEFUN([OMPI_CHECK_XPMEM], [
    OPAL_VAR_SCOPE_PUSH([ompi_check_xpmem_happy])
    AC_ARG_WITH([xpmem],
                [AC_HELP_STRING([--with-xpmem(=DIR)],
                [Build with XPMEM kernel module support, searching for headers in DIR])])
    OMPI_CHECK_WITHDIR([xpmem], [$with_xpmem], [include/xpmem.h])

    AC_ARG_WITH([xpmem-libdir],
                [AC_HELP_STRING([--with-xpmem-libdir=DIR],
                                [Search for XPMEM library in DIR])])
    OMPI_CHECK_WITHDIR([xpmem-libdir], [$with_xpmem_libdir], [libxpmem.*])

    ompi_check_xpmem_happy="no"

    if test ! "$with_xpmem" = "no" ; then
	if test ! -z "$with_xpmem" -a "$with_xpmem" != "yes" ; then
	    ompi_check_xpmem_dir="$with_xpmem"
	fi

	if test ! -z "$with_xpmem_libdir" -a "$with_xpmem_libdir" != "yes" ; then
	    ompi_check_xpmem_libdir="$with_xpmem_libdir"
	fi

	OMPI_CHECK_PACKAGE([$1],[xpmem.h],[xpmem],[xpmem_make],[],
	    [$ompi_check_xpmem_dir],[$ompi_check_xpmem_libdir], [ompi_check_xpmem_happy="yes"], [])

	if test "$ompi_check_xpmem_happy" = "no" -a -n "$with_xpmem" -a "$with_xpmem" != "yes" ; then
	    AC_MSG_ERROR([XPMEM support requested but not found.  Aborting])
	fi
    fi

    AS_IF([test "$ompi_check_xpmem_happy" = "yes"], [$2], [$3])

    OPAL_VAR_SCOPE_POP
])
m4trace:ompi/mca/btl/vader/configure.m4:61: -1- AC_DEFUN([MCA_ompi_btl_vader_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/btl/vader/Makefile])

    OPAL_VAR_SCOPE_PUSH([btl_vader_xpmem_happy btl_vader_cma_happy])

    btl_vader_cma_happy=0
    btl_vader_xpmem_happy=0

    # default to using XPMEM if it is available
    OMPI_CHECK_XPMEM([btl_vader], [btl_vader_xpmem_happy=1], [])

    AC_DEFINE_UNQUOTED([OMPI_BTL_VADER_HAVE_XPMEM], [$btl_vader_xpmem_happy],
        [If XPMEM support can be enabled within vader])

    if test $btl_vader_xpmem_happy = 0 ; then
        # check for CMA if requested. it won't be used if xpmem was available
	OMPI_CHECK_CMA([btl_vader], [btl_vader_cma_happy=1], [])
    fi

    AC_DEFINE_UNQUOTED([OMPI_BTL_VADER_HAVE_CMA], [$btl_vader_cma_happy],
        [If CMA support can be enabled within vader])

    OPAL_VAR_SCOPE_POP

    # always happy
    [$1]

    # substitute in the things needed to build with XPMEM support
    AC_SUBST([btl_vader_CFLAGS])
    AC_SUBST([btl_vader_CPPFLAGS])
    AC_SUBST([btl_vader_LDFLAGS])
    AC_SUBST([btl_vader_LIBS])
])
m4trace:config/autogen_found_items.m4:397: -1- m4_include([ompi/mca/btl/usnic/configure.m4])
m4trace:ompi/mca/btl/usnic/configure.m4:33: -1- AC_DEFUN([OMPI_CHECK_LIBNL3], [
    AC_ARG_WITH([libnl3],
        [AC_HELP_STRING([--with-libnl3(=DIR)],
             [Build libnl3 support])])
    OMPI_CHECK_WITHDIR([libnl3], [$with_libnl3], [include/libnl3/netlink/netlink.h])
    AC_ARG_WITH([libnl3-libdir],
        [AC_HELP_STRING([--with-libnl3-libdir=DIR],
             [Search for libnl3 libraries in DIR])])
    OMPI_CHECK_WITHDIR([libnl3-libdir], [$with_libnl3_libdir], [libnl-3.*])

    ompi_check_libnl3_$1_save_CPPFLAGS="$CPPFLAGS"
    ompi_check_libnl3_$1_save_LDFLAGS="$LDFLAGS"
    ompi_check_libnl3_$1_save_LIBS="$LIBS"

    ompi_check_libnl3_$1_orig_CPPFLAGS="$$1_CPPFLAGS"
    ompi_check_libnl3_$1_orig_LDFLAGS="$$1_LDFLAGS"
    ompi_check_libnl3_$1_orig_LIBS="$$1_LIBS"

    AS_IF([test "$with_libnl3" != "no"],
          [AS_IF([test ! -z "$with_libnl3" -a "$with_libnl3" != "yes"],
                 [ompi_check_libnl3_dir="$with_libnl3"])
           AS_IF([test ! -z "$with_libnl3_libdir" -a "$with_libnl3_libdir" != "yes"],
                 [ompi_check_libnl3_libdir="$with_libnl3_libdir"])

           # OMPI_CHECK_PACKAGE unfortunately can't handle this weird include
           # dir layout
           AS_IF([test -n "$ompi_check_libnl3_dir"],
                 [ompi_check_libnl3_includedir="$ompi_check_libnl3_dir/include/libnl3"],
                 [ompi_check_libnl3_includedir="/usr/include/libnl3"])
           $1_CPPFLAGS="$$1_CPPFLAGS -I$ompi_check_libnl3_includedir"
           CPPFLAGS="$CPPFLAGS -I$ompi_check_libnl3_includedir"

           AC_CHECK_HEADER([netlink/netlink.h],
                           [# nl_recvmsgs_report appears to be a symbol which
                            # is present in libnl-3 but not libnl (v1)
                            _OMPI_CHECK_PACKAGE_LIB([$1],
                                                    [nl-3],
                                                    [nl_recvmsgs_report],
                                                    [],
                                                    [$ompi_check_libnl3_dir],
                                                    [$ompi_check_libnl3_libdir],
                                                    [ompi_check_libnl3_happy="yes"],
                                                    [ompi_check_libnl3_happy="no"])],
                           [ompi_check_libnl3_happy=no])

           # make sure that we don't pollute the cache with the results of a
           # test performed under different CPPFLAGS
           AS_UNSET([ac_cv_header_netlink_netlink_h])],
          [ompi_check_libnl3_happy="no"])

    # restore global flags
    CPPFLAGS="$ompi_check_libnl3_$1_save_CPPFLAGS"
    LDFLAGS="$ompi_check_libnl3_$1_save_LDFLAGS"
    LIBS="$ompi_check_libnl3_$1_save_LIBS"

    AS_IF([test "$ompi_check_libnl3_happy" = "yes"],
          [$2],
          [AS_IF([test ! -z "$with_libnl3" -a "$with_libnl3" != "no"],
                 [AC_MSG_ERROR([libnl3 support requested but not found.  Aborting])])
           # restore prefixed flags on failure
           $1_CPPFLAGS="$ompi_check_package_$1_orig_CPPFLAGS"
           $1_LDFLAGS="$ompi_check_package_$1_orig_LDFLAGS"
           $1_LIBS="$ompi_check_package_$1_orig_LIBS"
           $3])
])
m4trace:ompi/mca/btl/usnic/configure.m4:101: -1- AC_DEFUN([MCA_ompi_btl_usnic_POST_CONFIG], [
    AM_CONDITIONAL([OMPI_BTL_USNIC_BUILD_UNIT_TESTS],
                   [test "$1" -eq 1 && test "X$enable_ompi_btl_usnic_unit_tests" = "Xyes"])
    AM_CONDITIONAL([OMPI_BTL_USNIC_BUILD_LIBNL1_UTILS],
                   [test "$1" -eq 1 && test "X$enable_ompi_btl_usnic_libnl1_utils" = "Xyes"])
    AM_CONDITIONAL([OMPI_BTL_USNIC_BUILD_LIBNL3_UTILS],
                   [test "$1" -eq 1 && test "X$enable_ompi_btl_usnic_libnl3_utils" = "Xyes"])
])
m4trace:ompi/mca/btl/usnic/configure.m4:113: -1- AC_DEFUN([MCA_ompi_btl_usnic_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/btl/usnic/Makefile])

    AC_ARG_WITH([usnic],
                [AS_HELP_STRING([--with-usnic],
                                [If specified, cause an error if usNIC
                                 support cannot be built])])

    # If --without-usnic was specified, then gracefully exit.
    # Otherwise, do the rest of the config.
    AS_IF([test "x$with_usnic" = "xno"],
          [AC_MSG_WARN([--without-usnic specified; skipping usnic BTL])
           $2],
          [OMPI_BTL_USNIC_DO_CONFIG($1, $2)])
])
m4trace:ompi/mca/btl/usnic/configure.m4:129: -1- AC_DEFUN([OMPI_BTL_USNIC_DO_CONFIG], [
    # see README.test for information about this scheme
    AC_ARG_ENABLE([ompi-btl-usnic-unit-tests],
                  [AS_HELP_STRING([--enable-ompi-btl-usnic-unit-tests],
                                  [build unit tests for the usnic BTL,
                                   including the test runner program,
                                   ompi_btl_usnic_run_tests])])
    AS_IF([test "X$enable_ompi_btl_usnic_unit_tests" = "Xyes"],
          [unit_tests=1
           AC_MSG_NOTICE([enabling usnic BTL unit tests])],
          [unit_tests=0])
    AC_DEFINE_UNQUOTED([OMPI_BTL_USNIC_UNIT_TESTS], [$unit_tests],
                       [define to 1 if usnic BTL unit tests are enabled, 0 otherwise])
    unset unit_tests

    # for if_nametoindex(3)
    AC_CHECK_HEADERS([net/if.h])

    OMPI_CHECK_OPENFABRICS([btl_usnic],
                        [btl_usnic_happy="yes"],
                        [btl_usnic_happy="no"])

    # We only want to build on 64 bit Linux.
    AS_IF([test "$btl_usnic_happy" = "yes"],
          [AC_CHECK_SIZEOF([void *])
           AC_MSG_CHECKING([for 64 bit Linux])
           case $host_os in
               *linux*)
                   AS_IF([test $ac_cv_sizeof_void_p -eq 8],
                         [btl_usnic_happy=yes],
                         [btl_usnic_happy=no])
                   ;;
               *)
                   btl_usnic_happy=no
                   ;;
           esac
           AC_MSG_RESULT([$btl_usnic_happy])
          ]
    )

    AS_IF([test "$btl_usnic_happy" = "yes"],
          [AC_CHECK_DECLS([IBV_EVENT_GID_CHANGE, ibv_event_type_str], [], [],
                          [#include <infiniband/verbs.h>
])
          ]
    )

    # Search for libnl so we can query routing information.  We need to
    # distinguish between v1 and v3.
    enable_ompi_btl_usnic_libnl1_utils=no
    enable_ompi_btl_usnic_libnl3_utils=no
    AS_IF([test "$btl_usnic_happy" = "yes"],
          [OMPI_CHECK_LIBNL3([btl_usnic_libnl],
                             [enable_ompi_btl_usnic_libnl3_utils=yes],
                             [enable_ompi_btl_usnic_libnl3_utils=no])

           # fall back to libnl1 if libnl3 could not be found
           AS_IF([test "X$enable_ompi_btl_usnic_libnl3_utils" = "Xno"],
                 [OMPI_CHECK_PACKAGE([btl_usnic_libnl],
                                     [netlink/netlink.h],
                                     [nl],
                                     [nl_recvmsgs_default],
                                     [],
                                     [],
                                     [],
                                     [enable_ompi_btl_usnic_libnl1_utils=yes],
                                     [enable_ompi_btl_usnic_libnl1_utils=no])])

           AS_IF([test "X$enable_ompi_btl_usnic_libnl3_utils" = "Xno" &&
                  test "X$enable_ompi_btl_usnic_libnl1_utils" = "Xno"],
                 [AC_MSG_NOTICE([could not find a libnl or libnl-3, disabling the usnic BTL])
                  btl_usnic_happy="no"])

           btl_usnic_CPPFLAGS="$btl_usnic_CPPFLAGS $btl_usnic_libnl_CPPFLAGS"
           btl_usnic_CFLAGS="$btl_usnic_CFLAGS $btl_usnic_libnl_CFLAGS"
           btl_usnic_LDFLAGS="$btl_usnic_LDFLAGS $btl_usnic_libnl_LDFLAGS"
           btl_usnic_LIBS="$btl_usnic_libnl_LIBS $btl_usnic_LIBS"
           ])

    AS_IF([test "$btl_usnic_happy" = "yes"],
          [btl_usnic_WRAPPER_EXTRA_LDFLAGS="$btl_usnic_LDFLAGS"
           btl_usnic_WRAPPER_EXTRA_LIBS="$btl_usnic_LIBS"
           $1],
          [AS_IF([test "$with_usnic" = "yes"],
                 [AC_MSG_WARN([--with-usnic specified, but usNIC support cannot be built])
                  AC_MSG_ERROR([Cannot continue])],
                 [$2])
          ])

    # Substitute in the things needed to build USNIC
    AC_SUBST([btl_usnic_CPPFLAGS])
    AC_SUBST([btl_usnic_CFLAGS])
    AC_SUBST([btl_usnic_LDFLAGS])
    AC_SUBST([btl_usnic_LIBS])
])
m4trace:config/autogen_found_items.m4:398: -1- m4_include([ompi/mca/btl/smcuda/configure.m4])
m4trace:ompi/mca/btl/smcuda/configure.m4:18: -1- AC_DEFUN([MCA_ompi_btl_smcuda_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/btl/smcuda/Makefile])

    # make sure that CUDA-aware checks have been done
    AC_REQUIRE([OPAL_CHECK_CUDA])

    # Only build if CUDA 4.1 support is available
    AS_IF([test "x$CUDA_SUPPORT_41" = "x1"],
          [$1],
          [$2])

])
m4trace:config/autogen_found_items.m4:399: -1- m4_include([ompi/mca/btl/portals4/configure.m4])
m4trace:ompi/mca/btl/portals4/configure.m4:25: -1- AC_DEFUN([MCA_ompi_btl_portals4_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/btl/portals4/Makefile])

    OMPI_CHECK_PORTALS4([btl_portals4],
                     [btl_portals4_happy="yes"],
                     [btl_portals4_happy="no"])

    AS_IF([test "$btl_portals4_happy" = "yes"],
          [btl_portals4_WRAPPER_EXTRA_LDFLAGS="$btl_portals4_LDFLAGS"
           btl_portals4_WRAPPER_EXTRA_LIBS="$btl_portals4_LIBS"
           $1],
          [$2])

    # need to propogate CPPFLAGS to all of OMPI
    AS_IF([test "$DIRECT_btl" = "portals4"],
          [CPPFLAGS="$CPPFLAGS $btl_portals4_CPPFLAGS"])

    AC_ARG_ENABLE([btl-portals4-flow-control],
       [AC_HELP_STRING([--enable-btl-portals4-flow-control],
           [enable flow control for Portals 4 BTL (default: disabled)])])
    AC_MSG_CHECKING([whether to enable flow control])
    if test "$enable_btl_portals4_flow_control" != "yes"; then
        AC_MSG_RESULT([no])
        btl_portals4_flow_control_enabled=0
    else
        AC_MSG_RESULT([no])
        btl_portals4_flow_control_enabled=0
    fi
    AC_DEFINE_UNQUOTED([OMPI_BTL_PORTALS4_FLOW_CONTROL],
        [$btl_portals4_flow_control_enabled],
        [Enable flow control for Portals4 BTL])
    AM_CONDITIONAL([OMPI_BTL_PORTALS4_FLOW_CONTROL],
        [test "$btl_portals4_flow_control_enabled" = "1"])

    # substitute in the things needed to build portals4
    AC_SUBST([btl_portals4_CPPFLAGS])
    AC_SUBST([btl_portals4_LDFLAGS])
    AC_SUBST([btl_portals4_LIBS])
])
m4trace:config/autogen_found_items.m4:400: -1- m4_include([ompi/mca/coll/hierarch/configure.m4])
m4trace:ompi/mca/coll/hierarch/configure.m4:16: -1- AC_DEFUN([MCA_ompi_coll_hierarch_POST_CONFIG], [
    AS_IF([test "$1" = "1"], [OMPI_REQUIRE_ENDPOINT_TAG([BML])])
])
m4trace:ompi/mca/coll/hierarch/configure.m4:24: -1- AC_DEFUN([MCA_ompi_coll_hierarch_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/coll/hierarch/Makefile])
    [$1]
])
m4trace:config/autogen_found_items.m4:401: -1- m4_include([ompi/mca/coll/hcoll/configure.m4])
m4trace:ompi/mca/coll/hcoll/configure.m4:17: -1- AC_DEFUN([MCA_ompi_coll_hcoll_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/coll/hcoll/Makefile])

    OMPI_CHECK_HCOLL([coll_hcoll],
                     [coll_hcoll_happy="yes"],
                     [coll_hcoll_happy="no"])

    AS_IF([test "$coll_hcoll_happy" = "yes"],
          [coll_hcoll_WRAPPER_EXTRA_LDFLAGS="$coll_hcoll_LDFLAGS"
           coll_hcoll_CPPFLAGS="$coll_hcoll_CPPFLAGS"
           coll_hcoll_WRAPPER_EXTRA_CPPFLAGS="$coll_hcoll_CPPFLAGS"
           coll_hcoll_WRAPPER_EXTRA_LIBS="$coll_hcoll_LIBS"
           $1],
          [$2])

    # substitute in the things needed to build hcoll
    AC_SUBST([coll_hcoll_CFLAGS])
    AC_SUBST([coll_hcoll_CPPFLAGS])
    AC_SUBST([coll_hcoll_LDFLAGS])
    AC_SUBST([coll_hcoll_LIBS])
])
m4trace:config/autogen_found_items.m4:402: -1- m4_include([ompi/mca/coll/portals4/configure.m4])
m4trace:ompi/mca/coll/portals4/configure.m4:14: -1- AC_DEFUN([MCA_ompi_coll_portals4_POST_CONFIG], [
    AS_IF([test "$1" = "1"], [OMPI_REQUIRE_ENDPOINT_TAG([PORTALS4])])
])
m4trace:ompi/mca/coll/portals4/configure.m4:21: -1- AC_DEFUN([MCA_ompi_coll_portals4_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/coll/portals4/Makefile])

    OMPI_CHECK_PORTALS4([coll_portals4],
                     [coll_portals4_happy="yes"],
                     [coll_portals4_happy="no"])

    AS_IF([test "$coll_portals4_happy" = "yes"],
          [$1],
          [$2])

    AC_SUBST([coll_portals4_CPPFLAGS])
    AC_SUBST([coll_portals4_LDFLAGS])
    AC_SUBST([coll_portals4_LIBS])
])
m4trace:config/autogen_found_items.m4:403: -1- m4_include([ompi/mca/coll/fca/configure.m4])
m4trace:ompi/mca/coll/fca/configure.m4:17: -1- AC_DEFUN([MCA_ompi_coll_fca_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/coll/fca/Makefile])

    OMPI_CHECK_FCA([coll_fca],
                     [coll_fca_happy="yes"],
                     [coll_fca_happy="no"])

    AS_IF([test "$coll_fca_happy" = "yes"],
          [$1],
          [$2])

    # substitute in the things needed to build fca
    AC_SUBST([coll_fca_CFLAGS])
    AC_SUBST([coll_fca_CPPFLAGS])
    AC_SUBST([coll_fca_LDFLAGS])
    AC_SUBST([coll_fca_LIBS])
])
m4trace:config/autogen_found_items.m4:404: -1- m4_include([ompi/mca/crcp/bkmrk/configure.m4])
m4trace:ompi/mca/crcp/bkmrk/configure.m4:21: -1- AC_DEFUN([MCA_ompi_crcp_bkmrk_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/crcp/bkmrk/Makefile])

    # If we don't want FT, don't compile this component
    AS_IF([test "$opal_want_ft_cr" = "1"],
        [$1],
        [$2])
])
m4trace:config/autogen_found_items.m4:405: -1- m4_include([ompi/mca/dpm/orte/configure.m4])
m4trace:ompi/mca/dpm/orte/configure.m4:15: -1- AC_DEFUN([MCA_ompi_dpm_orte_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/dpm/orte/Makefile])

    AC_ARG_WITH([orte],
        AC_HELP_STRING([--with-orte],
                       [Use ORTE run-time environment (default: yes)]))
    AS_IF([test "$with_orte" != "no"],
          [$1],
          [$2])
])
m4trace:config/autogen_found_items.m4:406: -1- m4_include([ompi/mca/fbtl/pvfs2/configure.m4])
m4trace:ompi/mca/fbtl/pvfs2/configure.m4:26: -1- AC_DEFUN([MCA_ompi_fbtl_pvfs2_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/fbtl/pvfs2/Makefile])

    OMPI_CHECK_PVFS2([fbtl_pvfs2],
                     [fbtl_pvfs2_happy="yes"],
                     [fbtl_pvfs2_happy="no"])

    AS_IF([test "$fbtl_pvfs2_happy" = "yes"],
          [$1],
          [$2])



    # substitute in the things needed to build pvfs2
    AC_SUBST([fbtl_pvfs2_CPPFLAGS])
    AC_SUBST([fbtl_pvfs2_LDFLAGS])
    AC_SUBST([fbtl_pvfs2_LIBS])
])
m4trace:config/autogen_found_items.m4:407: -1- m4_include([ompi/mca/fbtl/posix/configure.m4])
m4trace:ompi/mca/fbtl/posix/configure.m4:25: -1- AC_DEFUN([MCA_ompi_fbtl_posix_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/fbtl/posix/Makefile])

    fbtl_posix_happy=no
    AC_CHECK_HEADER([aio.h],
                    [dnl NetBSD has aio_* in -lrt, vs. the usual libc
                     OPAL_SEARCH_LIBS_COMPONENT([fbtl_posix],
                                    [aio_write], [rt],
                                    [fbtl_posix_happy="yes"])])

    AS_IF([test "$fbtl_posix_happy" = "yes"],
          [$1],
          [$2])
])
m4trace:config/autogen_found_items.m4:408: -1- m4_include([ompi/mca/fs/pvfs2/configure.m4])
m4trace:ompi/mca/fs/pvfs2/configure.m4:26: -1- AC_DEFUN([MCA_ompi_fs_pvfs2_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/fs/pvfs2/Makefile])

    OMPI_CHECK_PVFS2([fs_pvfs2],
                     [fs_pvfs2_happy="yes"],
                     [fs_pvfs2_happy="no"])

    AS_IF([test "$fs_pvfs2_happy" = "yes"],
          [$1],
          [$2])

#    AC_CHECK_HEADERS([pvfs2.h], [],
#                      [AC_CHECK_HEADERS([pvfs2.h], [], [$2],
#                          [AC_INCLUDES_DEFAULT])],
#                      [AC_INCLUDES_DEFAULT])


    # substitute in the things needed to build pvfs2
    AC_SUBST([fs_pvfs2_CPPFLAGS])
    AC_SUBST([fs_pvfs2_LDFLAGS])
    AC_SUBST([fs_pvfs2_LIBS])
])
m4trace:config/autogen_found_items.m4:409: -1- m4_include([ompi/mca/io/romio/configure.m4])
m4trace:ompi/mca/io/romio/configure.m4:21: -1- AC_DEFUN([MCA_ompi_io_romio_POST_CONFIG], [
    AS_IF([test $1 -eq 0 -a "$enable_dist" = "yes"],
          [AC_MSG_ERROR([ROMIO disabled but --enable-dist specifed.  This will result in a bad tarball.  Aborting configure.])])
    AM_CONDITIONAL([MCA_io_romio_SHOULD_BUILD], [test $1 -eq 1])

])
m4trace:ompi/mca/io/romio/configure.m4:31: -1- AC_DEFUN([MCA_ompi_io_romio_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/io/romio/Makefile])

    OPAL_VAR_SCOPE_PUSH([io_romio_flags io_romio_flags_define io_romio_happy io_romio_save_LIBS])
    AC_ARG_ENABLE([io-romio],
                  [AC_HELP_STRING([--disable-io-romio],
                                  [Disable the ROMIO MPI-IO component])])
    AC_ARG_WITH([io-romio-flags], 
                [AC_HELP_STRING([--with-io-romio-flags=FLAGS],
                                [Pass FLAGS to the ROMIO distribution configuration script])])
    AC_DEFINE_UNQUOTED([MCA_io_romio_USER_CONFIGURE_FLAGS], ["$with_io_romio_flags"], [Set of user-defined configure flags given to ROMIOs configure script via --with-io-romio-flags])
    AC_MSG_CHECKING([if want ROMIO component])
    AS_IF([test "$enable_io_romio" = "no"],
           [AC_MSG_RESULT([no])
            $2], 
           [AC_MSG_RESULT([yes])
            AC_MSG_CHECKING([if MPI profiling is enabled])
            AS_IF([test "$enable_mpi_profile" = "no"],
                  [AC_MSG_RESULT([no])
                   AC_MSG_WARN([*** The ROMIO io component requires the MPI profiling layer])
                   AS_IF([test "$enable_io_romio" = "yes"],
                         [AC_MSG_ERROR([*** ROMIO requested but not available.  Aborting])])
                   $2],
                  [AC_MSG_RESULT([yes])

                   AS_IF([test -n "$with_io_romio_flags" -a "$with_io_romio_flags" != "no"],
                         [io_romio_flags="$with_io_romio_flags $io_romio_flags"],
                         [io_romio_flags=])
                   # If ROMIO is going to end up in a DSO, all we need is
                   # shared library-ized objects, as we're only building a
                   # DSO (which is always shared).  Otherwise, build with
                   # same flags as OMPI, as we might need any combination of
                   # shared and static-ized objects...
                   AS_IF([test "$compile_mode" = "dso"],
                         [io_romio_shared=enable
                          io_romio_static=disable],
                         [AS_IF([test "$enable_shared" = "yes"],
                                [io_romio_shared=enable],
                                [io_romio_shared=disable])
                          AS_IF([test "$enable_static" = "yes"], 
                                [io_romio_static=enable],
                                [io_romio_static=disable])])
                   AS_IF([test -n "$prefix" -a "$prefix" != "NONE"], 
                         [io_romio_prefix_arg="--prefix=$prefix"], 
                         [io_romio_prefix_arg=])

                   AS_IF([test "$cross_compiling" = "yes"],
                       [AS_IF([test ! -z $build], [io_romio_flags="$io_romio_flags --build=$build"])
                        AS_IF([test ! -z $host], [io_romio_flags="$io_romio_flags --host=$host"])
                        AS_IF([test ! -z $target], [io_romio_flags="$io_romio_flags --target=$target"])])
                   io_romio_flags_define="$io_romio_flags FROM_OMPI=yes CC='$CC' CFLAGS='$CFLAGS' CPPFLAGS='$CPPFLAGS' FFLAGS='$FFLAGS' LDFLAGS='$LDFLAGS' --$io_romio_shared-shared --$io_romio_static-static $io_romio_flags $io_romio_prefix_arg --disable-aio"
                   AC_DEFINE_UNQUOTED([MCA_io_romio_COMPLETE_CONFIGURE_FLAGS], ["$io_romio_flags_define"], [Complete set of command line arguments given to ROMIOs configure script])

                   io_romio_flags="$io_romio_flags FROM_OMPI=yes CC="'"'"$CC"'"'" CFLAGS="'"'"$CFLAGS"'"'" CPPFLAGS="'"'"$CPPFLAGS"'"'" FFLAGS="'"'"$FFLAGS"'"'" LDFLAGS="'"'"$LDFLAGS"'"'" --$io_romio_shared-shared --$io_romio_static-static $io_romio_flags $io_romio_prefix_arg --disable-aio"

                   ompi_show_subtitle "Configuring ROMIO distribution"
                   OMPI_CONFIG_SUBDIR([ompi/mca/io/romio/romio], 
                                      [$io_romio_flags],
                                      [io_romio_happy=1], [io_romio_happy=0])

                   AS_IF([test "$io_romio_happy" = "1"],
                         [ # grab the libraries list from ROMIO.  We don't
                           # need this for building the component, as libtool
                           # will figure that part out.  But we do need it for
                           # the wrapper settings
                          io_romio_save_LIBS="$LIBS"
                          LIBS=
                          . ompi/mca/io/romio/romio/localdefs
                          io_romio_LIBS="$LIBS"
                          LIBS="$io_romio_save_LIBS"

                          echo "ROMIO distribution configured successfully"
                          $1],
                         [AS_IF([test "$enable_io_romio" = "yes"],
                                [AC_MSG_ERROR([ROMIO distribution did not configure successfully])],
                                [AC_MSG_WARN([ROMIO distribution did not configure successfully])])
                          $2])])])
    OPAL_VAR_SCOPE_POP
])
m4trace:config/autogen_found_items.m4:410: -1- m4_include([ompi/mca/mpool/udreg/configure.m4])
m4trace:ompi/mca/mpool/udreg/configure.m4:24: -1- AC_DEFUN([MCA_ompi_mpool_udreg_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/mpool/udreg/Makefile])

    AC_ARG_WITH([udreg], [AC_HELP_STRING([--with-udreg(=DIR)],
		[Build support for Cray udreg support, optionally adding DIR/include, DIR/lib, and DIR/lib64 to the search path for headers and libraries])])
    OMPI_CHECK_WITHDIR([udreg], [$with_udreg], [.])

    mpool_udreg_happy="no"

    if test "$with_udreg" != "no" ; then
	if test -n "$with_udreg" -a "$with_udreg" != "yes" ; then
	    ompi_check_udreg_dir="$with_udreg"
	else
	    ompi_check_udreg_dir=""
	fi

	OMPI_CHECK_PACKAGE([mpool_udreg], [udreg_pub.h], [udreg], [UDREG_CacheCreate],
	                   [], [$ompi_check_udreg_dir], ["$ompi_check_udreg_dir/lib64"],
			   [mpool_udreg_happy="yes"], [mpool_udreg_happy="no"])
    fi

    AS_IF([test "$mpool_udreg_happy" = "yes"], [$1], [$2])

    # substitute in the things needed to build ugni
    AC_SUBST([mpool_udreg_CPPFLAGS])
    AC_SUBST([mpool_udreg_LDFLAGS])
    AC_SUBST([mpool_udreg_LIBS])
])
m4trace:config/autogen_found_items.m4:411: -1- m4_include([ompi/mca/mpool/rgpusm/configure.m4])
m4trace:ompi/mca/mpool/rgpusm/configure.m4:17: -1- AC_DEFUN([MCA_ompi_mpool_rgpusm_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/mpool/rgpusm/Makefile])

    # Use CUDA_SUPPORT which was filled in by the opal configure code.
    AS_IF([test "x$CUDA_SUPPORT_41" = "x1"],
          [$1],
          [$2])

])
m4trace:config/autogen_found_items.m4:412: -1- m4_include([ompi/mca/mpool/gpusm/configure.m4])
m4trace:ompi/mca/mpool/gpusm/configure.m4:17: -1- AC_DEFUN([MCA_ompi_mpool_gpusm_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/mpool/gpusm/Makefile])

    # Use CUDA_SUPPORT which was filled in by the opal configure code.
    AS_IF([test "x$CUDA_SUPPORT_41" = "x1"],
          [$1],
          [$2])

])
m4trace:config/autogen_found_items.m4:413: -1- m4_include([ompi/mca/mtl/psm/configure.m4])
m4trace:ompi/mca/mtl/psm/configure.m4:25: -1- AC_DEFUN([MCA_ompi_mtl_psm_POST_CONFIG], [
    AS_IF([test "$1" = "1"], [OMPI_REQUIRE_ENDPOINT_TAG([MTL])])
])
m4trace:ompi/mca/mtl/psm/configure.m4:32: -1- AC_DEFUN([MCA_ompi_mtl_psm_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/mtl/psm/Makefile])

    OMPI_CHECK_PSM([mtl_psm],
                     [mtl_psm_happy="yes"],
                     [mtl_psm_happy="no"])

    AS_IF([test "$mtl_psm_happy" = "yes"],
          [$1],
          [$2])

    # substitute in the things needed to build psm
    AC_SUBST([mtl_psm_CFLAGS])
    AC_SUBST([mtl_psm_CPPFLAGS])
    AC_SUBST([mtl_psm_LDFLAGS])
    AC_SUBST([mtl_psm_LIBS])
])
m4trace:config/autogen_found_items.m4:414: -1- m4_include([ompi/mca/mtl/portals4/configure.m4])
m4trace:ompi/mca/mtl/portals4/configure.m4:25: -1- AC_DEFUN([MCA_ompi_mtl_portals4_POST_CONFIG], [
    AS_IF([test "$1" = "1"], [OMPI_REQUIRE_ENDPOINT_TAG([PORTALS4])])
])
m4trace:ompi/mca/mtl/portals4/configure.m4:32: -1- AC_DEFUN([MCA_ompi_mtl_portals4_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/mtl/portals4/Makefile])

    OMPI_CHECK_PORTALS4([mtl_portals4],
                     [mtl_portals4_happy="yes"],
                     [mtl_portals4_happy="no"])

    AS_IF([test "$mtl_portals4_happy" = "yes"],
          [$1],
          [$2])

    # need to propogate CPPFLAGS to all of OMPI
    AS_IF([test "$DIRECT_mtl" = "portals4"],
          [mtl_portals4_WRAPPER_EXTRA_CPPFLAGS="$mtl_portals4_CPPFLAGS"
           CPPFLAGS="$CPPFLAGS $mtl_portals4_CPPFLAGS"])

    AC_ARG_ENABLE([mtl-portals4-flow-control],
       [AC_HELP_STRING([--enable-mtl-portals4-flow-control],
           [enable flow control for Portals 4 MTL (default: disabled)])])
    AC_MSG_CHECKING([whether to enable flow control])
    if test "$enable_mtl_portals4_flow_control" != "no"; then
        AC_MSG_RESULT([yes])
        mtl_portals4_flow_control_enabled=1
    else
        AC_MSG_RESULT([no])
        mtl_portals4_flow_control_enabled=0
    fi
    AC_DEFINE_UNQUOTED([OMPI_MTL_PORTALS4_FLOW_CONTROL],
        [$mtl_portals4_flow_control_enabled],
        [Enable flow control for Portals4 MTL])
    AM_CONDITIONAL([OMPI_MTL_PORTALS4_FLOW_CONTROL],
        [test "$mtl_portals4_flow_control_enabled" = "1"])

    # substitute in the things needed to build portals4
    AC_SUBST([mtl_portals4_CPPFLAGS])
    AC_SUBST([mtl_portals4_LDFLAGS])
    AC_SUBST([mtl_portals4_LIBS])
])
m4trace:config/autogen_found_items.m4:415: -1- m4_include([ompi/mca/mtl/mxm/configure.m4])
m4trace:ompi/mca/mtl/mxm/configure.m4:15: -1- AC_DEFUN([MCA_ompi_mtl_mxm_POST_CONFIG], [
    AS_IF([test "$1" = "1"], [OMPI_REQUIRE_ENDPOINT_TAG([MTL])])
])
m4trace:ompi/mca/mtl/mxm/configure.m4:22: -1- AC_DEFUN([MCA_ompi_mtl_mxm_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/mtl/mxm/Makefile])

    OMPI_CHECK_MXM([mtl_mxm],
                   [mtl_mxm_happy="yes"],
                   [mtl_mxm_happy="no"])

    AS_IF([test "$mtl_mxm_happy" = "yes"],
          [$1],
          [$2])

    # substitute in the things needed to build mxm
    AC_SUBST([mtl_mxm_CFLAGS])
    AC_SUBST([mtl_mxm_CPPFLAGS])
    AC_SUBST([mtl_mxm_LDFLAGS])
    AC_SUBST([mtl_mxm_LIBS])
])
m4trace:config/autogen_found_items.m4:416: -1- m4_include([ompi/mca/mtl/mx/configure.m4])
m4trace:ompi/mca/mtl/mx/configure.m4:25: -1- AC_DEFUN([MCA_ompi_mtl_mx_POST_CONFIG], [
    AS_IF([test "$1" = "1"], [OMPI_REQUIRE_ENDPOINT_TAG([MTL])])
])
m4trace:ompi/mca/mtl/mx/configure.m4:32: -1- AC_DEFUN([MCA_ompi_mtl_mx_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/mtl/mx/Makefile])

    OMPI_CHECK_MX([mtl_mx],
                  [mtl_mx_happy="yes"],
                  [mtl_mx_happy="no"])

    AS_IF([test "$mtl_mx_happy" = "yes"],
          [$1],
          [$2])

    # substitute in the things needed to build mx
    AC_SUBST([mtl_mx_CFLAGS])
    AC_SUBST([mtl_mx_CPPFLAGS])
    AC_SUBST([mtl_mx_LDFLAGS])
    AC_SUBST([mtl_mx_LIBS])
])
m4trace:config/autogen_found_items.m4:417: -1- m4_include([ompi/mca/osc/portals4/configure.m4])
m4trace:ompi/mca/osc/portals4/configure.m4:14: -1- AC_DEFUN([MCA_ompi_osc_portals4_POST_CONFIG], [
    AS_IF([test "$1" = "1"], [OMPI_REQUIRE_ENDPOINT_TAG([PORTALS4])])
])
m4trace:ompi/mca/osc/portals4/configure.m4:21: -1- AC_DEFUN([MCA_ompi_osc_portals4_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/osc/portals4/Makefile])

    OMPI_CHECK_PORTALS4([osc_portals4],
                     [osc_portals4_happy="yes"],
                     [osc_portals4_happy="no"])

    AS_IF([test "$osc_portals4_happy" = "yes"],
          [osc_portals4_WRAPPER_EXTRA_LDFLAGS="$osc_portals4_LDFLAGS"
           osc_portals4_WRAPPER_EXTRA_LIBS="$osc_portals4_LIBS"
           $1],
          [$2])

    # need to propogate CPPFLAGS to all of OMPI
    AS_IF([test "$DIRECT_osc" = "portals4"],
          [CPPFLAGS="$CPPFLAGS $osc_portals4_CPPFLAGS"])

    # substitute in the things needed to build portals4
    AC_SUBST([osc_portals4_CPPFLAGS])
    AC_SUBST([osc_portals4_LDFLAGS])
    AC_SUBST([osc_portals4_LIBS])
])
m4trace:config/autogen_found_items.m4:418: -1- m4_include([ompi/mca/osc/rdma/configure.m4])
m4trace:ompi/mca/osc/rdma/configure.m4:15: -1- AC_DEFUN([MCA_ompi_osc_rdma_POST_CONFIG], [
    AS_IF([test "$1" = "1"], [OMPI_REQUIRE_ENDPOINT_TAG([BML])])
])
m4trace:ompi/mca/osc/rdma/configure.m4:23: -1- AC_DEFUN([MCA_ompi_osc_rdma_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/osc/rdma/Makefile])
    [$1]
])
m4trace:config/autogen_found_items.m4:419: -1- m4_include([ompi/mca/pml/crcpw/configure.m4])
m4trace:ompi/mca/pml/crcpw/configure.m4:21: -1- AC_DEFUN([MCA_ompi_pml_crcpw_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/pml/crcpw/Makefile])

    # If we don't want FT, don't compile this component
    AS_IF([test "$opal_want_ft_cr" = "1"],
        [$1],
        [$2])
])
m4trace:config/autogen_found_items.m4:420: -1- m4_include([ompi/mca/pml/ob1/configure.m4])
m4trace:ompi/mca/pml/ob1/configure.m4:16: -1- AC_DEFUN([MCA_ompi_pml_ob1_POST_CONFIG], [
    AS_IF([test "$1" = "1"], [OMPI_REQUIRE_ENDPOINT_TAG([BML])])
])
m4trace:ompi/mca/pml/ob1/configure.m4:24: -1- AC_DEFUN([MCA_ompi_pml_ob1_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/pml/ob1/Makefile])
    [$1]
])
m4trace:config/autogen_found_items.m4:421: -1- m4_include([ompi/mca/pml/v/configure.m4])
m4trace:ompi/mca/pml/v/configure.m4:10: -1- AC_DEFUN([MCA_ompi_pml_v_COMPILE_MODE], [
    AC_MSG_CHECKING([for MCA component $2:$3 compile mode])
    $4="static"
    AC_MSG_RESULT([$$4])
])
m4trace:ompi/mca/pml/v/configure.m4:16: -1- AC_DEFUN([MCA_ompi_pml_v_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/pml/v/Makefile])
    $1
])
m4trace:config/autogen_found_items.m4:422: -1- m4_include([ompi/mca/pml/bfo/configure.m4])
m4trace:ompi/mca/pml/bfo/configure.m4:16: -1- AC_DEFUN([MCA_ompi_pml_bfo_POST_CONFIG], [
    AS_IF([test "$1" = "1"], [OMPI_REQUIRE_ENDPOINT_TAG([BML])])
])
m4trace:ompi/mca/pml/bfo/configure.m4:24: -1- AC_DEFUN([MCA_ompi_pml_bfo_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/pml/bfo/Makefile])
    [$1]
])
m4trace:config/autogen_found_items.m4:423: -1- m4_include([ompi/mca/pubsub/orte/configure.m4])
m4trace:ompi/mca/pubsub/orte/configure.m4:15: -1- AC_DEFUN([MCA_ompi_pubsub_orte_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/pubsub/orte/Makefile])

    AC_ARG_WITH([orte],
        AC_HELP_STRING([--with-orte],
                       [Use ORTE run-time environment (default: yes)]))
    AS_IF([test "$with_orte" != "no"],
          [$1],
          [$2])
])
m4trace:config/autogen_found_items.m4:424: -1- m4_include([ompi/mca/pubsub/pmi/configure.m4])
m4trace:ompi/mca/pubsub/pmi/configure.m4:12: -1- AC_DEFUN([MCA_ompi_pubsub_pmi_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/pubsub/pmi/Makefile])
         
    OPAL_CHECK_PMI([pubsub_pmi], [pubsub_pmi_good=1], [pubsub_pmi_good=0])
         
    # Evaluate succeed / fail
    AS_IF([test "$pubsub_pmi_good" = 1],
          [$1],
          [$2])

    # set build flags to use in makefile
    AC_SUBST([pubsub_pmi_CPPFLAGS])
    AC_SUBST([pubsub_pmi_LDFLAGS])
    AC_SUBST([pubsub_pmi_LIBS])

])
m4trace:config/autogen_found_items.m4:425: -1- m4_include([ompi/mca/rte/orte/configure.m4])
m4trace:ompi/mca/rte/orte/configure.m4:14: -1- AC_DEFUN([MCA_ompi_rte_orte_PRIORITY], [100])
m4trace:ompi/mca/rte/orte/configure.m4:17: -1- AC_DEFUN([MCA_ompi_rte_orte_COMPILE_MODE], [
    AC_MSG_CHECKING([for MCA component $2:$3 compile mode])
    $4="static"
    AC_MSG_RESULT([$$4])
])
m4trace:ompi/mca/rte/orte/configure.m4:24: -1- AC_DEFUN([MCA_ompi_rte_orte_POST_CONFIG], [
    AS_IF([test "$1" = "1"], [ompi_rte_base_include="orte/rte_orte.h"])
    AC_DEFINE_UNQUOTED([OMPI_RTE_ORTE], [$1],
        [Defined to 1 if the OMPI runtime component is ORTE])
    AM_CONDITIONAL([OMPI_RTE_ORTE], [test $1 = 1])
])
m4trace:ompi/mca/rte/orte/configure.m4:34: -1- AC_DEFUN([MCA_ompi_rte_orte_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/rte/orte/Makefile])

    # This will need to get more complicated when we can build against
    # an external ORTE.
    AC_ARG_WITH([orte],
        AC_HELP_STRING([--with-orte],
                       [Use ORTE run-time environment (default: yes)]))
    AS_IF([test "$with_orte" != "no"],
          [$1],
          [AC_MSG_NOTICE([ORTE disabled by user])
           $2])
])
m4trace:config/autogen_found_items.m4:426: -1- m4_include([ompi/mca/sbgp/basesmsocket/configure.m4])
m4trace:ompi/mca/sbgp/basesmsocket/configure.m4:13: -1- AC_DEFUN([MCA_ompi_sbgp_basesmsocket_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/sbgp/basesmsocket/Makefile])

    AS_IF([test "$OPAL_HAVE_HWLOC" = 1],
          [$1],
          [$2])
])
m4trace:config/autogen_found_items.m4:427: -1- m4_include([ompi/mca/sbgp/p2p/configure.m4])
m4trace:ompi/mca/sbgp/p2p/configure.m4:16: -1- AC_DEFUN([MCA_ompi_sbgp_p2p_POST_CONFIG], [
    AS_IF([test "$1" = "1"], [OMPI_REQUIRE_ENDPOINT_TAG([BML])])
])
m4trace:ompi/mca/sbgp/p2p/configure.m4:24: -1- AC_DEFUN([MCA_ompi_sbgp_p2p_CONFIG], [
    AC_CONFIG_FILES([ompi/mca/sbgp/p2p/Makefile])
    [$1]
])
m4trace:config/autogen_found_items.m4:428: -1- m4_include([oshmem/mca/memheap/configure.m4])
m4trace:oshmem/mca/memheap/configure.m4:13: -1- AC_DEFUN([MCA_oshmem_memheap_CONFIG], [
    # configure all the components
    MCA_CONFIGURE_FRAMEWORK($1, $2, 1)

    # this is a direct callable component, so set that up.
    MCA_SETUP_DIRECT_CALL($1, $2)
])
m4trace:config/autogen_found_items.m4:429: -1- m4_include([oshmem/mca/spml/configure.m4])
m4trace:oshmem/mca/spml/configure.m4:13: -1- AC_DEFUN([MCA_oshmem_spml_CONFIG], [
    # configure all the components
    MCA_CONFIGURE_FRAMEWORK($1, $2, 1)

    # this is a direct callable component, so set that up.
    MCA_SETUP_DIRECT_CALL($1, $2)
])
m4trace:config/autogen_found_items.m4:430: -1- m4_include([oshmem/mca/atomic/mxm/configure.m4])
m4trace:oshmem/mca/atomic/mxm/configure.m4:14: -1- AC_DEFUN([MCA_oshmem_atomic_mxm_CONFIG], [
    AC_CONFIG_FILES([oshmem/mca/atomic/mxm/Makefile])
    OMPI_CHECK_MXM([atomic_mxm],
                   [save_CPPFLAGS="$CPPFLAGS"
                   save_LDFLAGS="$LDFLAGS"
                   save_LIBS="$LIBS"

                   CPPFLAGS="$CPPFLAGS -I$ompi_check_mxm_dir/include"
                   LDFLAGS="$LDFLAGS -L$ompi_check_mxm_dir/lib"
                   LIBS="$LIBS -lmxm"
                   AC_COMPILE_IFELSE([AC_LANG_SOURCE([[
                                #include <mxm/api/mxm_api.h>
                                int main() {
                                if (mxm_get_version() < MXM_VERSION(1,5) )
                                    return 1;

                                /* if compiler sees these constansts then mxm has atomic support*/
                                int add_index = MXM_REQ_OP_ATOMIC_ADD;
                                int swap_index = MXM_REQ_OP_ATOMIC_SWAP;
                                return 0;
                                }]])],
                    [AC_DEFINE([OSHMEM_HAS_ATOMIC_MXM], [1], [mxm support is available]) atomic_mxm_happy="yes"],
                   [atomic_mxm_happy="no"],
                   [atomic_mxm_happy="no"])
                   CPPFLAGS=$save_CPPFLAGS
                   LDFLAGS=$save_LDFLAGS
                   LIBS=$save_LIBS
                   ],
                   [atomic_mxm_happy="no"])

    AS_IF([test "$atomic_mxm_happy" = "yes"],
          [atomic_mxm_WRAPPER_EXTRA_LDFLAGS="$atomic_mxm_LDFLAGS"
           atomic_mxm_WRAPPER_EXTRA_LIBS="$atomic_mxm_LIBS"
           $1],
          [$2])


    # substitute in the things needed to build mxm
    AC_SUBST([atomic_mxm_CFLAGS])
    AC_SUBST([atomic_mxm_CPPFLAGS])
    AC_SUBST([atomic_mxm_LDFLAGS])
    AC_SUBST([atomic_mxm_LIBS])

    AC_MSG_CHECKING([if oshmem/atomic/mxm component can be compiled])
    AC_MSG_RESULT([$atomic_mxm_happy])
])
m4trace:config/autogen_found_items.m4:431: -1- m4_include([oshmem/mca/scoll/fca/configure.m4])
m4trace:oshmem/mca/scoll/fca/configure.m4:17: -1- AC_DEFUN([MCA_oshmem_scoll_fca_CONFIG], [
    AC_CONFIG_FILES([oshmem/mca/scoll/fca/Makefile])

    OMPI_CHECK_FCA([scoll_fca],
                     [scoll_fca_happy="yes"],
                     [scoll_fca_happy="no"])

    AS_IF([test "$scoll_fca_happy" = "yes"],
          [scoll_fca_WRAPPER_EXTRA_LDFLAGS="$scoll_fca_LDFLAGS"
           scoll_fca_CPPFLAGS="$scoll_fca_CPPFLAGS"
           scoll_fca_WRAPPER_EXTRA_CPPFLAGS="$scoll_fca_CPPFLAGS"
           scoll_fca_WRAPPER_EXTRA_LIBS="$scoll_fca_LIBS"
           $1],
          [$2])

    # substitute in the things needed to build fca
    AC_SUBST([scoll_fca_CFLAGS])
    AC_SUBST([scoll_fca_CPPFLAGS])
    AC_SUBST([scoll_fca_LDFLAGS])
    AC_SUBST([scoll_fca_LIBS])
	AC_SUBST(scoll_fca_HOME, "$ompi_check_fca_dir")
])
m4trace:config/autogen_found_items.m4:432: -1- m4_include([oshmem/mca/spml/ikrit/configure.m4])
m4trace:oshmem/mca/spml/ikrit/configure.m4:14: -1- AC_DEFUN([MCA_oshmem_spml_ikrit_CONFIG], [
    AC_CONFIG_FILES([oshmem/mca/spml/ikrit/Makefile])

    OMPI_CHECK_MXM([spml_ikrit],
                   [spml_ikrit_happy="yes"],
                   [spml_ikrit_happy="no"])

    AS_IF([test "$spml_ikrit_happy" = "yes"],
          [$1],
          [$2])


    # substitute in the things needed to build mxm
    AC_SUBST([spml_ikrit_CFLAGS])
    AC_SUBST([spml_ikrit_CPPFLAGS])
    AC_SUBST([spml_ikrit_LDFLAGS])
    AC_SUBST([spml_ikrit_LIBS])
])
m4trace:config/autogen_found_items.m4:433: -1- m4_include([oshmem/mca/sshmem/verbs/configure.m4])
m4trace:oshmem/mca/sshmem/verbs/configure.m4:16: -1- AC_DEFUN([MCA_oshmem_sshmem_verbs_CONFIG], [
    AC_CONFIG_FILES([oshmem/mca/sshmem/verbs/Makefile])

    # do we have the verbs shm stuff?
    AC_MSG_CHECKING([if want verbs shared memory support])
    AC_ARG_ENABLE(verbs-sshmem,
        AC_HELP_STRING([--disable-verbs-sshmem],
                       [disable verbs shared memory support (default: enabled)]))
    AS_IF([test "$enable_verbs_sshmem" = "no"],
          [AC_MSG_RESULT([no])
           oshmem_verbs_sm_build_verbs=0],
          [AC_MSG_RESULT([yes])
           OMPI_CHECK_OPENFABRICS([oshmem_verbs],
                  [oshmem_verbs_sm_build_verbs=1],
                  [oshmem_verbs_sm_build_verbs=0])])

    # substitute in the things needed to build
    AC_SUBST([oshmem_verbs_CFLAGS])
    AC_SUBST([oshmem_verbs_CPPFLAGS])
    AC_SUBST([oshmem_verbs_LDFLAGS])
    AC_SUBST([oshmem_verbs_LIBS])

    # If we have the oshmem_verbs stuff available, find out what we've got
    AS_IF(
        [test "$oshmem_verbs_sm_build_verbs" = "1"],
        [
            OSHMEM_LIBSHMEM_EXTRA_LDFLAGS="$OSHMEM_LIBSHMEM_EXTRA_LDFLAGS $oshmem_verbs_LDFLAGS"
            OSHMEM_LIBSHMEM_EXTRA_LIBS="$OSHMEM_LIBSHMEM_EXTRA_LIBS $oshmem_verbs_LIBS"

            # ibv_reg_shared_mr was added in MOFED 1.8
            oshmem_have_mpage=0

            oshmem_verbs_save_CPPFLAGS="$CPPFLAGS"
            oshmem_verbs_save_LDFLAGS="$LDFLAGS"
            oshmem_verbs_save_LIBS="$LIBS"

            CPPFLAGS="$CPPFLAGS $oshmem_verbs_CPPFLAGS"
            LDFLAGS="$LDFLAGS $oshmem_verbs_LDFLAGS"
            LIBS="$LIBS $oshmem_verbs_LIBS"

            AC_CHECK_DECLS([IBV_ACCESS_ALLOCATE_MR,IBV_ACCESS_SHARED_MR_USER_READ],
                   [oshmem_have_mpage=2], [],
                   [#include <infiniband/verbs.h>])

            AC_CHECK_DECLS([IBV_EXP_ACCESS_ALLOCATE_MR,IBV_EXP_ACCESS_SHARED_MR_USER_READ],
                   [oshmem_have_mpage=3], [],
                   [#include <infiniband/verbs.h>])

            CPPFLAGS="$oshmem_verbs_save_CPPFLAGS"
            LDFLAGS="$oshmem_verbs_save_LDFLAGS"
            LIBS="$oshmem_verbs_save_LIBS"
    
            AC_DEFINE_UNQUOTED(MPAGE_ENABLE, $oshmem_have_mpage,
                [Whether we can use M-PAGE supported since MOFED 1.8])

		    if test "x$oshmem_have_mpage" = "x0"; then
		        oshmem_verbs_sm_build_verbs=0
		    fi
        ])
    AS_IF([test "$oshmem_have_mpage" = "3"],
            [
              AC_CHECK_MEMBER([struct ibv_exp_reg_shared_mr_in.exp_access],
                [AC_DEFINE_UNQUOTED(MPAGE_HAVE_SMR_EXP_ACCESS, 1,
                    [exp_access field is part of ibv_exp_reg_shared_mr_in]
                    )],
                [],
                [#include <infiniband/verbs_exp.h>])
         ])

    AS_IF([test "$enable_verbs_sshmem" = "yes" -a "$oshmem_verbs_sm_build_verbs" = "0"],
          [AC_MSG_WARN([VERBS shared memory support requested but not found])
           AC_MSG_ERROR([Cannot continue])])

    AS_IF([test "$oshmem_verbs_sm_build_verbs" = "1"], [$1], [$2])

    AC_DEFINE_UNQUOTED([OSHMEM_SSHMEM_VERBS],
                       [$oshmem_verbs_sm_build_verbs],
                       [Whether we have shared memory support for verbs or not])
])
m4trace:config/autogen_found_items.m4:434: -1- m4_include([oshmem/mca/sshmem/sysv/configure.m4])
m4trace:oshmem/mca/sshmem/sysv/configure.m4:16: -1- AC_DEFUN([MCA_oshmem_sshmem_sysv_CONFIG], [
    AC_CONFIG_FILES([oshmem/mca/sshmem/sysv/Makefile])

    # do we have the sysv shm stuff?
    AC_MSG_CHECKING([if want SYSV shared memory support])
    AC_ARG_ENABLE(sysv-sshmem,
        AC_HELP_STRING([--disable-sysv-sshmem],
                       [disable sysv shared memory support (default: enabled)]))
    AS_IF([test "$enable_sysv_sshmem" = "no"],
          [AC_MSG_RESULT([no])
           oshmem_sysv_sm_build_sysv=0],
          [AC_MSG_RESULT([yes])
          AC_CHECK_FUNC(shmget,
                  [oshmem_sysv_sm_build_sysv=1],
                  [oshmem_sysv_sm_build_sysv=0])])
    AS_IF([test "$enable_sysv_sshmem" = "yes" -a "$oshmem_sysv_sm_build_sysv" = "0"],
          [AC_MSG_WARN([SYSV shared memory support requested but not found])
           AC_MSG_ERROR([Cannot continue])])

    AS_IF([test "$oshmem_sysv_sm_build_sysv" = "1"], [$1], [$2])

    AC_DEFINE_UNQUOTED([OSHMEM_SSHMEM_SYSV],
                       [$oshmem_sysv_sm_build_sysv],
                       [Whether we have shared memory support for SYSV or not])
])
m4trace:config/autogen_found_items.m4:435: -1- m4_include([oshmem/mca/sshmem/mmap/configure.m4])
m4trace:oshmem/mca/sshmem/mmap/configure.m4:16: -1- AC_DEFUN([MCA_oshmem_sshmem_mmap_CONFIG], [
    AC_CONFIG_FILES([oshmem/mca/sshmem/mmap/Makefile])

    # do we have the mmap shm stuff?
    AC_MSG_CHECKING([if want mmap shared memory support])
    AC_ARG_ENABLE(mmap-sshmem,
        AC_HELP_STRING([--disable-mmap-sshmem],
                       [disable mmap shared memory support (default: enabled)]))
    AS_IF([test "$enable_mmap_sshmem" = "no"],
          [AC_MSG_RESULT([no])
           oshmem_mmap_sm_build_mmap=0],
          [AC_MSG_RESULT([yes])
           AC_SEARCH_LIBS([mmap], [c],
                  [oshmem_mmap_sm_build_mmap=1],
                  [oshmem_mmap_sm_build_mmap=0])])
    AS_IF([test "$enable_mmap_sshmem" = "yes" -a "$oshmem_mmap_sm_build_mmap" = "0"],
          [AC_MSG_WARN([MMAP shared memory support requested but not found])
           AC_MSG_ERROR([Cannot continue])])

    AS_IF([test "$oshmem_mmap_sm_build_mmap" = "1"], [$1], [$2])

    AC_DEFINE_UNQUOTED([OSHMEM_SSHMEM_MMAP],
                       [$oshmem_mmap_sm_build_mmap],
                       [Whether we have shared memory support for mmap or not])
])
m4trace:config/autogen_found_items.m4:448: -1- m4_include([ompi/mpiext/affinity/configure.m4])
m4trace:ompi/mpiext/affinity/configure.m4:15: -1- AC_DEFUN([OMPI_MPIEXT_affinity_CONFIG], [
    AC_CONFIG_FILES([ompi/mpiext/affinity/Makefile])
    AC_CONFIG_FILES([ompi/mpiext/affinity/c/Makefile])

    # This example can always build, so we just execute $1.
    $1
])
m4trace:config/autogen_found_items.m4:449: -1- m4_include([ompi/mpiext/FTFrame/configure.m4])
m4trace:ompi/mpiext/FTFrame/configure.m4:15: -1- AC_DEFUN([OMPI_MPIEXT_FTFrame_CONFIG], [
    AC_CONFIG_FILES([ompi/mpiext/FTFrame/Makefile])

    AC_CONFIG_FILES([ompi/mpiext/FTFrame/c/Makefile])


    # This example can always build, so we just execute $1.
    $1
])
m4trace:ompi/mpiext/FTFrame/configure.m4:26: -1- AC_DEFUN([OMPI_MPIEXT_FTFrame_NEED_INIT], [1])
m4trace:config/autogen_found_items.m4:450: -1- m4_include([ompi/mpiext/cr/configure.m4])
m4trace:ompi/mpiext/cr/configure.m4:15: -1- AC_DEFUN([OMPI_MPIEXT_cr_CONFIG], [
    AC_CONFIG_FILES([ompi/mpiext/cr/Makefile])
    AC_CONFIG_FILES([ompi/mpiext/cr/c/Makefile])

    # If we don't want FT, don't compile this component
    AS_IF([test "$opal_want_ft_cr" = "1"],
        [$1],
        [$2])
])
m4trace:config/autogen_found_items.m4:463: -1- m4_include([ompi/contrib/libompitrace/configure.m4])
m4trace:ompi/contrib/libompitrace/configure.m4:24: -1- AC_DEFUN([OMPI_contrib_libompitrace_CONFIG], [
    AC_CONFIG_FILES([ompi/contrib/libompitrace/Makefile])
    $1
])
m4trace:config/autogen_found_items.m4:464: -1- m4_include([ompi/contrib/vt/configure.m4])
m4trace:ompi/contrib/vt/configure.m4:24: -1- AC_DEFUN([OMPI_contrib_vt_CONFIG], [

    AC_ARG_WITH([contrib-vt-flags],
                [AC_HELP_STRING([--with-contrib-vt-flags=FLAGS],
                                [Pass FLAGS to the VampirTrace distribution configuration script])])
    AS_IF([test "$with_contrib_vt_flags" = "yes" -o "$with_contrib_vt_flags" = "no"],
          [with_contrib_vt_flags=""])

    contrib_vt_happy=1

    # Check for enabled PMPI.
    AC_MSG_CHECKING([whether PMPI is enabled])
    if test "$WANT_MPI_PROFILING" = "1"; then
        AC_MSG_RESULT([yes])
    else
        AC_MSG_RESULT([no])
        AC_WARN([**************************************************************])
        AC_WARN([*** VampirTrace cannot be built due to disabled MPI profiling.])
        if test -z "$enable_vt"; then
            AC_WARN([*** Pausing to give you time to read this message...])
        fi
        AC_WARN([**************************************************************])
        if test -z "$enable_vt"; then
            sleep 10
        fi
        contrib_vt_happy=0
    fi

    # Check whether the used C++ STL is suitable to build VampirTrace.
    # For example, in case of using the Oracle C++ compiler, some of the needed
    # language features are missing in the default STL (libCstd). It's recommended
    # to use the STLport4 instead, which is much more conform to the C++ standard.
    if test "$contrib_vt_happy" = "1"; then
        AC_MSG_CHECKING([whether C++ STL is suitable for vt])

        # Append VampirTrace specific CXXFLAGS possibly given by --with-contrib-vt-flags
        # to CXXFLAGS. They could contain flags which are essential for the success of
        # the following configure test (e.g. -library=stlport4).
        contrib_vt_save_CXXFLAGS="$CXXFLAGS"
        eval "set x $with_contrib_vt_flags"; shift
        for contrib_vt_flag
        do
            case $contrib_vt_flag in
            CXXFLAGS=*)
                contrib_vt_flag=`echo "$contrib_vt_flag" | sed "s/CXXFLAGS=//"`
                CXXFLAGS="$contrib_vt_save_CXXFLAGS $contrib_vt_flag"
                ;;
            esac
        done

        AC_LANG_PUSH(C++)
        AC_COMPILE_IFELSE(
            [AC_LANG_PROGRAM([[#include <map>]],
                             [[std::map<int, int> map;
                               // The following assignment implicitly converts an "iterator"
                               // to a "const_interator". Although this is allowed by the C++
                               // standard, using Oracle's default STL (libCstd) will cause a
                               // compile error.
                               // Seen with Oracle Studio version 12.3 and Express 6/10.
                               std::pair<std::map<int, int>::const_iterator, bool> ret=
                               map.insert(std::pair<int, int>(123, 456));]])],
            [AC_MSG_RESULT([yes])],
            [AC_MSG_RESULT([no])
             AC_WARN([**************************************************************])
             AC_WARN([*** VampirTrace cannot be built due to your STL appears to])
             AC_WARN([*** be broken.])
             if test "x$ompi_cv_cxx_compiler_vendor" = "xsun"; then
                 AC_WARN([*** Please try again re-configuring Open MPI with using])
                 AC_WARN([*** the STLport4 by adding the compiler flag -library=stlport4])
                 AC_WARN([*** to CXXFLAGS.])
             fi
             if test -z "$enable_vt"; then
                 AC_WARN([*** Pausing to give you time to read this message...])
             fi
             AC_WARN([**************************************************************])
             if test -z "$enable_vt"; then
                 sleep 10
             fi
             contrib_vt_happy=0])
        AC_LANG_POP(C++)

        CXXFLAGS="$contrib_vt_save_CXXFLAGS"
    fi

    if test "$contrib_vt_happy" = "1"; then
        contrib_vt_args="--disable-option-checking --with-openmpi-inside=1.7"

        eval "set x $ac_configure_args"; shift
        for contrib_vt_arg
        do
            case $contrib_vt_arg in
            -with-contrib-vt-flags | --with-contrib-vt-flags | -with-contrib-vt-flags=* | --with-contrib-vt-flags=*)
                ;;
            -with-platform=* | --with-platform=*)
                ;;
            -with-cuda | --with-cuda | -with-cuda=* | --with-cuda=*)
                if test "x$with_cuda" != "xno" -a "x$with_cuda" != "x"; then
                    contrib_vt_args="$contrib_vt_args '--with-cuda-dir=$with_cuda' '--with-cuda-libdir=$with_cuda_libdir'"
                fi
                ;;
            -with-cuda-libdir | --with-cuda-libdir | -with-cuda-libdir=* | --with-cuda-libdir=*)
                ;;
            *)
                case $contrib_vt_arg in
                *\'*) contrib_vt_arg=`echo "$contrib_vt_arg" | sed "s/'/'\\\\\\\\''/g"` ;;
                esac
                contrib_vt_args="$contrib_vt_args '$contrib_vt_arg'"
                ;;
            esac
        done

        contrib_vt_args="$contrib_vt_args $with_contrib_vt_flags"

        # Run VampirTrace's configure and see if it succeeded
        OMPI_CONFIG_SUBDIR([ompi/contrib/vt/vt],
                           [$contrib_vt_args], 
                           [], [contrib_vt_happy=0])
    fi

    # If VampirTrace configured itself successfully, setup OMPI-specific
    # VampirTrace glue code to build.
    AS_IF([test "$contrib_vt_happy" = "1"],
          [$1
           AC_CONFIG_FILES([
               ompi/contrib/vt/Makefile
               ompi/contrib/vt/wrappers/Makefile
               ompi/contrib/vt/wrappers/mpicc-vt-wrapper-data.txt
               ompi/contrib/vt/wrappers/mpic++-vt-wrapper-data.txt
               ompi/contrib/vt/wrappers/mpifort-vt-wrapper-data.txt
           ])],
          [$2])
])
m4trace:configure.ac:41: -1- m4_include([config/opal_get_version.m4])
m4trace:configure.ac:51: -1- m4_pattern_forbid([^_?A[CHUM]_])
m4trace:configure.ac:51: -1- m4_pattern_forbid([_AC_])
m4trace:configure.ac:51: -1- m4_pattern_forbid([^LIBOBJS$], [do not use LIBOBJS directly, use AC_LIBOBJ (see section `AC_LIBOBJ vs LIBOBJS'])
m4trace:configure.ac:51: -1- m4_pattern_allow([^AS_FLAGS$])
m4trace:configure.ac:51: -1- m4_pattern_forbid([^_?m4_])
m4trace:configure.ac:51: -1- m4_pattern_forbid([^dnl$])
m4trace:configure.ac:51: -1- m4_pattern_forbid([^_?AS_])
m4trace:configure.ac:51: -1- m4_pattern_allow([^SHELL$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^PATH_SEPARATOR$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^exec_prefix$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^prefix$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^program_transform_name$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^bindir$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^sbindir$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^libexecdir$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^datarootdir$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^datadir$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^sysconfdir$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^sharedstatedir$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^localstatedir$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^includedir$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^oldincludedir$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^docdir$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^infodir$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^htmldir$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^dvidir$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^pdfdir$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^psdir$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^libdir$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^localedir$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^mandir$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^DEFS$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^ECHO_C$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^ECHO_N$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^ECHO_T$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^build_alias$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^host_alias$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^target_alias$])
m4trace:configure.ac:74: -1- m4_pattern_allow([^build$])
m4trace:configure.ac:74: -1- m4_pattern_allow([^build_cpu$])
m4trace:configure.ac:74: -1- m4_pattern_allow([^build_vendor$])
m4trace:configure.ac:74: -1- m4_pattern_allow([^build_os$])
m4trace:configure.ac:74: -1- m4_pattern_allow([^host$])
m4trace:configure.ac:74: -1- m4_pattern_allow([^host_cpu$])
m4trace:configure.ac:74: -1- m4_pattern_allow([^host_vendor$])
m4trace:configure.ac:74: -1- m4_pattern_allow([^host_os$])
m4trace:configure.ac:75: -1- m4_pattern_allow([^target$])
m4trace:configure.ac:75: -1- m4_pattern_allow([^target_cpu$])
m4trace:configure.ac:75: -1- m4_pattern_allow([^target_vendor$])
m4trace:configure.ac:75: -1- m4_pattern_allow([^target_os$])
m4trace:configure.ac:76: -1- m4_pattern_allow([^OPAL_ARCH$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^EXEEXT$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^OBJEXT$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:84: -1- AC_PROG_EGREP
m4trace:configure.ac:84: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^EGREP$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^STDC_HEADERS$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^_POSIX_SOURCE$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^_POSIX_1_SOURCE$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^_MINIX$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^__EXTENSIONS__$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^_ALL_SOURCE$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^_GNU_SOURCE$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^_POSIX_PTHREAD_SEMANTICS$])
m4trace:configure.ac:84: -1- m4_pattern_allow([^_TANDEM_SOURCE$])
m4trace:configure.ac:94: -1- AM_INIT_AUTOMAKE([foreign dist-bzip2 subdir-objects no-define 1.12.2 tar-ustar])
m4trace:configure.ac:94: -1- m4_pattern_allow([^AM_[A-Z]+FLAGS$])
m4trace:configure.ac:94: -1- AM_SET_CURRENT_AUTOMAKE_VERSION
m4trace:configure.ac:94: -1- AM_AUTOMAKE_VERSION([1.12.2])
m4trace:configure.ac:94: -1- _AM_AUTOCONF_VERSION([2.69])
m4trace:configure.ac:94: -1- m4_pattern_allow([^INSTALL_PROGRAM$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^INSTALL_SCRIPT$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^INSTALL_DATA$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^am__isrc$])
m4trace:configure.ac:94: -1- _AM_SUBST_NOTMAKE([am__isrc])
m4trace:configure.ac:94: -1- m4_pattern_allow([^CYGPATH_W$])
m4trace:configure.ac:94: -1- _AM_SET_OPTIONS([foreign dist-bzip2 subdir-objects no-define 1.12.2 tar-ustar])
m4trace:configure.ac:94: -1- _AM_SET_OPTION([foreign])
m4trace:configure.ac:94: -2- _AM_MANGLE_OPTION([foreign])
m4trace:configure.ac:94: -1- _AM_SET_OPTION([dist-bzip2])
m4trace:configure.ac:94: -2- _AM_MANGLE_OPTION([dist-bzip2])
m4trace:configure.ac:94: -1- _AM_SET_OPTION([subdir-objects])
m4trace:configure.ac:94: -2- _AM_MANGLE_OPTION([subdir-objects])
m4trace:configure.ac:94: -1- _AM_SET_OPTION([no-define])
m4trace:configure.ac:94: -2- _AM_MANGLE_OPTION([no-define])
m4trace:configure.ac:94: -1- _AM_SET_OPTION([1.12.2])
m4trace:configure.ac:94: -2- _AM_MANGLE_OPTION([1.12.2])
m4trace:configure.ac:94: -1- _AM_SET_OPTION([tar-ustar])
m4trace:configure.ac:94: -2- _AM_MANGLE_OPTION([tar-ustar])
m4trace:configure.ac:94: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:94: -1- _AM_IF_OPTION([no-define], [], [AC_DEFINE_UNQUOTED([PACKAGE], ["$PACKAGE"], [Name of package])
 AC_DEFINE_UNQUOTED([VERSION], ["$VERSION"], [Version number of package])])
m4trace:configure.ac:94: -2- _AM_MANGLE_OPTION([no-define])
m4trace:configure.ac:94: -1- AM_SANITY_CHECK
m4trace:configure.ac:94: -1- AM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])
m4trace:configure.ac:94: -1- AM_MISSING_HAS_RUN
m4trace:configure.ac:94: -1- AM_AUX_DIR_EXPAND
m4trace:configure.ac:94: -1- m4_pattern_allow([^ACLOCAL$])
m4trace:configure.ac:94: -1- AM_MISSING_PROG([AUTOCONF], [autoconf])
m4trace:configure.ac:94: -1- m4_pattern_allow([^AUTOCONF$])
m4trace:configure.ac:94: -1- AM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])
m4trace:configure.ac:94: -1- m4_pattern_allow([^AUTOMAKE$])
m4trace:configure.ac:94: -1- AM_MISSING_PROG([AUTOHEADER], [autoheader])
m4trace:configure.ac:94: -1- m4_pattern_allow([^AUTOHEADER$])
m4trace:configure.ac:94: -1- AM_MISSING_PROG([MAKEINFO], [makeinfo])
m4trace:configure.ac:94: -1- m4_pattern_allow([^MAKEINFO$])
m4trace:configure.ac:94: -1- AM_PROG_INSTALL_SH
m4trace:configure.ac:94: -1- m4_pattern_allow([^install_sh$])
m4trace:configure.ac:94: -1- AM_PROG_INSTALL_STRIP
m4trace:configure.ac:94: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^INSTALL_STRIP_PROGRAM$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^MKDIR_P$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^mkdir_p$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^AWK$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^SET_MAKE$])
m4trace:configure.ac:94: -1- AM_SET_LEADING_DOT
m4trace:configure.ac:94: -1- m4_pattern_allow([^am__leading_dot$])
m4trace:configure.ac:94: -1- _AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])], [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
m4trace:configure.ac:94: -2- _AM_MANGLE_OPTION([tar-ustar])
m4trace:configure.ac:94: -1- _AM_PROG_TAR([ustar])
m4trace:configure.ac:94: -1- m4_pattern_allow([^AMTAR$])
m4trace:configure.ac:94: -1- AM_RUN_LOG([$_am_tar --version])
m4trace:configure.ac:94: -1- AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])
m4trace:configure.ac:94: -1- AM_RUN_LOG([$am__untar <conftest.tar])
m4trace:configure.ac:94: -1- m4_pattern_allow([^am__tar$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^am__untar$])
m4trace:configure.ac:94: -1- _AM_IF_OPTION([no-dependencies], [], [AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES([CC])],
		  [m4_define([AC_PROG_CC],
			     m4_defn([AC_PROG_CC])[_AM_DEPENDENCIES([CC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES([CXX])],
		  [m4_define([AC_PROG_CXX],
			     m4_defn([AC_PROG_CXX])[_AM_DEPENDENCIES([CXX])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES([OBJC])],
		  [m4_define([AC_PROG_OBJC],
			     m4_defn([AC_PROG_OBJC])[_AM_DEPENDENCIES([OBJC])])])dnl
dnl Support for Objective C++ was only introduced in Autoconf 2.65,
dnl but we still cater to Autoconf 2.62.
m4_ifdef([AC_PROG_OBJCXX],
[AC_PROVIDE_IFELSE([AC_PROG_OBJCXX],
		  [_AM_DEPENDENCIES([OBJCXX])],
		  [m4_define([AC_PROG_OBJCXX],
			     m4_defn([AC_PROG_OBJCXX])[_AM_DEPENDENCIES([OBJCXX])])])])dnl
])
m4trace:configure.ac:94: -2- _AM_MANGLE_OPTION([no-dependencies])
m4trace:configure.ac:94: -1- _AM_DEPENDENCIES([CC])
m4trace:configure.ac:94: -1- AM_SET_DEPDIR
m4trace:configure.ac:94: -1- m4_pattern_allow([^DEPDIR$])
m4trace:configure.ac:94: -1- AM_OUTPUT_DEPENDENCY_COMMANDS
m4trace:configure.ac:94: -1- AM_MAKE_INCLUDE
m4trace:configure.ac:94: -1- m4_pattern_allow([^am__include$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^am__quote$])
m4trace:configure.ac:94: -1- AM_DEP_TRACK
m4trace:configure.ac:94: -1- AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
m4trace:configure.ac:94: -1- m4_pattern_allow([^AMDEP_TRUE$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^AMDEP_FALSE$])
m4trace:configure.ac:94: -1- _AM_SUBST_NOTMAKE([AMDEP_TRUE])
m4trace:configure.ac:94: -1- _AM_SUBST_NOTMAKE([AMDEP_FALSE])
m4trace:configure.ac:94: -1- m4_pattern_allow([^AMDEPBACKSLASH$])
m4trace:configure.ac:94: -1- _AM_SUBST_NOTMAKE([AMDEPBACKSLASH])
m4trace:configure.ac:94: -1- m4_pattern_allow([^am__nodep$])
m4trace:configure.ac:94: -1- _AM_SUBST_NOTMAKE([am__nodep])
m4trace:configure.ac:94: -1- m4_pattern_allow([^CCDEPMODE$])
m4trace:configure.ac:94: -1- AM_CONDITIONAL([am__fastdepCC], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CC_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:94: -1- m4_pattern_allow([^am__fastdepCC_TRUE$])
m4trace:configure.ac:94: -1- m4_pattern_allow([^am__fastdepCC_FALSE$])
m4trace:configure.ac:94: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_TRUE])
m4trace:configure.ac:94: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_FALSE])
m4trace:configure.ac:94: -1- _AM_IF_OPTION([silent-rules], [AC_REQUIRE([AM_SILENT_RULES])])
m4trace:configure.ac:94: -2- _AM_MANGLE_OPTION([silent-rules])
m4trace:configure.ac:100: -1- AM_SILENT_RULES([yes])
m4trace:configure.ac:100: -1- m4_pattern_allow([^AM_V$])
m4trace:configure.ac:100: -1- AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:100: -1- _AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:100: -1- m4_pattern_allow([^AM_DEFAULT_V$])
m4trace:configure.ac:100: -1- AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:100: -1- _AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:100: -1- m4_pattern_allow([^AM_DEFAULT_VERBOSITY$])
m4trace:configure.ac:100: -1- m4_pattern_allow([^AM_BACKSLASH$])
m4trace:configure.ac:100: -1- _AM_SUBST_NOTMAKE([AM_BACKSLASH])
m4trace:configure.ac:103: -1- m4_pattern_allow([^CONFIGURE_DEPENDENCIES$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^libmpi_so_version$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^libmpi_cxx_so_version$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^libmpi_mpifh_so_version$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^libmpi_usempi_tkr_so_version$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^libmpi_usempi_ignore_tkr_so_version$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^libmpi_usempif08_so_version$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^libmpi_java_so_version$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^libmca_common_cuda_so_version$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^libmca_common_mx_so_version$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^libmca_common_ofacm_so_version$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^libmca_common_sm_so_version$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^libmca_common_ugni_so_version$])
m4trace:configure.ac:130: -1- m4_pattern_allow([^libmca_common_verbs_so_version$])
m4trace:configure.ac:149: -1- m4_pattern_allow([^libopen_rte_so_version$])
m4trace:configure.ac:151: -1- m4_pattern_allow([^liboshmem_so_version$])
m4trace:configure.ac:153: -1- m4_pattern_allow([^libmca_opal_common_hwloc_so_version$])
m4trace:configure.ac:154: -1- m4_pattern_allow([^libmca_opal_common_pmi_so_version$])
m4trace:configure.ac:155: -1- m4_pattern_allow([^libopen_pal_so_version$])
m4trace:configure.ac:198: -1- m4_pattern_allow([^OMPI_TOP_BUILDDIR$])
m4trace:configure.ac:201: -1- m4_pattern_allow([^OMPI_TOP_SRCDIR$])
m4trace:configure.ac:247: -1- m4_pattern_allow([^top_ompi_srcdir$])
m4trace:configure.ac:249: -1- m4_pattern_allow([^top_ompi_builddir$])
m4trace:configure.ac:265: -1- AM_CONDITIONAL([PROJECT_OMPI], [$project_ompi_amc])
m4trace:configure.ac:265: -1- m4_pattern_allow([^PROJECT_OMPI_TRUE$])
m4trace:configure.ac:265: -1- m4_pattern_allow([^PROJECT_OMPI_FALSE$])
m4trace:configure.ac:265: -1- _AM_SUBST_NOTMAKE([PROJECT_OMPI_TRUE])
m4trace:configure.ac:265: -1- _AM_SUBST_NOTMAKE([PROJECT_OMPI_FALSE])
m4trace:configure.ac:269: -1- AM_CONDITIONAL([PROJECT_ORTE], [$project_orte_amc])
m4trace:configure.ac:269: -1- m4_pattern_allow([^PROJECT_ORTE_TRUE$])
m4trace:configure.ac:269: -1- m4_pattern_allow([^PROJECT_ORTE_FALSE$])
m4trace:configure.ac:269: -1- _AM_SUBST_NOTMAKE([PROJECT_ORTE_TRUE])
m4trace:configure.ac:269: -1- _AM_SUBST_NOTMAKE([PROJECT_ORTE_FALSE])
m4trace:configure.ac:273: -1- AM_CONDITIONAL([PROJECT_OSHMEM], [$project_oshmem_amc])
m4trace:configure.ac:273: -1- m4_pattern_allow([^PROJECT_OSHMEM_TRUE$])
m4trace:configure.ac:273: -1- m4_pattern_allow([^PROJECT_OSHMEM_FALSE$])
m4trace:configure.ac:273: -1- _AM_SUBST_NOTMAKE([PROJECT_OSHMEM_TRUE])
m4trace:configure.ac:273: -1- _AM_SUBST_NOTMAKE([PROJECT_OSHMEM_FALSE])
m4trace:configure.ac:296: -1- AM_ENABLE_SHARED
m4trace:configure.ac:296: -1- _m4_warn([obsolete], [The macro `AM_ENABLE_SHARED' is obsolete.
You should run autoupdate.], [/usr/local/share/aclocal/ltoptions.m4:203: AM_ENABLE_SHARED is expanded from...
configure.ac:296: the top level])
m4trace:configure.ac:296: -1- AC_ENABLE_SHARED([])
m4trace:configure.ac:297: -1- AM_DISABLE_STATIC
m4trace:configure.ac:297: -1- _m4_warn([obsolete], [The macro `AM_DISABLE_STATIC' is obsolete.
You should run autoupdate.], [/usr/local/share/aclocal/ltoptions.m4:258: AM_DISABLE_STATIC is expanded from...
configure.ac:297: the top level])
m4trace:configure.ac:297: -1- AC_DISABLE_STATIC([])
m4trace:configure.ac:339: -1- AM_CONDITIONAL([OMPI_NEED_WINDOWS_REPLACEMENTS], [test "$ompi_cv_c_compiler_vendor" = "microsoft" ])
m4trace:configure.ac:339: -1- m4_pattern_allow([^OMPI_NEED_WINDOWS_REPLACEMENTS_TRUE$])
m4trace:configure.ac:339: -1- m4_pattern_allow([^OMPI_NEED_WINDOWS_REPLACEMENTS_FALSE$])
m4trace:configure.ac:339: -1- _AM_SUBST_NOTMAKE([OMPI_NEED_WINDOWS_REPLACEMENTS_TRUE])
m4trace:configure.ac:339: -1- _AM_SUBST_NOTMAKE([OMPI_NEED_WINDOWS_REPLACEMENTS_FALSE])
m4trace:configure.ac:353: -1- m4_pattern_allow([^HAVE_INT8_T$])
m4trace:configure.ac:354: -1- m4_pattern_allow([^HAVE_UINT8_T$])
m4trace:configure.ac:355: -1- m4_pattern_allow([^HAVE_INT16_T$])
m4trace:configure.ac:356: -1- m4_pattern_allow([^HAVE_UINT16_T$])
m4trace:configure.ac:357: -1- m4_pattern_allow([^HAVE_INT32_T$])
m4trace:configure.ac:358: -1- m4_pattern_allow([^HAVE_UINT32_T$])
m4trace:configure.ac:359: -1- m4_pattern_allow([^HAVE_INT64_T$])
m4trace:configure.ac:360: -1- m4_pattern_allow([^HAVE_UINT64_T$])
m4trace:configure.ac:361: -1- m4_pattern_allow([^HAVE_INT128_T$])
m4trace:configure.ac:362: -1- m4_pattern_allow([^HAVE_UINT128_T$])
m4trace:configure.ac:363: -1- m4_pattern_allow([^HAVE_LONG_LONG$])
m4trace:configure.ac:365: -1- m4_pattern_allow([^HAVE___FLOAT128$])
m4trace:configure.ac:366: -1- m4_pattern_allow([^HAVE_LONG_DOUBLE$])
m4trace:configure.ac:369: -1- m4_pattern_allow([^HAVE_COMPLEX_H$])
m4trace:configure.ac:370: -1- m4_pattern_allow([^HAVE_FLOAT__COMPLEX$])
m4trace:configure.ac:371: -1- m4_pattern_allow([^HAVE_DOUBLE__COMPLEX$])
m4trace:configure.ac:372: -1- m4_pattern_allow([^HAVE_LONG_DOUBLE__COMPLEX$])
m4trace:configure.ac:374: -1- m4_pattern_allow([^HAVE_INTPTR_T$])
m4trace:configure.ac:375: -1- m4_pattern_allow([^HAVE_UINTPTR_T$])
m4trace:configure.ac:376: -1- m4_pattern_allow([^HAVE_MODE_T$])
m4trace:configure.ac:377: -1- m4_pattern_allow([^HAVE_SSIZE_T$])
m4trace:configure.ac:378: -1- m4_pattern_allow([^HAVE_PTRDIFF_T$])
m4trace:configure.ac:384: -1- m4_pattern_allow([^SIZEOF_CHAR$])
m4trace:configure.ac:385: -1- m4_pattern_allow([^SIZEOF_SHORT$])
m4trace:configure.ac:386: -1- m4_pattern_allow([^SIZEOF_INT$])
m4trace:configure.ac:387: -1- m4_pattern_allow([^SIZEOF_LONG$])
m4trace:configure.ac:389: -1- m4_pattern_allow([^SIZEOF_LONG_LONG$])
m4trace:configure.ac:391: -1- m4_pattern_allow([^SIZEOF_FLOAT$])
m4trace:configure.ac:392: -1- m4_pattern_allow([^SIZEOF_DOUBLE$])
m4trace:configure.ac:394: -1- m4_pattern_allow([^SIZEOF_LONG_DOUBLE$])
m4trace:configure.ac:397: -1- m4_pattern_allow([^SIZEOF___FLOAT128$])
m4trace:configure.ac:402: -1- m4_pattern_allow([^SIZEOF_FLOAT__COMPLEX$])
m4trace:configure.ac:405: -1- m4_pattern_allow([^SIZEOF_DOUBLE__COMPLEX$])
m4trace:configure.ac:408: -1- m4_pattern_allow([^SIZEOF_LONG_DOUBLE__COMPLEX$])
m4trace:configure.ac:411: -1- m4_pattern_allow([^SIZEOF_VOID_P$])
m4trace:configure.ac:412: -1- m4_pattern_allow([^SIZEOF_SIZE_T$])
m4trace:configure.ac:414: -1- m4_pattern_allow([^SIZEOF_SSIZE_T$])
m4trace:configure.ac:417: -1- m4_pattern_allow([^SIZEOF_PTRDIFF_T$])
m4trace:configure.ac:419: -1- m4_pattern_allow([^SIZEOF_WCHAR_T$])
m4trace:configure.ac:478: -1- m4_pattern_allow([^OPAL_NEED_C_BOOL$])
m4trace:configure.ac:481: -1- m4_pattern_allow([^SIZEOF__BOOL$])
m4trace:configure.ac:517: -1- m4_pattern_allow([^restrict$])
m4trace:configure.ac:517: -1- m4_pattern_allow([^restrict$])
m4trace:configure.ac:598: -1- AM_PROG_AS
m4trace:configure.ac:598: -1- m4_pattern_allow([^CCAS$])
m4trace:configure.ac:598: -1- m4_pattern_allow([^CCASFLAGS$])
m4trace:configure.ac:598: -1- _AM_IF_OPTION([no-dependencies], [], [_AM_DEPENDENCIES([CCAS])])
m4trace:configure.ac:598: -2- _AM_MANGLE_OPTION([no-dependencies])
m4trace:configure.ac:598: -1- _AM_DEPENDENCIES([CCAS])
m4trace:configure.ac:598: -1- m4_pattern_allow([^CCASDEPMODE$])
m4trace:configure.ac:598: -1- AM_CONDITIONAL([am__fastdepCCAS], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CCAS_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:598: -1- m4_pattern_allow([^am__fastdepCCAS_TRUE$])
m4trace:configure.ac:598: -1- m4_pattern_allow([^am__fastdepCCAS_FALSE$])
m4trace:configure.ac:598: -1- _AM_SUBST_NOTMAKE([am__fastdepCCAS_TRUE])
m4trace:configure.ac:598: -1- _AM_SUBST_NOTMAKE([am__fastdepCCAS_FALSE])
m4trace:configure.ac:615: -1- AM_CONDITIONAL([OSHMEM_BUILD_FORTRAN_BINDINGS], [test "$enable_oshmem" = "yes" -a "$ompi_fortran_happy" = "1" -a \
          "$OMPI_WANT_FORTRAN_BINDINGS" = "1" -a \
          "$enable_oshmem_fortran" != "no"])
m4trace:configure.ac:615: -1- m4_pattern_allow([^OSHMEM_BUILD_FORTRAN_BINDINGS_TRUE$])
m4trace:configure.ac:615: -1- m4_pattern_allow([^OSHMEM_BUILD_FORTRAN_BINDINGS_FALSE$])
m4trace:configure.ac:615: -1- _AM_SUBST_NOTMAKE([OSHMEM_BUILD_FORTRAN_BINDINGS_TRUE])
m4trace:configure.ac:615: -1- _AM_SUBST_NOTMAKE([OSHMEM_BUILD_FORTRAN_BINDINGS_FALSE])
m4trace:configure.ac:643: -1- m4_pattern_allow([^HAVE_SYS_MOUNT_H$])
m4trace:configure.ac:650: -1- m4_pattern_allow([^HAVE_SYS_SYSCTL_H$])
m4trace:configure.ac:659: -1- m4_pattern_allow([^HAVE_NET_IF_H$])
m4trace:configure.ac:685: -1- m4_pattern_allow([^HAVE_STDBOOL_H$])
m4trace:configure.ac:700: -1- m4_pattern_allow([^OPAL_USE_STDBOOL_H$])
m4trace:configure.ac:716: -1- m4_pattern_allow([^SIZEOF_PID_T$])
m4trace:configure.ac:718: -1- m4_pattern_allow([^HAVE_SOCKLEN_T$])
m4trace:configure.ac:718: -1- m4_pattern_allow([^HAVE_STRUCT_SOCKADDR_IN$])
m4trace:configure.ac:718: -1- m4_pattern_allow([^HAVE_STRUCT_SOCKADDR_IN6$])
m4trace:configure.ac:718: -1- m4_pattern_allow([^HAVE_STRUCT_SOCKADDR_STORAGE$])
m4trace:configure.ac:728: -1- m4_pattern_allow([^HAVE_DECL_AF_UNSPEC$])
m4trace:configure.ac:728: -1- m4_pattern_allow([^HAVE_DECL_PF_UNSPEC$])
m4trace:configure.ac:728: -1- m4_pattern_allow([^HAVE_DECL_AF_INET6$])
m4trace:configure.ac:728: -1- m4_pattern_allow([^HAVE_DECL_PF_INET6$])
m4trace:configure.ac:745: -1- m4_pattern_allow([^OPAL_HAVE_SA_RESTART$])
m4trace:configure.ac:750: -1- m4_pattern_allow([^HAVE_STRUCT_SOCKADDR_SA_LEN$])
m4trace:configure.ac:756: -1- m4_pattern_allow([^HAVE_STRUCT_DIRENT_D_TYPE$])
m4trace:configure.ac:760: -1- m4_pattern_allow([^HAVE_SIGINFO_T_SI_FD$])
m4trace:configure.ac:761: -1- m4_pattern_allow([^HAVE_SIGINFO_T_SI_BAND$])
m4trace:configure.ac:766: -1- m4_pattern_allow([^HAVE_STRUCT_STATFS_F_TYPE$])
m4trace:configure.ac:776: -1- m4_pattern_allow([^HAVE_STRUCT_STATFS_F_FSTYPENAME$])
m4trace:configure.ac:795: -1- m4_pattern_allow([^HAVE_STRUCT_STATVFS_F_BASETYPE$])
m4trace:configure.ac:802: -1- m4_pattern_allow([^HAVE_STRUCT_STATVFS_F_FSTYPENAME$])
m4trace:configure.ac:826: -1- m4_pattern_allow([^OPAL_PTRDIFF_TYPE$])
m4trace:configure.ac:893: -1- m4_pattern_allow([^HAVE_UNIX_BYTESWAP$])
m4trace:configure.ac:903: -1- m4_pattern_allow([^OPAL_HAVE_VA_COPY$])
m4trace:configure.ac:908: -1- m4_pattern_allow([^OPAL_HAVE_UNDERSCORE_VA_COPY$])
m4trace:configure.ac:911: -1- m4_pattern_allow([^HAVE_DECL___FUNC__$])
m4trace:configure.ac:938: -1- m4_pattern_allow([^OPAL_HAVE__SC_NPROCESSORS_ONLN$])
m4trace:configure.ac:943: -1- m4_pattern_allow([^WORDS_BIGENDIAN$])
m4trace:configure.ac:943: -1- m4_pattern_allow([^AC_APPLE_UNIVERSAL_BUILD$])
m4trace:configure.ac:962: -1- m4_pattern_allow([^OPAL_ALIGN_WORD_SIZE_INTEGERS$])
m4trace:configure.ac:995: -1- m4_pattern_allow([^LN_S$])
m4trace:configure.ac:997: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:998: -1- AC_PROG_EGREP
m4trace:configure.ac:998: -1- m4_pattern_allow([^EGREP$])
m4trace:configure.ac:1003: -1- AM_PROG_AS
m4trace:configure.ac:1003: -1- m4_pattern_allow([^CCAS$])
m4trace:configure.ac:1003: -1- m4_pattern_allow([^CCASFLAGS$])
m4trace:configure.ac:1003: -1- _AM_IF_OPTION([no-dependencies], [], [_AM_DEPENDENCIES([CCAS])])
m4trace:configure.ac:1003: -2- _AM_MANGLE_OPTION([no-dependencies])
m4trace:configure.ac:1003: -1- _AM_DEPENDENCIES([CCAS])
m4trace:configure.ac:1003: -1- m4_pattern_allow([^CCASDEPMODE$])
m4trace:configure.ac:1003: -1- AM_CONDITIONAL([am__fastdepCCAS], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CCAS_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:1003: -1- m4_pattern_allow([^am__fastdepCCAS_TRUE$])
m4trace:configure.ac:1003: -1- m4_pattern_allow([^am__fastdepCCAS_FALSE$])
m4trace:configure.ac:1003: -1- _AM_SUBST_NOTMAKE([am__fastdepCCAS_TRUE])
m4trace:configure.ac:1003: -1- _AM_SUBST_NOTMAKE([am__fastdepCCAS_FALSE])
m4trace:configure.ac:1004: -1- AM_PROG_LEX
m4trace:configure.ac:1004: -1- m4_pattern_allow([^LEX$])
m4trace:configure.ac:1004: -1- m4_pattern_allow([^LEX_OUTPUT_ROOT$])
m4trace:configure.ac:1004: -1- m4_pattern_allow([^LEXLIB$])
m4trace:configure.ac:1004: -1- m4_pattern_allow([^YYTEXT_POINTER$])
m4trace:configure.ac:1050: -1- m4_pattern_allow([^HAVE_DECL_RLIMIT_NPROC$])
m4trace:configure.ac:1060: -1- m4_pattern_allow([^HAVE_DECL_RLIMIT_MEMLOCK$])
m4trace:configure.ac:1070: -1- m4_pattern_allow([^HAVE_DECL_RLIMIT_NOFILE$])
m4trace:configure.ac:1080: -1- m4_pattern_allow([^HAVE_DECL_RLIMIT_FSIZE$])
m4trace:configure.ac:1090: -1- m4_pattern_allow([^HAVE_DECL_RLIMIT_CORE$])
m4trace:configure.ac:1100: -1- m4_pattern_allow([^HAVE_DECL_RLIMIT_STACK$])
m4trace:configure.ac:1110: -1- m4_pattern_allow([^HAVE_DECL_RLIMIT_AS$])
m4trace:configure.ac:1198: -1- LT_CONFIG_LTDL_DIR([opal/libltdl], [subproject])
m4trace:configure.ac:1199: -1- LTDL_CONVENIENCE
m4trace:configure.ac:1199: -1- m4_pattern_allow([^LIBLTDL$])
m4trace:configure.ac:1199: -1- m4_pattern_allow([^LTDLDEPS$])
m4trace:configure.ac:1199: -1- m4_pattern_allow([^LTDLINCL$])
m4trace:configure.ac:1199: -1- m4_pattern_allow([^INCLTDL$])
m4trace:configure.ac:1200: -1- LT_INIT([dlopen win32-dll])
m4trace:configure.ac:1200: -1- m4_pattern_forbid([^_?LT_[A-Z_]+$])
m4trace:configure.ac:1200: -1- m4_pattern_allow([^(_LT_EOF|LT_DLGLOBAL|LT_DLLAZY_OR_NOW|LT_MULTI_MODULE)$])
m4trace:configure.ac:1200: -1- LTOPTIONS_VERSION
m4trace:configure.ac:1200: -1- LTSUGAR_VERSION
m4trace:configure.ac:1200: -1- LTVERSION_VERSION
m4trace:configure.ac:1200: -1- LTOBSOLETE_VERSION
m4trace:configure.ac:1200: -1- _LT_PROG_LTMAIN
m4trace:configure.ac:1200: -1- m4_pattern_allow([^AS$])
m4trace:configure.ac:1200: -1- m4_pattern_allow([^DLLTOOL$])
m4trace:configure.ac:1200: -1- m4_pattern_allow([^OBJDUMP$])
m4trace:configure.ac:1200: -1- m4_pattern_allow([^LIBTOOL$])
m4trace:configure.ac:1200: -1- _LT_PREPARE_SED_QUOTE_VARS
m4trace:configure.ac:1200: -1- _LT_PROG_ECHO_BACKSLASH
m4trace:configure.ac:1200: -1- LT_PATH_LD
m4trace:configure.ac:1200: -1- m4_pattern_allow([^SED$])
m4trace:configure.ac:1200: -1- m4_pattern_allow([^FGREP$])
m4trace:configure.ac:1200: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:1200: -1- m4_pattern_allow([^LD$])
m4trace:configure.ac:1200: -1- LT_PATH_NM
m4trace:configure.ac:1200: -1- m4_pattern_allow([^DUMPBIN$])
m4trace:configure.ac:1200: -1- m4_pattern_allow([^ac_ct_DUMPBIN$])
m4trace:configure.ac:1200: -1- m4_pattern_allow([^DUMPBIN$])
m4trace:configure.ac:1200: -1- m4_pattern_allow([^NM$])
m4trace:configure.ac:1200: -1- LT_CMD_MAX_LEN
m4trace:configure.ac:1200: -1- m4_pattern_allow([^OBJDUMP$])
m4trace:configure.ac:1200: -1- m4_pattern_allow([^OBJDUMP$])
m4trace:configure.ac:1200: -1- m4_pattern_allow([^DLLTOOL$])
m4trace:configure.ac:1200: -1- m4_pattern_allow([^DLLTOOL$])
m4trace:configure.ac:1200: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:1200: -1- m4_pattern_allow([^ac_ct_AR$])
m4trace:configure.ac:1200: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:1200: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:1200: -1- _LT_WITH_SYSROOT
m4trace:configure.ac:1200: -1- m4_pattern_allow([LT_OBJDIR])
m4trace:configure.ac:1200: -1- m4_pattern_allow([^LT_OBJDIR$])
m4trace:configure.ac:1200: -1- _LT_CC_BASENAME([$compiler])
m4trace:configure.ac:1200: -1- _LT_PATH_TOOL_PREFIX([${ac_tool_prefix}file], [/usr/bin$PATH_SEPARATOR$PATH])
m4trace:configure.ac:1200: -1- _LT_PATH_TOOL_PREFIX([file], [/usr/bin$PATH_SEPARATOR$PATH])
m4trace:configure.ac:1200: -1- LT_SUPPORTED_TAG([CC])
m4trace:configure.ac:1200: -1- _LT_COMPILER_BOILERPLATE
m4trace:configure.ac:1200: -1- _LT_LINKER_BOILERPLATE
m4trace:configure.ac:1200: -1- _LT_COMPILER_OPTION([if $compiler supports -fno-rtti -fno-exceptions], [lt_cv_prog_compiler_rtti_exceptions], [-fno-rtti -fno-exceptions], [], [_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, )="$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, ) -fno-rtti -fno-exceptions"])
m4trace:configure.ac:1200: -1- _LT_COMPILER_OPTION([if $compiler PIC flag $_LT_TAGVAR(lt_prog_compiler_pic, ) works], [_LT_TAGVAR(lt_cv_prog_compiler_pic_works, )], [$_LT_TAGVAR(lt_prog_compiler_pic, )@&t@m4_if([],[],[ -DPIC],[m4_if([],[CXX],[ -DPIC],[])])], [], [case $_LT_TAGVAR(lt_prog_compiler_pic, ) in
     "" | " "*) ;;
     *) _LT_TAGVAR(lt_prog_compiler_pic, )=" $_LT_TAGVAR(lt_prog_compiler_pic, )" ;;
     esac], [_LT_TAGVAR(lt_prog_compiler_pic, )=
     _LT_TAGVAR(lt_prog_compiler_can_build_shared, )=no])
m4trace:configure.ac:1200: -1- _LT_LINKER_OPTION([if $compiler static flag $lt_tmp_static_flag works], [lt_cv_prog_compiler_static_works], [$lt_tmp_static_flag], [], [_LT_TAGVAR(lt_prog_compiler_static, )=])
m4trace:configure.ac:1200: -1- m4_pattern_allow([^MANIFEST_TOOL$])
m4trace:configure.ac:1200: -1- _LT_REQUIRED_DARWIN_CHECKS
m4trace:configure.ac:1200: -1- m4_pattern_allow([^DSYMUTIL$])
m4trace:configure.ac:1200: -1- m4_pattern_allow([^NMEDIT$])
m4trace:configure.ac:1200: -1- m4_pattern_allow([^LIPO$])
m4trace:configure.ac:1200: -1- m4_pattern_allow([^OTOOL$])
m4trace:configure.ac:1200: -1- m4_pattern_allow([^OTOOL64$])
m4trace:configure.ac:1200: -1- _LT_LINKER_OPTION([if $CC understands -b], [lt_cv_prog_compiler__b], [-b], [_LT_TAGVAR(archive_cmds, )='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'], [_LT_TAGVAR(archive_cmds, )='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'])
m4trace:configure.ac:1200: -1- LT_SYS_DLOPEN_SELF
m4trace:configure.ac:1200: -1- m4_pattern_allow([^HAVE_DLFCN_H$])
m4trace:configure.ac:1233: -1- m4_pattern_allow([^OPAL_DYN_LIB_PREFIX$])
m4trace:configure.ac:1234: -1- m4_pattern_allow([^OPAL_DYN_LIB_SUFFIX$])
m4trace:configure.ac:1239: -1- LT_OUTPUT
m4trace:configure.ac:1239: -1- _m4_warn([obsolete], [back quotes and double quotes must not be escaped in: unrecognized option: $[1]
Try \`$[0] --help' for more information.], [/usr/local/share/aclocal/libtool.m4:609: LT_OUTPUT is expanded from...
configure.ac:1239: the top level])
m4trace:configure.ac:1239: -1- _m4_warn([obsolete], [back quotes and double quotes must not be escaped in: unrecognized argument: $[1]
Try \`$[0] --help' for more information.], [/usr/local/share/aclocal/libtool.m4:609: LT_OUTPUT is expanded from...
configure.ac:1239: the top level])
m4trace:configure.ac:1239: -1- _LT_PROG_LTMAIN
m4trace:configure.ac:1284: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:1285: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:1286: -1- m4_pattern_allow([^CXXFLAGS$])
m4trace:configure.ac:1287: -1- m4_pattern_allow([^CXXCPPFLAGS$])
m4trace:configure.ac:1288: -1- m4_pattern_allow([^FFLAGS$])
m4trace:configure.ac:1288: -1- m4_pattern_allow([^FCFLAGS$])
m4trace:configure.ac:1288: -1- m4_pattern_allow([^OMPI_LIBMPI_EXTRA_LIBS$])
m4trace:configure.ac:1288: -1- m4_pattern_allow([^OMPI_LIBMPI_EXTRA_LDFLAGS$])
m4trace:configure.ac:1297: -1- m4_pattern_allow([^AMCA_PARAM_SETS_DIR$])
m4trace:configure.ac:1306: -1- m4_pattern_allow([^PERL$])
m4trace:configure.ac:1315: -1- m4_pattern_allow([^OPAL_STDC_HEADERS$])
m4trace:configure.ac:1319: -1- m4_pattern_allow([^OPAL_HAVE_SYS_TIME_H$])
m4trace:configure.ac:1323: -1- m4_pattern_allow([^OPAL_HAVE_LONG_LONG$])
m4trace:configure.ac:1327: -1- m4_pattern_allow([^OPAL_HAVE_SYS_SYNCH_H$])
m4trace:configure.ac:1380: -1- m4_pattern_allow([^ompidatadir$])
m4trace:configure.ac:1381: -1- m4_pattern_allow([^ompilibdir$])
m4trace:configure.ac:1382: -1- m4_pattern_allow([^ompiincludedir$])
m4trace:configure.ac:1416: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:1416: -1- m4_pattern_allow([^LTLIBOBJS$])
m4trace:configure.ac:1416: -1- AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])
m4trace:configure.ac:1416: -1- m4_pattern_allow([^am__EXEEXT_TRUE$])
m4trace:configure.ac:1416: -1- m4_pattern_allow([^am__EXEEXT_FALSE$])
m4trace:configure.ac:1416: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_TRUE])
m4trace:configure.ac:1416: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_FALSE])
m4trace:configure.ac:1416: -1- _AC_AM_CONFIG_HEADER_HOOK(["$ac_file"])
m4trace:configure.ac:1416: -1- _AM_OUTPUT_DEPENDENCY_COMMANDS
m4trace:configure.ac:1416: -1- _LT_PROG_LTMAIN
